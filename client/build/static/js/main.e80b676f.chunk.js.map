{"version":3,"sources":["reducers/user.reducer.js","reducers/admin.reducer.js","reducers/client.reducer.js","reducers/navigation.reducer.js","reducers/reducers.js","store/store.js","actions/connexion.action.js","helper/authorizationHelper.js","actions/navigation.action.js","helper/routeHelper.js","helper/PrivateClientRoute.js","helper/PrivateAdminRoute.js","components/Display.js","components/connexion/Connexion.js","actions/admin.action.js","components/administration/home/ClientList.js","components/administration/topBar/AdminSideBar.js","components/client/dashboard/Bar.js","components/client/dashboard/Pie.js","actions/client.action.js","components/client/dashboard/DashboardElement.js","components/client/dashboard/ClientDashboard.js","components/administration/home/NewClientForm.js","components/administration/home/ContractForm.js","components/administration/home/RestaurantForm.js","components/administration/home/RestaurantDetail.js","components/administration/home/ContractDetail.js","components/administration/home/ClientDetails.js","components/administration/container/AdminContainer.js","components/client/topBar/ClientSideBar.js","components/client/topBar/ClientTopBar.js","components/client/account/ClientAccount.js","components/client/container/ClientContainer.js","App.js","serviceWorker.js","index.js","components/administration/home/ClientList.module.css","components/administration/gaspillage/Form.module.css","components/administration/home/ClientDetails.module.css","components/client/dashboard/DashboardElement.module.css","components/administration/gaspillage/FormRadioElement.js","components/administration/gaspillage/AdminGaspi.js","components/client/container/ClientContainer.module.css","services/AdminAPI.js","components/administration/gaspillage/Graph.module.css","publics/TopSideBar.png","components/administration/gaspillage/FormCheckboxElement.js","components/administration/home/ContractForm.module.css","components/client/topBar/ClientTopBar.module.css","components/client/account/Account.module.css","components/administration/gaspillage/AdminGaspi.module.css","publics/Back_Connexion.png","components/administration/topBar/AdminSideBar.module.css","components/administration/gaspillage/Line.js","components/administration/gaspillage/Bar.js","components/client/dashboard/ClientDashboard.module.css","components/administration/home/RestaurantForm.module.css","components/administration/home/RestaurantDetails.module.css","components/administration/home/ContractDetails.module.css","publics/image.png","components/connexion/Connexion.module.css","components/client/topBar/ClientSideBar.module.css","components/Common/ErrorFormField/ErrorFormField.js"],"names":["initialState","login","password","userType","isLogged","isLogging","redirection","userReducer","state","action","type","console","log","payload","clientList","currentClient","fetching","fetched","error","adding","pageMode","currentRestaurant","adminReducer","mode","data","length","clientIndex","push","newClient","contractList","Items","newContract","JSON","stringify","currentContract","restaurantList","newRestaurant","client","contract","restaurant","accountCreated","page","drillDownLevel","selectedMonth","selectedWeek","selectedDay","selectedCategory","dataType","rawData","clearData","displayedData","clientReducer","newPage","currentRestaurantName","navigationReducer","name","allReducers","combineReducers","applicationStore","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","updateRedirection","logged","isLoggingIn","getState","isLoggedIn","isClient","a","store","getChefAccount","accounts","dispatch","restaurantName","isAdmin","connexionState","getRedirectionClientPage","require","isUserClient","isUserAdmin","getRedirectionAdminPage","LoginRoute","props","component","to","connect","userState","useEffect","connecting","getComponentToDisplay","Display","withRouter","useDispatch","connectionValidationSchema","Yup","shape","required","handleSubmitForm","values","setSubmitting","resetForm","history","connexionRedirectPath","React","useState","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Container","fluid","Row","className","styles","globalContainer","Col","md","span","offset","leftImage","style","padding","svgDiv","svg","src","backgroundImage","alt","centerComponent","centerText","title","subtitle","enableReinitialize","initialValues","validationSchema","onSubmit","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","formElement","TextField","id","label","value","helperText","onChange","onBlur","fullWidth","color","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","onMouseDown","visibility","Button","submitButton","backgroundColor","border","borderRadius","fontFamily","fontSize","disabled","changePageMode","newMode","updateRestaurant","AdminHome","displayList","setDisplayList","setReturnNormal","Accordion","accordion","Toggle","as","eventKey","toggleElement","active","unactive","Collapse","collapseElement","listStyleType","map","item","index","newCurrentClientIndex","changeCurrentClient","newCurrentClient","clientElement","NameClient","changePage","adminSideBarContainer","ClientList","MyResponsiveBar","keys","allData","e","handleClick","indexBy","colors","customColor","margin","drillDown","top","right","bottom","left","defs","background","size","stagger","rotation","lineWidth","spacing","fill","match","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","dataLegendLeftAxis","labelFormat","d","y","labelSkipWidth","labelSkipHeight","labelTextColor","animate","motionStiffness","motionDamping","MyResponsivePie","formatedData","startAngle","endAngle","innerRadius","padAngle","colorParam","borderWidth","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","theme","labels","text","changePageAction","updateDrillDown","newLevel","updateSelectedMonth","newMonth","updateSelectedWeek","newWeek","updateSelectedDay","newDay","updateSelectedCategory","newCategory","DashboardElement","global","height","Moment","moment","extendMoment","locale","clientState","adminState","getAllDates","Date","getFullYear","startDay","endDay","allDates","clone","add","isBefore","getFoodValues","foodId","food","getFoodById","then","res","catch","err","getAllSamplesForDay","day","samples","getAllSamplesForRestaurantAndDay","format","getAllData","allRawData","mass","cost","co2","tray","inevitableMass","inevitableCost","inevitableCo2","months","allFoods","Map","allCategories","numberOfTray","getAllTrayForRestraurantDay","trayAlreadyAdded","Count","sample","aliment_id","undefined","get","toFixed","newFood","set","idFood","foodValues","categoryFood","wastedInevitableMass","volume","volumicMassFood","co2Food","newValues","wastedSaladMass","surface","surfaceMasse","nameFood","PriceFood","wastedMass","monthIndex","month","weeks","weekIndex","week","startOf","days","dayIndex","categories","categoryIndex","indexOf","foods","foodIndex","element","newAliment","Promise","resolve","reject","getTotalValue","graphValues","barColor","titleLegend","entries","monthName","monthValue","newBar","itemValue","evitable","inevitable","graph","currentYear","year","startDate","firstDay","endOf","monthRange","range","by","mday","firstDate","indexWeek","weekValue","testDate","indexDay","itemDay","dayValue","categoryValue","foodValue","handleUpdateDataType","newType","updateDataType","pageTitle","dashboardElement","dividerDiv","width","dashboardBarChartGlobal","barChartTitle","variant","dashboardBarChart","Bar","nivoBarStyle","dashboardPieChartGlobal","pieChartTitle","dashboardPieChart","Pie","percent","parseInt","getPercentValue","ClientForm","useSelector","adressClient","emailClient","phoneClient","dateRegistrationClient","createClient","detailsContainer","now","Form","formContainer","Group","controlId","Label","Control","isValid","isInvalid","placeholder","ErrorFormField","societe","message","contratValidationSchema","nameContract","typeContract","startDateContract","handleAddContrat","currentName","clientName","createContract","newContractContainer","newContractForm","restaurantValidationSchema","nameRestaurant","adressRestaurant","handleAddRestaurant","contractName","contractIndex","createRestaurant","createAccount","setCreateAccount","restaurantIndex","accountValidationSchema","email","handleAddAccount","createAccountForRestaurant","updateRestaurantAccountCreated","restaurantDetails","adresspasswordRestaurant","ownProps","restaurants","addRestaurant","setAddRestaurant","getAllRestaurants","ContractDetails","addContrat","setAddContrat","getAllContracts","ContractForm","getAllClients","result","NewClientForm","AdminGaspi","displayPage","userEmail","ReturnElement","propElem","whiteSelectedMark","SelectedClientSideBarElement","iconDivWhenSelected","children","textElement","ClientSideBarElement","sameColorMark","iconDiv","ClientSideBarContainer","imageDiv","image","topSideBar","xmlns","viewBox","transform","data-name","fill-rule","Navbar","ClientTopBarContainer","inline","InputGroup","Prepend","Text","FormControl","aria-describedby","NavDropdown","chef","drop","Item","Divider","updatePasswordValidationSchema","oldPassword","newPassword","handlePassword","updateUserPassword","ContentBigRow","ClientTop","ContentDiv","exact","path","Connexion","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","FormRadioElement","Check","formCheck","Input","checked","currentValue","formLabel","setReady","rangeDataTitle","setRangeDataTitle","setType","legendType","setLegendType","finalFoodData","setFinalFoodData","finalData","setFinalData","finalTray","setFinalTray","setDisplayedData","displayedBarData","setDisplayedBarData","gaspillageValidationSchema","dateStart","dateEnd","min","endDate","getFoodsFromCategories","categoryList","categoriesFoods","category","getFoodsOfCategories","getFoods","foodList","getFood","storeFoodData","foodOfCategoriesLits","foodData","foodsOfCategories","getSamplesForCategories","samplesForCategories","foodsOfCategory","getSamplesForFoods","samplesForFoods","getSamplesForFood","samplesForFood","date","stringDate","getGaspillageData","indexSample","createDataFromFoodsSamples","foodsName","foodsSamples","foodsData","itemColor","dateIndex","totalVolume","totalMass","totalCost","totalCo2","volumeSample","dataDay","x","createDataFromCategoriesSamples","categoriesName","categoriesSamples","categoriesData","categoryData","dateItem","aggregateData","timeScale","aggregatedData","indexLine","itemLine","currentWeek","weekData","indexData","newLineDataWeek","currentMonth","monthData","newLineDataMonth","aggregateTraysData","trayData","aggregatedTrayData","createDisplayedData","dataTypeToDisplay","dataFinal","massData","dataItem","createBarData","co2Data","costData","getAllTrays","allTrays","createTrayData","trays","barData","line","dataIndex","replace","eval","categoryCheck","allFoodsOfCategories","foodCheck","concat","aggregatedTrays","setCategoriesName","getCategoriesName","returnVal","nameCategory","CalendarIcon","SearchIcon","KnifeForkIcon","BarChartIcon","graphType","setFieldValue","FormElement","formItemTitle","ButtonGroup","dropdownElement","dropdownDate","classname","dateDropDownTitles","iconStyle","display","justifyContent","tag","split","Menu","marginTop","graphElement","divGraph","axios","params","accountType","post","response","old","new","put","sleep","milliseconds","currentDate","nameClient","url","foodName","dateValue","config","update","FormCheckboxElement","Line","tooltip","tooltipProps","point","serieId","isInteractive","useMesh","debugMesh","xScale","yScale","max","stacked","reverse","curve","orient","scheme","pointSize","pointColor","pointBorderWidth","pointBorderColor","pointLabel","pointLabelYOffset","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","node","indexValue","toolTipElement","groupMode","legends","dataFrom","Error"],"mappings":"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","file":"static/js/main.e80b676f.chunk.js","sourcesContent":["const initialState = {\n  login: null,\n  password: null,\n  userType: null,     //can be 'chief' or 'director'\n  isLogged: false,\n  isLogging: false,\n  redirection: null,\n};\n\nconst userReducer = (state = initialState, action) => {\n\n  switch(action.type){\n    case 'CONNECTING':\n      console.log('USER REDUCER connecting');\n      return {\n        ...state,\n        isLogging: true,\n        login: action.payload.login,\n        password: action.payload.password\n      }\n      break;\n\n    case 'FAILED_CONNECT':\n      console.log('USER REDUCER failed connect');\n      return {\n        ...state,\n        isLogging: false,\n        login: null,\n        password: null\n      }\n      break;\n\n    case 'UPDATE_REDIRECTION':\n      console.log('USER REDUCER update direction = '+action.payload.redirection);\n      return {\n        ...state,\n        redirection: action.payload.redirection,\n      }\n      break;\n\n    case 'LOGGED':\n      console.log('USER REDUCER logged');\n      return {\n        ...state,\n        isLogged: true,\n        isLogging: false,\n        userType: action.payload.userType,\n      }\n      break;\n\n    case 'DISCONNECT':\n      console.log('In disconnect user')\n      return initialState;\n      break;\n\n    default:\n      return state;\n      break;\n  }\n}\n\nexport default userReducer;\n","const initialState = {\n  clientList: [],\n  currentClient: null,\n  fetching: false,\n  fetched: false,\n  error: null,\n  adding: false,\n  pageMode: 'createClient',\n  currentRestaurant: null,\n}\n\nconst adminReducer = (state = initialState, action) => {\n  switch(action.type){\n\n    //----------------------------- GET CLIENTS --------------------------------------\n\n    case 'GET_ALL_CLIENTS_START':\n    console.log('IN ADMIN REDUCER')\n      return {\n        ...state,\n        fetching: true\n      };\n      break;\n\n    case 'GET_ALL_CLIENTS_SUCCESS':\n    console.log('In get all client success');\n      const mode = action.data.length != 0 ? 'displayClient' : 'createClient';\n      return {\n        ...state,\n        fetching: false,\n        fetched: true,\n        clientList: action.data,\n        currentClient: 0,\n        pageMode: mode\n      };\n      break;\n\n    case 'GET_ALL_CLIENTS_ERROR':\n      console.log('In get all client error');\n      return {\n        ...state,\n        fetching: false,\n        fetched: false,\n        error: action.error\n      }\n      break;\n\n    case 'CHANGE_CURRENT_CLIENT':\n    console.log('IN ADMIN REDUCER')\n\n      return {\n        ...state,\n        currentClient: action.clientIndex,\n        pageMode: 'displayClient'\n      }\n      break;\n\n//----------------------------- CREATE CLIENTS --------------------------------------\n\n    case 'CREATE_CLIENT_START':\n      console.log('IN ADMIN REDUCER')\n\n      return {\n        ...state,\n        adding: true\n      };\n      break;\n\n    case 'CREATE_CLIENT_SUCCESS':\n      console.log('IN ADMIN REDUCER')\n\n      action.data.clientList.push(action.data.newClient)\n      return {\n        ...state,\n        adding: false,\n        clientList: action.data.clientList,\n        currentClient: action.data.clientList.length -1,\n        pageMode: 'displayClient'\n      };\n      break;\n\n    case 'CREATE_CLIENT_ERROR':\n      return {\n        ...state,\n        adding: false,\n        error: action.error\n      };\n      break;\n\n    case 'CREATE_MODE_ACTIVATED':\n      console.log('IN REDUCER CREATE client MODE')\n      return {\n        ...state,\n        pageMode: 'createClient'\n      };\n      break;\n\n//----------------------------- GET CONTRACTS --------------------------------------\n\n    case 'GET_CONTRACTS_SUCCESS':\n    console.log('IN ADMIN REDUCER')\n\n      action.clientList[action.currentClient].contractList = action.data.Items;\n      return {\n        ...state,\n        clientList: action.clientList\n      };\n      break;\n\n    case 'GET_CONTRACTS_ERROR':\n    console.log('IN ADMIN REDUCER')\n\n      return {\n        ...state,\n        error: action.error\n      }\n      break;\n\n//----------------------------- CREATE CONTRACT --------------------------------------\n\n    case 'CREATE_CONTRACT_SUCCESS':\n    console.log('IN ADMIN REDUCER')\n\n      action.clientList[action.currentClient].contractList.push(action.newContract);\n      console.log(JSON.stringify(action.clientList, null, 2));\n      return {\n        ...state,\n        clientList: action.clientList\n      };\n      break;\n\n    case 'CREATE_CONTRACT_ERROR':\n    console.log('IN ADMIN REDUCER')\n\n      return {\n        ...state,\n        error: action.error\n      };\n      break;\n\n\n//----------------------------- GET RESTAURANTS --------------------------------------\n\n    case 'GET_RESTAURANTS_SUCCESS':\n    console.log('IN ADMIN REDUCER')\n\n      action.clientList[action.currentClient].contractList[action.currentContract].restaurantList = action.data.Items;\n      return {\n        ...state,\n        clientList: action.clientList\n      };\n      break;\n\n    case 'GET_RESTAURANTS_ERROR':\n    console.log('IN ADMIN REDUCER')\n\n      return {\n        ...state,\n        error: action.error\n      }\n      break;\n\n//----------------------------- CREATE RESTAURANT --------------------------------------\n\n    case 'CREATE_RESTAURANT_SUCCESS':\n    console.log('IN ADMIN REDUCER')\n\n      action.clientList[action.currentClient].contractList[action.currentContract].restaurantList.push(action.newRestaurant);\n      console.log(JSON.stringify(action.clientList, null, 2));\n      return {\n        ...state,\n        clientList: action.clientList\n      };\n      break;\n\n    case 'CREATE_RESTAURANT_ERROR':\n      console.log('IN ADMIN REDUCER')\n\n      return {\n        ...state,\n        error: action.error\n      };\n      break;\n\n//----------------------------- CHANGE CURRENT RESTAURANT --------------------------------------\n\n    case 'CHANGE_CURRENT_RESTAURANT':\n    console.log('IN ADMIN REDUCER')\n\n      return {\n        ...state,\n        currentRestaurant: action.data\n      };\n      break;\n\n//----------------------------- CHANGE CURRENT PAGE MODE --------------------------------------\n\n    case 'CHANGE_PAGE_MODE':\n      console.log('IN REDUCER CHANGE PAGE MODE : '+action.data);\n\n      return {\n        ...state,\n        pageMode: action.data\n      };\n      break;\n\n//----------------------------- CHANGE CURRENT PAGE MODE --------------------------------------\n\n    case 'UPDATE_RESTAURANT':\n      console.log('IN REDUCER update restaurant : '+action.data);\n      action.data.clientList[action.data.client].contractList[action.data.contract].restaurantList[action.data.restaurant].accountCreated = true;\n      return {\n        ...state,\n        clientList: action.data.clientList\n      };\n      break;\n\n    case 'DISCONNECT':\n      console.log('In disconnect admin')\n      return initialState;\n      break;\n\n    default:\n      return state; break;\n  }\n}\n\nexport default adminReducer;\n","const initialState = {\n  currentRestaurant: null,\n  currentContract: null,\n  page: 'dashboard',\n  drillDownLevel: 'year',\n  selectedMonth: null,\n  selectedWeek: null,\n  selectedDay: null,\n  selectedCategory: null,\n  dataType: 'mass',\n  fetching: false,\n  fetched: false,\n  error: false,\n  rawData: null,\n  clearData: null,\n  displayedData: null\n}\n\nconst clientReducer = (state = initialState, action) => {\n  //console.log('TEST : '+JSON.stringify(state, null, 2));\n  switch(action.type){\n\n    case 'CHANGE_PAGE':\n      return {\n        ...state,\n        page: action.data.newPage\n      };\n      break;\n\n    case 'GET_RAW_DATA_START':\n      console.log('in reducer get raw data start, state = '+JSON.stringify({...state, fetching: true }, null, 2));\n      return {\n        ...state,\n        fetching: true\n      };\n      break;\n\n    case 'GET_RAW_DATA_SUCCESS':\n      return {\n        ...state,\n        fetching: false,\n        fetched: true,\n        rawData: action.data,\n      };\n      break;\n\n    case 'GET_RAW_DATA_ERROR':\n      return {\n        ...state,\n        fetching: false,\n        fetched: false,\n        error: action.error\n      }\n      break;\n\n    case 'UPDATE_DRILLDOWN':\n    console.log('Update drillDownLevel');\n      return {\n        ...state,\n        drillDownLevel: action.data\n      }\n      break;\n\n    case 'UPDATE_DATA_TYPE':\n      console.log('NEW DATATYPE : '+action.data);\n      return {\n        ...state,\n        dataType: action.data\n      }\n      break;\n\n    case 'UPDATE_MONTH':\n      return {\n        ...state,\n        selectedMonth: action.data\n      }\n      break;\n\n    case 'UPDATE_WEEK':\n      return {\n        ...state,\n        selectedWeek: action.data\n      }\n      break;\n\n    case 'UPDATE_DAY':\n      return {\n        ...state,\n        selectedDay: action.data\n      }\n      break;\n\n    case 'UPDATE_CATEGORY':\n      return {\n        ...state,\n        selectedCategory: action.data\n      }\n      break;\n\n    case 'DISCONNECT':\n      console.log('In disconnect client')\n      return initialState;\n      break;\n\n    default:\n      return state;\n      break;\n  }\n}\n\nexport default clientReducer;\n","const initialState = {\n  pageMode: 'dashboard',\n  currentRestaurantName: '',\n};\n\nconst navigationReducer = (state = initialState, action) => {\n\n  switch(action.type){\n    case 'UPDATE_PAGEMODE':\n      console.log('nav reducer update pagemode');\n      return {\n        ...state,\n        pageMode: action.payload.pageMode,\n      }\n      break;\n\n    case 'UPDATE_CURRENT_RESTAURANT_NAME':\n      console.log('nav reducer update current restaurant name');\n      return {\n        ...state,\n        currentRestaurantName: action.payload.name,\n      }\n      break;\n\n    case 'DISCONNECT':\n      console.log('In disconnect navigation')\n      return initialState;\n      break;\n\n    default:\n      return state;\n      break;\n  }\n}\n\nexport default navigationReducer;\n","import userReducer from './user.reducer';\nimport adminReducer from './admin.reducer';\nimport clientReducer from './client.reducer';\nimport navigationReducer from './navigation.reducer';\n\nimport {combineReducers} from 'redux';\n\nconst allReducers = combineReducers({\n  userReducer: userReducer,\n  adminReducer : adminReducer,\n  clientReducer: clientReducer,\n  navigationReducer: navigationReducer\n})\n\nexport default allReducers\n","import { createStore } from 'redux';\nimport allReducers from '../reducers/reducers'\n\nconst applicationStore = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default applicationStore;\n","export const connect = (login, password) => {\n  return {\n    type: 'CONNECTING',\n    payload: {\n      login: login,\n      password: password,\n    }\n  };\n};\n\nexport const failConnect = () => {\n  return {\n    type: 'FAILED_CONNECT',\n  };\n};\n\nexport const updateRedirection = (redirection) => {\n  return {\n    type: 'UPDATE_REDIRECTION',\n    payload: {\n      redirection: redirection,\n    }\n  };\n};\n\nexport const logged = (userType) => {\n  return {\n    type: 'LOGGED',\n    payload: {\n      userType: userType,\n    }\n  };\n};\n\nexport const disconnectAction = () => {\n  return {\n    type: 'DISCONNECT'\n  };\n};\n","//import { getToken } from '../services/token.service';\n//import decoder from 'jwt-decode';\nimport { useSelector, useDispatch } from 'react-redux';   //REDUX\nimport applicationStore from '../store/store';            //store\n\nimport { updateCurrentRestaurantName } from '../actions/navigation.action';\n\nimport { getChefAccount } from '../services/AdminAPI';\n\nconst isLoggingIn = () => {\n  console.log('In is logging in ?');\n  const state = applicationStore.getState();\n  const connexionState = state.userReducer;\n  return connexionState.isLogging;\n}\n\nconst isLoggedIn = () => {\n  console.log('In is logged in ?');\n  const state = applicationStore.getState();\n  const connexionState = state.userReducer;\n  return connexionState.isLogged;\n}\n\n\nconst isClient = async () => {\n  console.log('In is client ?');\n  const store = applicationStore.getState();\n  const accounts = await getChefAccount(store.userReducer.login, store.userReducer.password);\n  console.log('ACCOUNTS : '+JSON.stringify(accounts, null, 2));\n\n  if (accounts[0] != null){\n    applicationStore.dispatch(updateCurrentRestaurantName(accounts[0].restaurantName))\n    console.log('IS A CLIENT')\n    return true;\n  }\n  else {\n    console.log('NOT A CLIENT')\n    return false;\n  }\n}\n\nconst isAdmin = () => {\n  const state = applicationStore.getState();\n  const connexionState = state.userReducer;\n  if (connexionState.login=='admin' && connexionState.password=='adminMdp'){\n    console.log('IS A ADMIN')\n    return true;\n  }\n  else {\n    console.log('NOT A ADMIN')\n    return false;\n  }\n}\n\nexport { isLoggingIn, isLoggedIn, isClient, isAdmin };\n\n/*\ninterface IToken {\n  id: string,\n  first_name: string,\n  last_name: string,\n  role: string,\n  email: string\n}\n\nconst getTokenJson = (): IToken | null => {\n  const token = getToken();\n  if (token != null) {\n    const decoded = decoder<IToken>(token);\n    return decoded;\n  }\n  return null;\n};\n\nconst getRole = (): string | null => {\n  const decoded = getTokenJson();\n  if (typeof decoded == 'object' && decoded != null){\n    return decoded.role;\n  }\n  else\n    return null;\n};\n\nconst getEmail = (): string => {\n  const decoded = getTokenJson();\n  if (typeof decoded == 'object' && decoded != null)\n    return decoded.email;\n  else\n    return '';\n};\n\nconst getUsername = (): string | null => {\n  const decoded = getTokenJson();\n  if (typeof decoded == 'object' && decoded != null)\n    return decoded.last_name + ' ' + decoded.first_name;\n  else\n    return null;\n};\n\nconst getId = (): number => {\n  const decoded = getTokenJson();\n  let idString = '';\n  if (typeof decoded == 'object' && decoded != null)\n    idString = decoded.id;\n  try {\n    return parseInt(idString);\n  } catch{\n    return 0.1;\n  }\n};\n\n\nconst isLoggedIn = () => getToken() != null;\nconst isStudent = () => getRole() === 'eleve';\nconst isAdmin = () => getRole() === 'administration'|| getRole()==='professeur';\n\n\nexport { isLoggedIn, getUsername, getRole, isClient, isAdmin, getEmail, getId };\n*/\n","export const updateCurrentRestaurantName = (restaurantName) => {\n  return {\n    type: 'UPDATE_CURRENT_RESTAURANT_NAME',\n    payload: {\n      name: restaurantName,\n    }\n  };\n};\n","import React, { useEffect } from 'react';\n\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\nimport applicationStore from '../store/store';            //store\n\nimport { updateRedirection, logged, failConnect } from '../actions/connexion.action';\n\nimport { Redirect } from 'react-router-dom';\nimport { isAdmin, isClient, isLoggingIn, isLoggedIn } from './authorizationHelper';\nconst jc = require('json-cycle');\n\n//const dispatch = useDispatch();\n\nconst getRedirectionClientPage = async () => {\n  console.log('In get redirect client');\n  if (isLoggingIn()) {\n    console.log('is logging')\n    const isUserClient = await isClient();\n    const isUserAdmin = await isAdmin();\n    console.log('isclient value : '+isUserClient);\n    if (isUserClient){\n      console.log('Is a client');\n      applicationStore.dispatch(logged('chef'));\n      applicationStore.dispatch(updateRedirection(''));\n    }\n    else if (isUserAdmin) {\n      console.log('The USER is an ADMIN');\n      applicationStore.dispatch(logged('admin'));\n      applicationStore.dispatch(updateRedirection('/adminConsole'));\n    }\n    else {\n      console.log('CONNEXION FAILED, must return to connexion component');\n      applicationStore.dispatch(failConnect());\n      applicationStore.dispatch(updateRedirection('/connexion/client'));\n    }\n  }\n  else if (!isLoggedIn()) {\n    console.log('not logging');       // if the user didn't enter its credential we must display the connection page\n    applicationStore.dispatch(updateRedirection('/connexion/client'));\n  }\n};\n\nconst getRedirectionAdminPage = async () => {\n  console.log('In get redirect admin');\n  if (isLoggingIn()) {\n    const isUserClient = await isClient();\n    const isUserAdmin = await isAdmin();\n    if (isUserAdmin){\n      console.log('the USEr is a ADMIN');\n      applicationStore.dispatch(logged('admin'));\n      applicationStore.dispatch(updateRedirection(''));\n    }\n    else if (isUserClient) {\n      applicationStore.dispatch(logged('chef'));\n      applicationStore.dispatch(updateRedirection('/clientConsole'));\n    }\n    else {\n      console.log('CONNEXION FAILED, must return to connexion component');\n      applicationStore.dispatch(failConnect());\n      applicationStore.dispatch(updateRedirection('/connexion/client'));\n    }\n  }\n  else if (!isLoggedIn()) {\n    console.log('not logging');       // if the user didn't enter its credential we must display the connection page\n    applicationStore.dispatch(updateRedirection('/connexion/admin'));\n  }\n};\n\n\n// -------------------------------------------------------------------------------------------------------\n\n\nconst LoginRoute = (props) => {\n  //console.log('IN LOGGING ROUTE + '+JSON.stringify(jc.decycle(props.component), null, 2));\n  console.log('IN LOGGING ROUTE');\n  if (isLoggingIn() == false) {\n    console.log('Not logged in');\n    return props.component;\n  }\n  else {\n    console.log('Already logged in');\n    return <Redirect to=\"/clientConsole\" push/>;\n  }\n};\n\nexport { getRedirectionClientPage, getRedirectionAdminPage, LoginRoute };\n","import React, { useEffect } from 'react';\n\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\n\nimport { Redirect } from 'react-router-dom';\n\nimport { getRedirectionClientPage } from './routeHelper';\nimport { isAdmin, isClient, isLoggedIn } from './authorizationHelper';\n\n\nconst PrivateClientRoute = (props) => {\n  console.log('In private client route');\n\n  useEffect( () => {\n    console.log('In useEffect private client route');\n    if (!props.userState.isLogged) {\n      console.log('before get redirect client : '+JSON.stringify(props.userState, null, 2));\n      getRedirectionClientPage();\n    }\n  });\n\n  const getComponentToDisplay = () => {\n    console.log('In get component to display in priv route client');\n    const redirection = props.userState.redirection;\n    const connecting = props.userState.isLogging;\n    const userType = props.userState.userType;\n    console.log('Redirection is : _'+redirection+'_');\n\n    if (connecting) {\n      console.log('Must display wait for check');\n      return (<h1> WAITING TO CHECK CREDENTIALS </h1>);\n    }\n    else if (userType==='chef') {\n      console.log('The user is a chef');\n      return props.component;\n    }\n    else {\n      if (redirection == null) {\n        return (<h1> WAITING TO CHECK CREDENTIALS </h1>);\n      }\n      else {\n        console.log('Must display : '+redirection);\n        return <Redirect to={redirection} push/>;\n      }\n\n    }\n  }\n\n  return (\n    <>\n      {\n        getComponentToDisplay()\n      }\n    </>\n  )\n};\n\nfunction mapStateToProps(state) {\n  console.log('IN private client route map to state : '+JSON.stringify(state.userReducer, null, 2));\n  return {\n    userState: state.userReducer,\n  }\n}\n\nexport default connect(mapStateToProps)(PrivateClientRoute);\n","import React, { useEffect } from 'react';\n\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\n\nimport { Redirect } from 'react-router-dom';\n\nimport { getRedirectionAdminPage } from './routeHelper';\nimport { isAdmin, isClient, isLoggedIn } from './authorizationHelper';\n\n\nconst PrivateAdminRoute = (props) => {\n  console.log('In private admin route');\n\n  useEffect( () => {\n    console.log('In useEffect private admin route');\n    if (!props.userState.isLogged) {\n      console.log('before get redirect admin : '+JSON.stringify(props.userState, null, 2));\n      getRedirectionAdminPage();\n    }\n  });\n\n  const getComponentToDisplay = () => {\n    console.log('In get component to display in priv route admin');\n    const redirection = props.userState.redirection;\n    const connecting = props.userState.isLogging;\n    const userType = props.userState.userType;\n    console.log('Redirection is : _'+redirection+'_');\n\n    if (connecting) {\n      console.log('Must display wait for check');\n      return (<h1> WAITING TO CHECK CREDENTIALS </h1>);\n    }\n    else if (userType==='admin') {\n      console.log('The user is a chef');\n      return props.component;\n    }\n    else {\n      if (redirection == null) {\n        return (<h1> WAITING TO CHECK CREDENTIALS </h1>);\n      }\n      else {\n        console.log('Must display : '+redirection);\n        return <Redirect to={redirection} push/>;\n      }\n\n    }\n  }\n\n  return (\n    <>\n      {\n        getComponentToDisplay()\n      }\n    </>\n  )\n};\n\nfunction mapStateToProps(state) {\n  console.log('IN private admin route map to state : '+JSON.stringify(state.userReducer, null, 2));\n  return {\n    userState: state.userReducer,\n  }\n}\n\nexport default connect(mapStateToProps)(PrivateAdminRoute);\n","import React from 'react';\n\nfunction Display(props) {\n\n  return (\n    <div>\n        <p>\n          Repas : {props.repas.name}\n        </p>\n        <p>\n          Quantité : {props.repas.quantity}\n        </p>\n    </div>\n  );\n}\n\nexport default Display;\n","import React, { useState } from 'react';                    // REACT\nimport { withRouter } from \"react-router-dom\";              // ROUTER\nimport { useSelector, useDispatch } from 'react-redux';     // REDUX\n\nimport { connect } from '../../actions/connexion.action';   // ACTION\n\nimport Row from 'react-bootstrap/Row';              // BOOTSTRAP\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nimport FormLabel from '@material-ui/core/FormLabel';    // MATERIAL-UI\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nimport backgroundImage from '../../publics/Back_Connexion.png';\n\nimport { Formik } from 'formik';            // FORMIK\nimport * as Yup from 'yup';                 // YUP\n\nimport styles from './Connexion.module.css'   // CSS\n\nfunction ConnexionContainer(props) {\n\n  const dispatch = useDispatch();                         // create dispatcher\n\n  const connectionValidationSchema = Yup.object().shape({           // validation schema\n    login: Yup.string().required('Ce champ est obligatoire'),\n    password: Yup.string().required('Ce champ est obligatoire'),\n  });\n\n  const handleSubmitForm = async (values, {setSubmitting, resetForm}) => {      // submit form\n    setSubmitting(true);\n    console.log('SUBMIT VALUES : '+JSON.stringify(values, null, 2));\n    dispatch(connect(values.login, values.password));\n    props.history.push(props.connexionRedirectPath);\n    setSubmitting(false);\n  }\n\n  const [showPassword, setShowPassword] = React.useState(false);            // Show password state\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  console.log('The connexion container, props : '+props.connexionRedirectPath);\n\n  return(\n    <Container fluid>\n      <Row className={ styles.globalContainer }>\n\n        <Col md={{span: 7, offset: 0}} className={ styles.leftImage } style={{padding: '0px'}}>        {/* left image */}\n          <div className={styles.svgDiv}>\n            <img className={styles.svg} src={backgroundImage} alt=\"KikleoWelcomeImage\" />\n          </div>\n        </Col>\n\n        <Col md={{span: 5, offset: 0}}>         {/* rigth form */}\n          <div className={styles.centerComponent}>\n            <Row className=\"justify-content-md-center\">\n              <Col>\n                <div className={styles.centerText}>\n                  <h1 className={styles.title}> BIENVENUE </h1>                                           {/* title */}\n                  <p className={styles.subtitle}> Connectez vous pour accéder à vos données </p>\n                </div>\n              </Col>\n            </Row>\n\n            <br/>\n                                                                                                        {/* form */}\n            <Formik\n              enableReinitialize\n              initialValues={ { login: '',\n                                password: '' } }\n              validationSchema={ connectionValidationSchema }\n              onSubmit={ handleSubmitForm }\n            >\n              { ({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => {\n              return(\n                <div>\n                  <Row className=\"justify-content-md-center\">                                          {/* login */}\n                    <Col md={{span: 8, offset: 0}}>\n                      <div className={ styles.formElement }>\n                        <TextField id='login'\n                                  name='login'\n                                  label=\"Nom d'utilisateur\"\n                                  value={ values.login }\n                                  helperText={ errors.login && touched.login ? errors.login : '' }\n                                  error={ errors.login && touched.login ? true : false }\n                                  onChange={ handleChange }\n                                  onBlur={ handleBlur }\n                                  fullWidth\n                                  style={{color: '#666666'}}\n                        />\n                      </div>\n                    </Col>\n                  </Row>\n\n                  <Row className=\"justify-content-md-center\">                                          {/* password */}\n                    <Col md={{span: 8, offset: 0}}>\n                      <div className={ styles.formElement }>\n                        <TextField id='password'\n                                  type={showPassword ? 'text' : 'password'}\n                                  name='password'\n                                  label=\"Mot de passe\"\n                                  value={ values.password }\n                                  helperText={ errors.password && touched.password ? errors.password : '' }\n                                  error={ errors.password && touched.password ? true : false }\n                                  onChange={ handleChange }\n                                  onBlur={ handleBlur }\n                                  fullWidth\n                                  className={ styles.formElement }\n                                  InputProps={{\n                                    endAdornment:\n                                      <InputAdornment position=\"end\">\n                                        <IconButton\n                                          aria-label=\"toggle password visibility\"\n                                          onClick={handleClickShowPassword}\n                                          onMouseDown={handleMouseDownPassword}\n                                        >\n                                          {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\n                                        </IconButton>\n                                      </InputAdornment>\n                                  }}\n\n                        />\n                      </div>\n                    </Col>\n                  </Row>\n\n                  <br/>\n\n                  <Row style={{visibility: 'hidden'}} className=\"justify-content-md-center\">\n                    <Col md={{span: 3, offset: 0}}>\n                      <span className={styles.centerText}>\n                        Se souvenir de moi\n                      </span>\n                    </Col>\n                    <Col md={{span: 3, offset: 2}}>\n                      <span className={styles.centerText}>\n                        Mot de passe oublié\n                      </span>\n                    </Col>\n                  </Row>\n\n                  <br/>\n\n                  <Row className='row justify-content-center'>\n                      <Button className={styles.submitButton} style={{backgroundColor: '#90c261', border: '#90c261', borderRadius: '5px', fontFamily: 'Muli', fontSize: '18px'}} type='submit' onClick={handleSubmit} disabled={isSubmitting}> Se connecter </Button>\n                  </Row>\n                </div>\n              ) } }\n            </Formik>\n          </div>\n\n        </Col>\n\n      </Row>\n    </Container>\n  )\n}\n\nexport default withRouter(ConnexionContainer);\n","import { getAllClients } from '../services/AdminAPI';\n\n// ----------------------------- GET ALL THE CLIENTS ---------------------------------------\n\nexport function getAllClientStart () {\n  return { type: 'GET_ALL_CLIENTS_START' };\n}\n\nexport function getAllClientsSuccess (data) {\n  return {\n        type: 'GET_ALL_CLIENTS_SUCCESS',\n        data: data\n      };\n}\n\nexport function getAllClientsError (error) {\n  return {\n        type: 'GET_ALL_CLIENTS_ERROR',\n        error: error\n      };\n}\n\nexport function changeCurrentClient (newCurrentClientIndex) {\n  return {\n        type: 'CHANGE_CURRENT_CLIENT',\n        clientIndex: newCurrentClientIndex\n      };\n}\n\n// ----------------------------- CREATE A NEW CLIENT ---------------------------------------\n\nexport function changeModeToCreate() {\n  return { type: 'CREATE_MODE_ACTIVATED' };\n}\n\nexport function createClientStart () {\n  return { type: 'CREATE_CLIENT_START' };\n}\n\nexport function createClientSuccess (clientList, newClient) {\n  return {\n          type: 'CREATE_CLIENT_SUCCESS',\n          data: { clientList: clientList,\n                  newClient: newClient\n                }\n        };\n}\n\nexport function createClientError (error) {\n  return {\n          type: 'CREATE_CLIENT_ERROR',\n          error: error\n         };\n}\n\n// ----------------------------- GET ALL THE CONTRACTS FOR A CLIENT ---------------------------------------\n\nexport function getContractsSuccess (data, clientList, currentClient) {\n  return {\n        type: 'GET_CONTRACTS_SUCCESS',\n        data: data,\n        clientList: clientList,\n        currentClient: currentClient\n      };\n}\n\nexport function getContractsError (error) {\n  return {\n        type: 'GET_CONTRACTS_ERROR',\n        error: error\n      };\n}\n\n// ----------------------------- CREATE A NEW CONTRACT FOR A CLIENT ---------------------------------------\n\nexport function createContractSuccess (newContract, clientList, currentClient) {\n  return {\n          type: 'CREATE_CONTRACT_SUCCESS',\n          newContract: newContract,\n          clientList: clientList,\n          currentClient: currentClient\n        };\n}\n\nexport function createContractError (error) {\n  return {\n          type: 'CREATE_CONTRACT_ERROR',\n          error: error\n         };\n}\n\n// ----------------------------- GET ALL THE RESTAURANTS FOR A CONTRACT ---------------------------------------\n\nexport function getRestaurantsSuccess (data, clientList, currentClient, currentContract) {\n  return {\n        type: 'GET_RESTAURANTS_SUCCESS',\n        data: data,\n        clientList: clientList,\n        currentClient: currentClient,\n        currentContract: currentContract\n      };\n}\n\nexport function getRestaurantsError (error) {\n  return {\n        type: 'GET_RESTAURANTS_ERROR',\n        error: error\n      };\n}\n\n// ----------------------------- CREATE A NEW RESTAURANT FOR A CONTRACT ---------------------------------------\n\nexport function createRestaurantSuccess (newRestaurant, clientList, currentClient, currentContract) {\n  return {\n          type: 'CREATE_RESTAURANT_SUCCESS',\n          newRestaurant: newRestaurant,\n          clientList: clientList,\n          currentClient: currentClient,\n          currentContract: currentContract\n        };\n}\n\nexport function createRestaurantError (error) {\n  return {\n          type: 'CREATE_RESTAURANT_ERROR',\n          error: error\n         };\n}\n\n//------------------------------------- CHANGE THE CURRENT RESTAURANT ----------------------\n\nexport function changeCurrentRestaurant(newCurrentRestaurantName) {\n  return {\n    type: 'CHANGE_CURRENT_RESTAURANT',\n    data: newCurrentRestaurantName\n  }\n}\n\n//------------------------------------- CHANGE THE PAGE MODE ----------------------\n\nexport function changePageMode(newMode) {\n  return {\n    type: 'CHANGE_PAGE_MODE',\n    data: newMode\n  }\n}\n\n//------------------------------------- UPDATE RESTAURANT ----------------------\n\nexport function updateRestaurant(client, contract, restaurant, clientList) {\n  return {\n    type: 'UPDATE_RESTAURANT',\n    data: {\n      client: client,\n      contract: contract,\n      restaurant: restaurant,\n      clientList: clientList\n    }\n  }\n}\n","import React, { useState } from 'react';                //REACT\n\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\n\nimport { changeModeToCreate, changeCurrentClient } from '../../../actions/admin.action';  //ACTIONS\n\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nimport styles from './ClientList.module.css'    //CSS\n\nfunction AdminHome(props) {\n\n  const dispatch = useDispatch();\n  const [displayList, setDisplayList] = useState(false);\n  const [returnNormal, setReturnNormal] = useState(false);\n\n  const newCurrentClient = (event, newCurrentClientIndex) => {\n    event.preventDefault();\n    console.log('IN change current');\n    dispatch(changeCurrentClient(newCurrentClientIndex));\n  };\n\n  const addNewClient = (event) => {\n    event.preventDefault();\n    console.log('IN create new client');\n    dispatch(changeModeToCreate());\n  };\n\n  const selectToggle = (event) => {\n    setReturnNormal(displayList);\n    setDisplayList(!displayList);\n  }\n\n  console.log('Before render client list');\n  return(\n    <Row>\n        <Accordion className={styles.accordion}>\n        \n          <Accordion.Toggle as={Col} eventKey=\"0\" className={styles.toggleElement} onClick={selectToggle}>\n            <Row >\n              <Col md='6'> <strong> Client list </strong> </Col>\n              <Col md={{offset: 4}} > <strong className={displayList ? styles.active : styles.unactive }> &#8250; </strong> </Col>\n            </Row>\n          </Accordion.Toggle>\n\n          <Accordion.Collapse eventKey=\"0\" className={styles.collapseElement}>\n            <ul style={{listStyleType: 'none'}}>\n              {\n                props.clientList.map( (item, index) => (\n                  <li onClick={ (event) => newCurrentClient(event, index) } className={styles.clientElement}> { item.NameClient } </li>\n                ))\n              }\n              <li onClick={ addNewClient }> + Add new client </li>\n            </ul>\n          </Accordion.Collapse>\n\n        </Accordion>\n    </Row>\n  )\n}\n\nexport default AdminHome;\n","import React from 'react';              //REACT\n\nimport { useSelector, useDispatch, connect } from 'react-redux';    //REDUX\n\nimport { changePageMode } from '../../../actions/admin.action';\n\nimport Row from 'react-bootstrap/Row'   //BOOTSTRAP\nimport Col from 'react-bootstrap/Col'\n\nimport ClientList from '../home/ClientList';  //COMPONENTS\n\nimport styles from './AdminSideBar.module.css' //CSS\n\nfunction AdminSideBar(props) {\n\n  const dispatch = useDispatch();\n\n  const changePage = (newPage) => {\n    dispatch(changePageMode(newPage));\n  };\n\n  console.log('Before render adminSideBar');\n  return(\n    <Col md='12' className={styles.adminSideBarContainer}>\n        <b> Kikleo </b>\n\n        <div id='topbarTitle'>\n          <b> ADMINISTRATION CONSOLE </b>\n        </div>\n\n        <div id='topbarDeconnexion'>\n          Déconnexion\n        </div>\n\n        <ClientList clientList={ props.clientList }/>\n\n        {\n          props.currentRestaurant != null ?\n            <>\n              <div onClick={ () => changePage('dashboard') }>\n                Tableau de bord\n              </div>\n\n              <div onClick={ () => changePage('stat') }>\n                Mes statistiques\n              </div>\n\n              <div onClick={ () => changePage('advice') }>\n                Mon espace conseil\n              </div>\n\n              <div onClick={ () => changePage('restaurant') }>\n                Mon restaurant\n              </div>\n            </>\n          :\n            <>\n            </>\n        }\n    </Col>\n  )\n}\n\nfunction mapStateToProps(state) {\n  console.log('IN adminSideBar map to state : '+state.adminReducer);\n  return {\n    clientList: state.adminReducer.clientList,\n    currentRestaurant: state.adminReducer.currentRestaurant,\n  }\n}\n\nexport default connect(mapStateToProps)(AdminSideBar);\n","import React from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\n\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\nconst MyResponsiveBar = (props) => {\n\n  console.log('IN RENDER BAR !');\n  console.log('the BAR data : '+JSON.stringify(props.data, null, 2));\n  console.log('the BAR keys : '+JSON.stringify(props.keys, null, 2));\n  console.log('the BAR index : '+JSON.stringify(props.index, null, 2));\n  console.log('the BAR ALL DATA : '+JSON.stringify(props.allData, null, 2));\n\n\n  //const keys = [props.keys.map( item => { return item.id } )];\n\n  const toolTipElement = (node) => {\n    console.log('IN TOOLTIP : '+JSON.stringify(node, null, 2));\n    var foodIndex = props.allData.map( item => item.id ).indexOf(node.id);\n    console.log('FOOD INDEX  = '+foodIndex);\n    var dateIndex = props.allData[foodIndex].data.map( item => item.x ).indexOf(node.indexValue);\n    console.log('THE INDEX : ' + dateIndex);\n\n    return (\n      <>\n      <div>\n        { node.value }\n      </div>\n      {\n        /*\n        <div style={{backgroundColor: 'white', display: 'none'}}>\n          <> { node.id } </>\n          <br/>\n          <>{ node.indexValue } : </> <> { node.value } </>\n          <br/>\n          <> Moyenne : </> <> { node.value==0 ? 0 :(node.value / props.allData[foodIndex].data[dateIndex].tray).toFixed(2) } </>\n        </div>\n        */\n      }\n      </>\n    )\n  };\n\n  const margin = () => {\n    console.log('bar drilldown : '+props.drillDown);\n    if (props.drillDown == 'category' || props.drillDown == 'day') {\n      return { top: 30, right: 30, bottom: 70, left: 65 };\n    }\n    else {\n      return { top: 30, right: 30, bottom: 50, left: 65 };\n    }\n  }\n\n  const rotation = () => {\n    console.log('bar drilldown : '+props.drillDown);\n    if (props.drillDown == 'category' || props.drillDown == 'day') {\n      return 15;\n    }\n    else {\n      return 0;\n    }\n  }\n\n  const getBarColor = () => {\n    console.log('THE COLOR : '+JSON.stringify(props, null, ));\n    return props.customColor;\n  };\n\n  return (\n    <ResponsiveBar\n        onClick={ (e) => props.handleClick(e) }\n        data={ props.data }\n        keys={ [props.keys] }\n        indexBy={props.index}\n        colors={getBarColor}\n        borderRadius={5}\n        padding={0.5}\n        margin={margin()}\n        defs={[\n            {\n                id: 'dots',\n                type: 'patternDots',\n                background: 'inherit',\n                color: '#38bcb2',\n                size: 4,\n                padding: 1,\n                stagger: true\n            },\n            {\n                id: 'lines',\n                type: 'patternLines',\n                background: 'inherit',\n                color: '#eed312',\n                rotation: -45,\n                lineWidth: 6,\n                spacing: 10\n            }\n        ]}\n        fill={[\n            {\n                match: {\n                    id: 'fries'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'sandwich'\n                },\n                id: 'lines'\n            }\n        ]}\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: rotation(),\n            legend: '',\n            legendPosition: 'middle',\n            legendOffset: 32\n        }}\n        axisLeft={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: props.dataLegendLeftAxis,\n            legendPosition: 'middle',\n            legendOffset: -50\n        }}\n        labelFormat={d => <tspan y={ -10 }>{ d }</tspan>}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n    />\n  )\n}\n\nexport default MyResponsiveBar;\n","import React from 'react';\nimport { ResponsivePie } from '@nivo/pie'\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\nconst MyResponsivePie = ({ data /* see data tab */ }) => {\n\n  console.log('IN THE PIEEEEEEEEEEEEE : '+JSON.stringify(data, null, 2));\n\n  const theme = {\n    labels: {\n      text: {\n        fontSize: '15px',\n      }\n    }\n  };\n\n  const formatedData = [\n    data[1],\n    data[0]\n  ];\n\n  const getColors = (colorParam) => {\n    if (colorParam.id == 'Non_évitable') {\n      return '#90c261';\n    }\n    else {\n      return '#f7d426';\n    }\n  }\n\n  return (\n    <ResponsivePie\n        data={formatedData}\n        margin={{ top: 30, right: 20, bottom: 10, left: 20 }}\n        startAngle={90}\n        endAngle={-90}\n        innerRadius={0.6}\n        padAngle={0.7}\n        colors={ getColors }\n        borderWidth={1}\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n        radialLabelsSkipAngle={0}\n        radialLabelsTextXOffset={6}\n        radialLabelsTextColor=\"#333333\"\n        radialLabelsLinkOffset={0}\n        radialLabelsLinkDiagonalLength={16}\n        radialLabelsLinkHorizontalLength={24}\n        radialLabelsLinkStrokeWidth={1}\n        radialLabelsLinkColor={{ from: 'color' }}\n        slicesLabelsSkipAngle={0}\n        slicesLabelsTextColor=\"#333333\"\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n        theme={theme}\n        defs={[\n            {\n                id: 'dots',\n                type: 'patternDots',\n                background: 'inherit',\n                color: 'rgba(255, 255, 255, 0.3)',\n                size: 4,\n                padding: 1,\n                stagger: true\n            },\n            {\n                id: 'lines',\n                type: 'patternLines',\n                background: 'inherit',\n                color: 'rgba(255, 255, 255, 0.3)',\n                rotation: -45,\n                lineWidth: 6,\n                spacing: 10\n            }\n        ]}\n        fill={[\n            {\n                match: {\n                    id: 'ruby'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'c'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'go'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'python'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'scala'\n                },\n                id: 'lines'\n            },\n            {\n                match: {\n                    id: 'lisp'\n                },\n                id: 'lines'\n            },\n            {\n                match: {\n                    id: 'elixir'\n                },\n                id: 'lines'\n            },\n            {\n                match: {\n                    id: 'javascript'\n                },\n                id: 'lines'\n            }\n        ]}\n        \n    />\n  )\n}\n\nexport default MyResponsivePie;\n","export function changePageAction (data) {\n  return {\n        type: 'CHANGE_PAGE',\n        data: {\n                newPage: data\n              }\n      };\n};\n\nexport function getRawDataStart () {\n  return { type: 'GET_RAW_DATA_START' };\n};\n\nexport function getRawDataSuccess (data) {\n  return {\n        type: 'GET_RAW_DATA_SUCCESS',\n        data: data\n      };\n};\n\nexport function getRawDataError (error) {\n  return {\n        type: 'GET_RAW_DATA_ERROR',\n        error: error\n      };\n};\n\nexport function updateDrillDown (newLevel) {\n  return {\n        type: 'UPDATE_DRILLDOWN',\n        data: newLevel\n      };\n};\n\nexport function updateSelectedMonth (newMonth) {\n  return {\n        type: 'UPDATE_MONTH',\n        data: newMonth\n      };\n};\n\nexport function updateSelectedWeek (newWeek) {\n  return {\n        type: 'UPDATE_WEEK',\n        data: newWeek\n      };\n};\n\nexport function updateSelectedDay (newDay) {\n  return {\n        type: 'UPDATE_DAY',\n        data: newDay\n      };\n};\n\nexport function updateSelectedCategory (newCategory) {\n  return {\n        type: 'UPDATE_CATEGORY',\n        data: newCategory\n      };\n};\n\nexport function updateDataType (newType) {\n  return {\n        type: 'UPDATE_DATA_TYPE',\n        data: newType\n      };\n};\n","import React from 'react';                    // REACT\n\nimport Row from 'react-bootstrap/Row';              // BOOTSTRAP\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\n\nimport styles from './DashboardElement.module.css'   // CSS\n\nfunction DashboardElement(props) {\n\n  console.log('The dashboard element, props : '+props.connexionRedirectPath);\n\n  return(\n    <div className={styles.global}>\n\n        <div style={{color: props.color, height: '20%'}}>\n          <div className={styles.title}>\n            {props.title}\n          </div>\n        </div>\n\n        <div className={styles.centerComponent} style={{color: props.color}}>\n          <div className={styles.value}>\n            {props.value}\n          </div>\n          <div className={styles.legend}>\n            {props.legend}\n          </div>\n        </div>\n\n    </div>\n  )\n}\n\nexport default DashboardElement;\n\n/*\n\n<div style={{color: props.color, height:'20%'}}>\n  <div className={styles.title}>\n    {props.title}\n  </div>\n</div>\n\n<div className='centerComponent' style={{color: props.color}}>\n  <div className={styles.value}>\n    {props.value}\n  </div>\n</div>\n<div style={{color: '#a0a0a0'}}>\n  <div className={styles.legend}>\n    {props.legend}\n  </div>\n</div>\n\n*/\n","import React, { useEffect } from 'react';\n\nimport Bar from './Bar';\nimport Pie from './Pie';\n\nimport { useDispatch, connect } from 'react-redux';           //REDUX\nimport { getRawDataStart, getRawDataSuccess, getRawDataError, updateDrillDown, updateDataType, updateSelectedMonth, updateSelectedWeek, updateSelectedDay, updateSelectedCategory } from '../../../actions/client.action';  //ACTIONS\n\nimport { getFood, getFoodById, getAllSamplesForRestaurantAndDay, getAllTrayForRestraurantDay } from '../../../services/AdminAPI';           //API FUNCTIONS\n\nimport DashboardElement from './DashboardElement';      // COMPONENTS\n\nimport Row from 'react-bootstrap/Row';   //BOOTSTRAP\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nimport styles from './ClientDashboard.module.css'   // CSS\n\nconst Moment = require('moment');\nconst MomentRange = require('moment-range');\n\nconst moment = MomentRange.extendMoment(Moment);\nmoment.locale('fr');\n\nfunction ClientDashboard(props) {\n\n  const dispatch = useDispatch();\n\n  const getAllDates = () => {                         // ------------- get all dates\n    //console.log('Begin get all dates');\n    const year = new Date().getFullYear();\n    const currentDate = new Date();\n    //const startDay = moment().startOf('year');\n    const startDay = moment('2020-02-01');\n    //const endDay = moment(currentDate);\n    const endDay = moment('2020-03-10');\n\n    const allDates = [];\n    allDates.push(startDay.clone());\n    while( (startDay.add(1, 'days')).isBefore(endDay) ){\n      allDates.push( startDay.clone() );\n    }\n    allDates.push( endDay.clone() );\n    //console.log('All dates : '+JSON.stringify(allDates, null, 2));\n    return allDates;\n  }\n\n  const getFoodValues = async (foodId) => {                  // ------------- get food values\n    //console.log('In get food values');\n    var food = null;\n    await getFoodById(foodId)\n      .then (res => {\n        console.log('In then get food values : '+JSON.stringify(res, null, 2));\n        food = res.Items[0];\n      })\n      .catch( err => {\n        console.log('ERROR in get food values : '+err);\n      })\n    //console.log('The food values : '+JSON.stringify(food, null, 2));\n    return food;\n  }\n\n  const getAllSamplesForDay = async (restaurant, day) => {              // ------------- get all samples for date\n    //console.log('In get all samples for day - '+day);\n    var samples = null;\n    /*const samples = getAllSamplesForRestaurantAndDay(restaurant, day.format('YYYY-MM-DD'));\n    console.log('The samples : '+JSON.stringify(samples, null, 2));\n    return samples;*/\n    await getAllSamplesForRestaurantAndDay(restaurant, day.format('YYYY-MM-DD'))\n      .then( res => {\n        //console.log('In then get all samples for - ' +day.format('YYYY-MM-DD')/*+ ': '+JSON.stringify(res, null, 2)*/);\n        samples = res;\n      })\n      .catch( err => {\n        console.log('In catch error get all samples : '+JSON.stringify(err, null, 2));\n      })\n    //console.log('The samples of the day : '+JSON.stringify(samples, null, 2));\n    return samples;\n  }\n\n  const getAllData = async () => {                                // ------------- get all raw data\n    console.log('In get all raw data')\n    var allRawData= {\n      mass: 0,\n      cost: 0,\n      co2: 0,\n      tray: 0,\n      inevitableMass: 0,\n      inevitableCost: 0,\n      inevitableCo2: 0,\n      months: []\n    };\n    const allDates = getAllDates();\n    const allFoods = new Map();\n    //const allTrays = new Map();\n    const allCategories = ['Protéines','Légumes','Fruit','Féculents','Crudités','Fromage','Dessert','Plats composés','Pain', 'Oeufs', 'Déchets inévitables'];\n\n    for (const day of allDates) {\n      console.log('Before getting all trays');\n      var numberOfTray = 0;\n      await getAllTrayForRestraurantDay(props.restaurantName, day)\n        .then( res => {\n          //console.log('Success in getting trays :'+JSON.stringify(res, null, 2));\n          numberOfTray = res;\n        })\n        .catch( err => {\n          //console.log('Error in getting trays :'+JSON.stringify(err, null, 2));\n        })\n      var trayAlreadyAdded = false;\n      console.log('After getting for : '+ day.format('YYYY MMMM DD') +' - all trays : '+numberOfTray);\n\n      console.log('In for get all samples for : '+day);\n      const samples = await getAllSamplesForDay(props.restaurantName, day);\n      //console.log('In result  sample :'+JSON.stringify(samples, null, 2));\n      console.log('For the day '+day+' there is '+samples.Count+' samples');\n      for (const sample of samples.Items) {\n        if (sample.aliment_id != 6){\n\n          //console.log('The current sample : '+JSON.stringify(sample, null, 2));\n          if (allFoods.get(sample.aliment_id.toFixed(0)) == undefined) {   // create the food values if needed\n            const newFood = await getFoodValues(sample.aliment_id.toFixed(0));\n            allFoods.set(newFood.idFood.toFixed(0), newFood);\n          }\n\n\n          const foodValues = allFoods.get(sample.aliment_id.toFixed(0));   // get the food values\n          //console.log('The food values : '+JSON.stringify(foodValues, null, 2));\n          var inevitableMass = 0;\n          var inevitableCost = 0;\n          var inevitableCo2 = 0;\n          if (foodValues.categoryFood == 'Déchets inévitables') {\n            var wastedInevitableMass = (sample.volume /1000) * foodValues.volumicMassFood ;\n            inevitableMass = wastedInevitableMass;\n            inevitableCo2 = ( wastedInevitableMass * (foodValues.co2Food + (204.97/1000)));\n            inevitableCost = wastedInevitableMass * (204.97/1000);\n          }\n          var newValues = {};\n          console.log('before affect');\n          if (newValues.food == 'Salade') {\n            var wastedSaladMass = (sample.surface/100) * foodValues.surfaceMasse ;\n            newValues = {                                 // create the new values for Salad\n              food: foodValues.nameFood,\n              volume: sample.volume,\n              mass: wastedSaladMass,\n              co2: ( wastedSaladMass * (foodValues.co2Food + (204.97/1000))),\n              cost: (( wastedSaladMass * (foodValues.PriceFood/1000)) + (wastedMass)*0.00354) + ((wastedMass/1000000)*110),\n              inevitableMass: inevitableMass,\n              inevitableCost: inevitableCost,\n              inevitableCo2: inevitableCo2\n            }\n          }\n          else {\n            var wastedMass = (sample.volume /1000) * foodValues.volumicMassFood ;\n            newValues = {                                 // create the new values\n              food: foodValues.nameFood,\n              volume: sample.volume,\n              mass: wastedMass,   // ( mm3/1000) * g/ml )\n              co2: ( wastedMass * (foodValues.co2Food + (204.97/1000))),\n              cost: (( wastedMass * (foodValues.PriceFood/1000)) + (wastedMass)*0.00354) + ((wastedMass/1000000)*110),\n              inevitableMass: inevitableMass,\n              inevitableCost: inevitableCost,\n              inevitableCo2: inevitableCo2\n            }\n          }\n          console.log('NEWWWWWWWWW VAAAAAL : '+JSON.stringify(newValues, null, 2));\n\n          allRawData.mass += newValues.mass;        // update year values\n          allRawData.cost += newValues.cost;\n          allRawData.co2 += newValues.co2;\n          allRawData.inevitableMass += newValues.inevitableMass;\n          allRawData.inevitableCost += newValues.inevitableCost;\n          allRawData.inevitableCo2 += newValues.inevitableCo2;\n          if (!trayAlreadyAdded) {\n            allRawData.tray += numberOfTray;\n          }\n\n\n          const monthIndex = moment(day).month();\n          if (allRawData.months[monthIndex] == undefined){      // get or create month\n            allRawData.months[monthIndex] = {\n              index: moment(day).format('MMMM'),\n              mass: 0,\n              cost: 0,\n              co2: 0,\n              tray: 0,\n              inevitableMass: 0,\n              inevitableCost: 0,\n              inevitableCo2: 0,\n              weeks: []\n            };\n          }\n          allRawData.months[monthIndex].mass += newValues.mass;         //update the month values\n          allRawData.months[monthIndex].cost += newValues.cost;\n          allRawData.months[monthIndex].co2 += newValues.co2;\n          allRawData.months[monthIndex].inevitableMass += newValues.inevitableMass;\n          allRawData.months[monthIndex].inevitableCost += newValues.inevitableCost;\n          allRawData.months[monthIndex].inevitableCo2 += newValues.inevitableCo2;\n          if (!trayAlreadyAdded) {\n            allRawData.months[monthIndex].tray += numberOfTray;\n          }\n\n          var weekIndex = moment(day).week() - moment(day).startOf('month').week();\n          if ( moment(day).startOf('month').day() == 5 || moment(day).startOf('month').day() == 6 ){ //if start of month is saturday or sunday\n            weekIndex -= 1;\n          }\n          if (allRawData.months[monthIndex].weeks[weekIndex] == undefined){ // get or create week\n            allRawData.months[monthIndex].weeks[weekIndex] = {\n              index: weekIndex +' - '+ day,\n              mass: 0,\n              cost: 0,\n              co2: 0,\n              tray: 0,\n              inevitableMass: 0,\n              inevitableCost: 0,\n              inevitableCo2: 0,\n              days: []\n            };\n          }\n          allRawData.months[monthIndex].weeks[weekIndex].mass += newValues.mass;    //update the week valus\n          allRawData.months[monthIndex].weeks[weekIndex].cost += newValues.cost;\n          allRawData.months[monthIndex].weeks[weekIndex].co2 += newValues.co2;\n          allRawData.months[monthIndex].weeks[weekIndex].inevitableMass += newValues.inevitableMass;\n          allRawData.months[monthIndex].weeks[weekIndex].inevitableCost += newValues.inevitableCost;\n          allRawData.months[monthIndex].weeks[weekIndex].inevitableCo2 += newValues.inevitableCo2;\n          if (!trayAlreadyAdded) {\n            console.log('Add '+ numberOfTray +' for S'+weekIndex);\n            allRawData.months[monthIndex].weeks[weekIndex].tray += numberOfTray;\n          }\n\n          const dayIndex = moment(day).day()-1; // -1 because with moment sunday is 0\n          if (allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex] == undefined){ // get or create day\n            allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex] = {\n              index: moment(day).format('dddd DD'),\n              mass: 0,\n              cost: 0,\n              co2: 0,\n              tray: 0,\n              inevitableMass: 0,\n              inevitableCost: 0,\n              inevitableCo2: 0,\n              categories: []\n            };\n          }\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].mass += newValues.mass;    //update the day valus\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].cost += newValues.cost;\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].co2 += newValues.co2;\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].inevitableMass += newValues.inevitableMass;\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].inevitableCost += newValues.inevitableCost;\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].inevitableCo2 += newValues.inevitableCo2;\n          if (!trayAlreadyAdded) {\n            allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].tray += numberOfTray;\n          }\n\n          const categoryIndex = allCategories.indexOf(allFoods.get(sample.aliment_id.toFixed(0)).categoryFood);\n          if (allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex] == undefined){ // get or create category\n            allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex] = {\n              index: allFoods.get(sample.aliment_id.toFixed(0)).categoryFood,\n              mass: 0,\n              cost: 0,\n              co2: 0,\n              tray: 0,\n              inevitableMass: 0,\n              inevitableCost: 0,\n              inevitableCo2: 0,\n              foods: []\n            };\n          }\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].mass += newValues.mass;    //update the category valus\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].cost += newValues.cost;\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].co2 += newValues.co2;\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].inevitableMass += newValues.inevitableMass;\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].inevitableCost += newValues.inevitableCost;\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].inevitableCo2 += newValues.inevitableCo2;\n          if (!trayAlreadyAdded) {\n            allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].tray += numberOfTray;\n          }\n\n          var foodIndex = allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods.map(element => element.food).indexOf(newValues.food);\n          console.log('foodIndex is :'+newValues);\n          if(foodIndex == -1) {\n            console.log('create blbl new food :'+newValues.food)\n            console.log('food blbl is :'+JSON.stringify(sample, null, 2));\n            const newAliment = {\n              food: newValues.food,\n              index: newValues.food,\n              mass: 0,\n              cost: 0,\n              co2: 0,\n              tray: 0,\n              inevitableMass: 0,\n              inevitableCost: 0,\n              inevitableCo2: 0,\n            };\n            allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods.push(newAliment);\n          }\n          foodIndex = allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods.map(element => element.food).indexOf(newValues.food);\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods[foodIndex].mass += newValues.mass;    //update the food valus\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods[foodIndex].cost += newValues.cost;\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods[foodIndex].co2 += newValues.co2;\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods[foodIndex].inevitableMass += newValues.inevitableMass;\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods[foodIndex].inevitableCost += newValues.inevitableCost;\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods[foodIndex].inevitableCo2 += newValues.inevitableCo2;\n          if (!trayAlreadyAdded) {\n            allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods[foodIndex].tray += numberOfTray;\n            trayAlreadyAdded = true;\n          }\n        }\n      }\n    }\n    return new Promise ( (resolve, reject) => {\n      console.log('in new promise');\n      resolve(allRawData);\n    } );\n  }\n\n  const getTotalValue = () => {                                                                 // GET TOTAL VALUE\n    console.log('IN GET TOTAL VALUE');\n    const graphValues = [];\n    const rawData = props.clientState.rawData;\n    const selectedMonth = props.clientState.selectedMonth;\n    const selectedWeek = props.clientState.selectedWeek;\n    const selectedDay = props.clientState.selectedDay;\n    const selectedCategory = props.clientState.selectedCategory;\n    var legend = '';\n    var barColor = null;\n    switch (props.clientState.dataType) {\n      case 'mass':\n        legend = 'Quantité (kg)';\n        barColor = '#90c261';\n        break;\n      case 'cost':\n        legend = 'Coût (€)';\n        barColor = '#54b0e3';\n        break;\n      case 'co2':\n        legend = 'GES CO2';\n        barColor = '#f7d426';\n        break;\n      case 'tray':\n        legend = 'Nombre de plateau';\n        barColor = '#666666';\n        break;\n      default:\n        legend = 'Quantité';\n        break;\n\n    };\n    switch (props.clientState.drillDownLevel) {\n      case 'year':                                                // DRILLDOWN YEAR\n      var titleLegend = 'Année '+moment().format('YYYY');\n        for (const [monthIndex, monthName] of ['Jan', 'Fév', 'Mars', 'Avl', 'Mai', 'Juin', 'Jui', 'Août', 'Sept', 'Oct', 'Nov', 'Déc'].entries()){\n          const monthValue = rawData.months[monthIndex];\n          var newBar = null;\n          if (monthValue == undefined || monthValue==null) {\n            newBar = {\n              index: monthName,\n              value: 0\n            };\n          }\n          else {\n            var itemValue = null;\n            switch (props.clientState.dataType) {\n              case 'mass':\n                itemValue = (monthValue.mass/1000).toFixed(2);\n                break;\n              case 'cost':\n                itemValue = monthValue.cost.toFixed(2);\n                break;\n              case 'co2':\n                itemValue = monthValue.co2.toFixed(2);\n                break;\n              case 'tray':\n                itemValue = monthValue.tray;\n                break;\n              default:\n\n            };\n            newBar = {\n              index: monthName,\n              value: itemValue\n            };\n          }\n          graphValues.push(newBar);\n        }\n        var evitable = 0;\n        var inevitable = 0;\n        switch (props.clientState.dataType) {\n          case 'mass':\n            evitable = rawData.mass - rawData.inevitableMass;\n            inevitable = rawData.inevitableMass;\n            break;\n          case 'cost':\n            evitable = rawData.cost - rawData.inevitableCost;\n            inevitable = rawData.inevitableCost;\n            break;\n          case 'co2':\n            evitable = rawData.co2 - rawData.inevitableCo2;\n            inevitable = rawData.inevitableCo2;\n            break;\n          default:\n            evitable = rawData.mass - rawData.inevitableMass;\n            inevitable = rawData.inevitableMass;\n        };\n        return {\n          mass: rawData.mass,\n          cost: rawData.cost,\n          co2: rawData.co2,\n          tray: rawData.tray,\n          graph: graphValues,\n          legend: legend,\n          titleLegend: titleLegend,\n          barColor: barColor,\n          evitable: [\n                      {\n                        \"id\": \"Evitable\",\n                        \"label\": \"Evitable\",\n                        \"value\": (evitable/1000).toFixed(2)\n                      },\n                      {\n                        \"id\": \"Non_évitable\",\n                        \"label\": \"Non-évitable\",\n                        \"value\": (inevitable/1000).toFixed(2)\n                      }\n                    ]\n        }\n        break;\n      case 'month':                                                                       // DRILLDOWN MONTH\n        console.log('BEGIN '+props.clientState.drillDownLevel+' MONTH : '+props.clientState.selectedMonth);\n\n        var currentYear = moment().year();\n        console.log('The year : '+currentYear);\n        var startDate = moment([currentYear, props.clientState.selectedMonth]);\n        console.log('The start date :'+startDate.format(\"dddd, MMMM Do YYYY, h:mm:ss a\"));\n        var titleLegend = startDate.format('MMMM YYYY');\n        var firstDay = moment(startDate).startOf('month');\n        var endDay = moment(startDate).endOf('month');\n\n        var monthRange = moment.range(firstDay, endDay);\n        var weeks = []\n        for (const mday of monthRange.by('days')) {\n           if (weeks.map( item => item.week ).indexOf(mday.week()) === -1) {\n               weeks.push( { week: mday.week(), firstDate: mday } );\n           }\n        }\n        console.log('the WEEKS : '+JSON.stringify(weeks, null, 2));\n\n        for (const [indexWeek, weekDate] of weeks.entries()) {\n          const weekValue = rawData.months[selectedMonth].weeks[indexWeek];\n          var newBar = null;\n          var chartIndexDay = weeks[indexWeek].firstDate;\n          if (weeks[indexWeek].firstDate.add(1, 'days').format('dddd') == 'Sunday'){\n            chartIndexDay = weeks[indexWeek].firstDate.add(1, 'days')\n          }\n          if (weekValue == undefined || weekValue == null) {\n            newBar = {\n              index: 'S'+(indexWeek+1),\n              value: 0\n            };\n          }\n          else {\n            var itemValue = null;\n            switch (props.clientState.dataType) {\n              case 'mass':\n                itemValue = (weekValue.mass/1000).toFixed(2);\n                break;\n              case 'cost':\n                itemValue = weekValue.cost.toFixed(2);\n                break;\n              case 'co2':\n                itemValue = weekValue.co2.toFixed(2);\n                break;\n              case 'tray':\n                itemValue = weekValue.tray;\n                break;\n              default:\n\n            };\n            newBar = {\n              index: 'S'+(indexWeek+1),\n              value: itemValue\n            };\n          }\n          graphValues.push(newBar);\n        }\n        console.log('Before return for month : '+JSON.stringify(graphValues, null, 2));\n        var evitable = 0;\n        var inevitable = 0;\n        switch (props.clientState.dataType) {\n          case 'mass':\n            evitable = rawData.months[selectedMonth].mass - rawData.months[selectedMonth].inevitableMass;\n            inevitable = rawData.months[selectedMonth].inevitableMass;\n            break;\n          case 'cost':\n            evitable = rawData.months[selectedMonth].cost - rawData.months[selectedMonth].inevitableCost;\n            inevitable = rawData.months[selectedMonth].inevitableCost;\n            break;\n          case 'co2':\n            evitable = rawData.months[selectedMonth].co2 - rawData.months[selectedMonth].inevitableCo2;\n            inevitable = rawData.months[selectedMonth].inevitableCo2;\n            break;\n          default:\n            evitable = rawData.months[selectedMonth].mass - rawData.months[selectedMonth].inevitableMass;\n            inevitable = rawData.months[selectedMonth].inevitableMass;\n        };\n        return {\n          mass: rawData.months[selectedMonth].mass,\n          cost: rawData.months[selectedMonth].cost,\n          co2: rawData.months[selectedMonth].co2,\n          tray: rawData.months[selectedMonth].tray,\n          graph: graphValues,\n          titleLegend: titleLegend,\n          legend: legend,\n          barColor: barColor,\n          evitable: [\n                      {\n                        \"id\": \"Evitable\",\n                        \"label\": \"Evitable\",\n                        \"value\": (evitable/1000).toFixed(2)\n                      },\n                      {\n                        \"id\": \"Non_évitable\",\n                        \"label\": \"Non-évitable\",\n                        \"value\": (inevitable/1000).toFixed(2)\n                      }\n                    ]\n        }\n        break;\n      case 'week':                                                                           // DRILLDOWN WEEK\n        console.log('BEGIN '+props.clientState.drillDownLevel+' MONTH : '+props.clientState.selectedMonth);\n        var currentYear = moment().year();\n        console.log('The year : '+currentYear);\n        var startDate = moment([currentYear, props.clientState.selectedMonth]);\n        console.log('The start date :'+startDate.format(\"dddd, MMMM Do YYYY, h:mm:ss a\"));\n        var firstDay = moment(startDate).startOf('month');\n        var endDay = moment(startDate).endOf('month');\n\n        var monthRange = moment.range(firstDay, endDay);\n        var weeks = []\n        for (const mday of monthRange.by('days')) {\n           if (weeks.map( item => item.week ).indexOf(mday.week()) === -1) {\n             var testDate = mday.clone();\n             if (testDate.add(1, 'days').format('dddd') == 'Sunday'){\n               weeks.push( { week: testDate.week(), firstDate: testDate.add(1, 'days') } );\n             }\n             else {\n               weeks.push( { week: mday.week(), firstDate: mday } );\n             }\n           }\n        }\n        console.log('THE WEEKS : '+JSON.stringify(weeks, null, 2));\n        console.log('selected week : '+selectedWeek);\n        var titleLegend = 'Semaine '+ (selectedWeek+1) +' de '+ startDate.format('MMMM YYYY') +' ('+ weeks[selectedWeek].firstDate.format('D/M/YY') +' au ...';\n        for (const [indexDay, itemDay] of ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi'].entries()){\n          const dayValue = rawData.months[selectedMonth].weeks[selectedWeek].days[indexDay];\n          var newBar = null;\n          if (dayValue == undefined || dayValue==null) {\n            newBar = {\n              index: itemDay,\n              value: 0\n            };\n          }\n          else {\n            var itemValue = null;\n            switch (props.clientState.dataType) {\n              case 'mass':\n                itemValue = (dayValue.mass/1000).toFixed(2);\n                break;\n              case 'cost':\n                itemValue = dayValue.cost.toFixed(2);\n                break;\n              case 'co2':\n                itemValue = dayValue.co2.toFixed(2);\n                break;\n              case 'tray':\n                itemValue = dayValue.tray;\n                break;\n              default:\n\n            }\n            newBar = {\n              index: itemDay,\n              value: itemValue\n            };\n          }\n          graphValues.push(newBar);\n        }\n\n        switch (props.clientState.dataType) {\n          case 'mass':\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].mass - rawData.months[selectedMonth].weeks[selectedWeek].inevitableMass;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].inevitableMass;\n            break;\n          case 'cost':\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].cost - rawData.months[selectedMonth].weeks[selectedWeek].inevitableCost;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].inevitableCost;\n            break;\n          case 'co2':\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].co2 - rawData.months[selectedMonth].weeks[selectedWeek].inevitableCo2;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].inevitableCo2;\n            break;\n          default:\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].mass - rawData.months[selectedMonth].weeks[selectedWeek].inevitableMass;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].inevitableMass;\n        };\n        return {\n          mass: rawData.months[selectedMonth].weeks[selectedWeek].mass,\n          cost: rawData.months[selectedMonth].weeks[selectedWeek].cost,\n          co2: rawData.months[selectedMonth].weeks[selectedWeek].co2,\n          tray: rawData.months[selectedMonth].weeks[selectedWeek].tray,\n          graph: graphValues,\n          barColor: barColor,\n          legend: legend,\n          titleLegend: titleLegend,\n          evitable: [\n                      {\n                        \"id\": \"Evitable\",\n                        \"label\": \"Evitable\",\n                        \"value\": (evitable/1000).toFixed(2)\n                      },\n                      {\n                        \"id\": \"Non_évitable\",\n                        \"label\": \"Non-évitable\",\n                        \"value\": (inevitable/1000).toFixed(2)\n                      }\n                    ]\n        }\n        break;\n      case 'day':\n        console.log('BEGIN '+props.clientState.drillDownLevel+' MONTH : '+props.clientState.selectedMonth);\n        console.log('IN DRILLDOWN DAY');                                                              // DRILLDOWN DAY\n        for (const categoryValue of rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories) {\n          console.log('CATEGORY values : '+JSON.stringify(categoryValue, null, 2));\n          var newBar = null;\n          if (categoryValue == undefined) {\n            newBar = {\n              index: '',\n              value: 0\n            };\n          }\n          else {\n            var itemValue = null;\n            switch (props.clientState.dataType) {\n              case 'mass':\n                itemValue = (categoryValue.mass/1000).toFixed(2);\n                break;\n              case 'cost':\n                itemValue = categoryValue.cost.toFixed(2);\n                break;\n              case 'co2':\n                itemValue = categoryValue.co2.toFixed(2);\n                break;\n              case 'tray':\n                itemValue = categoryValue.tray;\n                break;\n              default:\n\n            }\n            newBar = {\n              index: categoryValue.index,\n              value: itemValue\n            };\n          }\n          graphValues.push(newBar);\n        }\n        switch (props.clientState.dataType) {\n          case 'mass':\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].mass - rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].inevitableMass;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].inevitableMass;\n            break;\n          case 'cost':\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].cost - rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].inevitableCost;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].inevitableCost;\n            break;\n          case 'co2':\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].co2 - rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].inevitableCo2;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].inevitableCo2;\n            break;\n          default:\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].mass - rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].inevitableMass;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].inevitableMass;\n        };\n        return {\n          mass: rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].mass,\n          cost: rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].cost,\n          co2: rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].co2,\n          tray: rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].tray,\n          graph: graphValues,\n          barColor: barColor,\n          legend: legend,\n          evitable: [\n                      {\n                        \"id\": \"Evitable\",\n                        \"label\": \"Evitable\",\n                        \"value\": (evitable/1000).toFixed(2)\n                      },\n                      {\n                        \"id\": \"Non_évitable\",\n                        \"label\": \"Non-évitable\",\n                        \"value\": (inevitable/1000).toFixed(2)\n                      }\n                    ]\n        }\n        break;\n      case 'category':                                                                             // DRILLDOWN CATEGORY\n        console.log('BEGIN '+props.clientState.drillDownLevel+' MONTH : '+props.clientState.selectedMonth);\n        for (const foodValue of rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].foods) {\n          var itemValue = null;\n          switch (props.clientState.dataType) {\n            case 'mass':\n              itemValue = (foodValue.mass/1000).toFixed(2);\n              break;\n            case 'cost':\n              itemValue = foodValue.cost.toFixed(2);\n              break;\n            case 'co2':\n              itemValue = foodValue.co2.toFixed(2);\n              break;\n            case 'tray':\n              itemValue = foodValue.tray.toFixed(2);\n              break;\n            default:\n\n          }\n          const newBar = {\n            index: foodValue.index,\n            value: itemValue\n          };\n          graphValues.push(newBar);\n        }\n        switch (props.clientState.dataType) {\n          case 'mass':\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].mass - rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].inevitableMass;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].inevitableMass;\n            break;\n          case 'cost':\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].cost - rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].inevitableCost;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].inevitableCost;\n            break;\n          case 'co2':\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].co2 - rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].inevitableCo2;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].inevitableCo2;\n            break;\n          default:\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].mass - rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].inevitableMass;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].inevitableMass;\n        };\n        return {\n          mass: rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].mass,\n          cost: rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].cost,\n          co2: rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].co2,\n          tray: rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].tray,\n          graph: graphValues,\n          barColor: barColor,\n          legend: legend,\n          evitable: [\n                      {\n                        \"id\": \"Evitable\",\n                        \"label\": \"Evitable\",\n                        \"value\": (evitable/1000).toFixed(2)\n                      },\n                      {\n                        \"id\": \"Non_évitable\",\n                        \"label\": \"Non-évitable\",\n                        \"value\": (inevitable/1000).toFixed(2)\n                      }\n                    ]\n        }\n        break;\n      default:                                                              //DRILLDOWN DEFAULT\n        return null;\n        break;\n    }\n  }\n\n  const handleClickOnBar = (element) => {\n    console.log('IN on click on bar');\n    switch (props.clientState.drillDownLevel) {\n      case 'year':\n          dispatch(updateSelectedMonth(element.index));\n          dispatch(updateDrillDown('month'));\n        break;\n      case 'month':\n          dispatch(updateSelectedWeek(element.index));\n          dispatch(updateDrillDown('week'));\n        break;\n      case 'week':\n          dispatch(updateSelectedDay(element.index));\n          dispatch(updateDrillDown('day'));\n        break;\n      case 'day':\n          dispatch(updateSelectedCategory(element.index));\n          dispatch(updateDrillDown('category'));\n        break;\n      case 'category':\n\n        break;\n      default:\n\n    }\n    console.log('End of on click on bar');\n  }\n\n  const handleReturn = () => {\n    console.log('In handleReturn !, month = '+props.clientState.selectedMonth);\n    switch (props.clientState.drillDownLevel) {\n      case 'year':\n\n        break;\n      case 'month':\n          dispatch(updateSelectedMonth(null));\n          dispatch(updateDrillDown('year'));\n        break;\n      case 'week':\n          dispatch(updateSelectedWeek(null));\n          dispatch(updateDrillDown('month'));\n        break;\n      case 'day':\n          dispatch(updateSelectedDay(null));\n          dispatch(updateDrillDown('week'));\n        break;\n      case 'category':\n        dispatch(updateSelectedCategory(null));\n        dispatch(updateDrillDown('day'));\n        break;\n      default:\n\n    }\n    console.log('End of handle return');\n  }\n\n  const handleUpdateDataType = (newType) => {\n    console.log('In hlandle update data type');\n    dispatch(updateDataType(newType));\n  }\n\n  const getPercentValue = () => {\n    console.log('EVITABLE : '+getTotalValue().evitable[0].value);\n    console.log('INEVITABLE : '+getTotalValue().evitable[1].value);\n    const evitable = parseInt(getTotalValue().evitable[0].value);\n    const inevitable = parseInt(getTotalValue().evitable[1].value)\n    const value = (evitable / (evitable + inevitable) ) * 100;\n    return value.toFixed(0);\n  }\n\n\n  // NOT a FUCNTION\n  console.log('NOT A FUNCION')\n  if (props.clientState.error != false) {\n    console.log('ERROR : '+JSON.stringify(props.clientState.error, null, 2));\n  }\n  else if (!props.clientState.fetched && !props.clientState.fetching) {\n    console.log('Raw data not fetched : ['+props.clientState.fetched+'] and not fetching['+props.clientState.fetching+']');\n    dispatch(getRawDataStart());\n    console.log('Before get all data : '+props.adminState.fetched);\n    getAllData()\n      .then(res => {\n        console.log('In success get raw data : '+JSON.stringify(res, null, 2));\n        dispatch(getRawDataSuccess(res));\n      })\n      .catch(err => {\n        console.log('In error get raw data : '+err+' détails : '+JSON.stringify(err, null, 2));\n        dispatch(getRawDataError(err));\n      })\n  }\n\n  console.log('Before render client dashboard');\n  return(\n    <Col className={styles.globalContainer}>\n      <Row>\n        <Col md={{span: 12, offset: 0}}>\n         <Row className=\"justify-content-md-center\">\n           {\n             props.clientState.fetched ?\n              <h1 className={styles.pageTitle}> Mon tableau de bord - { getTotalValue().titleLegend } </h1>\n            :\n              <h1 className={styles.pageTitle}> Mon tableau de bord </h1>\n          }\n         </Row>\n        </Col>\n      </Row>\n\n      {\n        props.clientState.fetched ?\n          <div>\n            <Row className=\"justify-content-md-center\">\n              <Col md={{span: 6, offset: 0}}>\n                <Row>\n                  <Col md={{span: 6, offset: 0}}>\n                    <Row className=\"justify-content-md-center\">\n                      <div onClick={ () => handleUpdateDataType('mass') } className={styles.dashboardElement}>\n                        <DashboardElement value={ (getTotalValue().mass/1000).toFixed(2) + ' kg' } title={'Quantité gaspillée'} legend={'par les convives'} color={'#90c261'} />\n                      </div>\n                    </Row>\n\n                    <Row>\n                      <div className={styles.dividerDiv}>\n                      </div>\n                    </Row>\n\n                    <Row className=\"justify-content-md-center\">\n                      <div onClick={ () => handleUpdateDataType('mass') } className={styles.dashboardElement}>\n                        <DashboardElement value={ (getTotalValue().mass / getTotalValue().tray).toFixed(2) + ' g' } title={'Quantité gaspillée / convive'} legend={'par repas servis'} color={'#90c261'} />\n                      </div>\n                    </Row>\n                  </Col>\n\n                  <Col md={{span: 6, offset: 0}}>\n                    <Row className=\"justify-content-md-center\">\n                      <div onClick={ () => handleUpdateDataType('cost') }  className={styles.dashboardElement}>\n                        <DashboardElement value={ getTotalValue().cost.toFixed(2) + ' €' } title={'Coût économique'} legend={'coût complet du gaspillage'} color={'#54b0e3'} />\n                      </div>\n                    </Row>\n\n                    <Row>\n                      <div className={styles.dividerDiv} style={{width: '10px'}}>\n                      </div>\n                    </Row>\n\n                    <Row className=\"justify-content-md-center\">\n                      <div onClick={ () => handleUpdateDataType('cost') } className={styles.dashboardElement}>\n                        <DashboardElement value={ (getTotalValue().cost / getTotalValue().tray).toFixed(2) + ' €' } title={'Coût économique / convive'} legend={'coût complet du repas'} color={'#54b0e3'} />\n                      </div>\n                    </Row>\n                  </Col>\n                </Row>\n              </Col>\n\n              <Col md={{span: 6, offset: 0}} >\n                <Row className=\"justify-content-md-center\">\n                  <div className={styles.dashboardBarChartGlobal}>\n                    <Row>\n                      <Col md={{span: 8, offset: 0}}>\n                        <h2 className={styles.barChartTitle}> Histogramme du gaspillage alimentaire </h2>\n                      </Col>\n                      <Col md={{span: 3, offset: 1}}>\n                        {\n                          props.clientState.drillDownLevel == 'year' ?\n                            <> </>\n                          :\n                            <>\n                              <style type=\"text/css\">\n                                {`\n                                  .btn-custom-grey {\n                                    font-size: 20px;\n                                    background-color: #666666;\n                                    border-width: 0px;\n                                    color: white;\n                                  }\n\n                                  .btn-custom-grey:hover {\n                                    font-size: 20px;\n                                    background-color: #525252;\n                                    border-width: 0px;\n                                    color: white;\n                                  }\n                                `}\n                              </style>\n                              <Button variant='custom-grey' onClick={handleReturn}> Retour </Button>\n                            </>\n                        }\n                      </Col>\n                    </Row>\n                    <Row>\n                      <div className={styles.dashboardBarChart}>\n                        <Bar data={ getTotalValue().graph } keys={'value'} index={'index'} handleClick={ handleClickOnBar } customColor={getTotalValue().barColor} dataLegendLeftAxis={getTotalValue().legend} drillDown={props.clientState.drillDownLevel}/>\n                      </div>\n                    </Row>\n                  </div>\n                </Row>\n              </Col>\n            </Row>\n\n            <Row>\n              <div className={styles.dividerDiv}>\n              </div>\n            </Row>\n\n            <Row>\n              <Col md={{span: 3, offset: 0}}>\n                <Row className=\"justify-content-md-center\">\n                  <div onClick={ () => handleUpdateDataType('co2')} className={styles.dashboardElement}>\n                    <DashboardElement value={ getTotalValue().co2.toFixed(2) } title={'Impact environnemental'} legend={'GES en kg de CO2'} color={'#f7d426'} className={styles.nivoBarStyle} />\n                  </div>\n                </Row>\n              </Col>\n\n              <Col md={{span: 3, offset: 0}}>\n                <Row className=\"justify-content-md-center\">\n                  <div onClick={ () => handleUpdateDataType('tray')} className={styles.dashboardElement}>\n                    <DashboardElement value={ getTotalValue().tray } title={'Nombre de couverts'} legend={'repas servis'} color={'#666666'} />\n                  </div>\n                </Row>\n              </Col>\n\n              <Col md={{span: 6, offset: 0}}>\n                <Row className=\"justify-content-md-center\">\n                  <div className={styles.dashboardPieChartGlobal}>\n                    <h2  className={styles.pieChartTitle}> Répartition des déchets </h2>\n                    <div className={styles.dashboardPieChart}>\n                      <Pie data={ getTotalValue().evitable } />\n                    </div>\n                    <p className={styles.percent}> {getPercentValue()} % </p>\n                  </div>\n                </Row>\n              </Col>\n            </Row>\n          </div>\n        :\n          <h1> Currently getting the data </h1>\n      }\n    </Col>\n  )\n}\n\nfunction mapStateToProps(state) {\n  //console.log('IN dashboard map to state : '+JSON.stringify(state.clientReducer, null, 2));\n  console.log('In dashboard state to map :'+state.adminReducer.fetched)\n  return {\n    clientState: state.clientReducer,\n    rawData: state.clientReducer.rawData,\n    adminState: state.adminReducer,\n  }\n}\n\nexport default connect(mapStateToProps)(ClientDashboard);\n","import React from 'react';          //REACT\n\nimport ErrorFormField from '../../Common/ErrorFormField/ErrorFormField';   //COMPONENTS\n\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\nimport { createClientStart, createClientSuccess, createClientError } from '../../../actions/admin.action';  //ACTIONS\n\nimport { createClient } from '../../../services/AdminAPI';           //API FUNCTIONS\n\nimport { Button, Form, Col, Row, Container } from 'react-bootstrap';  //BOOTSTRAP\n\nimport { Formik } from 'formik';    //FORMIK\nimport * as Yup from 'yup';         //YUP\n\nimport styles from './ClientDetails.module.css' //CSS\n\nfunction ClientForm() {\n\n  const dispatch = useDispatch();\n  const adminState = useSelector(state => state.adminReducer);\n                                                                                //VALIDATION SCHEMA\n  const validationSchema = Yup.object().shape({\n    NameClient: Yup.string().required('Ce champ est obligatoire'),\n    adressClient: Yup.string().required('Ce champ est obligatoire'),\n    emailClient: Yup.string().required('Ce champ est obligatoire'),\n    phoneClient: Yup.string().required('Ce champ est obligatoire'),\n    dateRegistrationClient: Yup.date().required('Ce champ est obligatoire')\n  });\n\n  const handleSubmit = async (values, {setSubmitting, resetForm}) => {          //HANDLE SUBMIT\n   setSubmitting(true);\n   console.log('IN SUBMIIIIIIIIIIIIIIT !!!!!!!!!!!!!!!!!!!!!!!!');\n   dispatch(createClientStart());\n   createClient(values)\n    .then( res => {\n      dispatch(createClientSuccess(adminState.clientList, res));\n    })\n    .catch( err => {\n      dispatch(createClientError(err));\n    })\n   resetForm();\n   setSubmitting(false);\n }\n\n  return(\n    <div className={ styles.detailsContainer }>\n      <h1>Create a new client </h1>\n\n      <Formik\n        initialValues={ { NameClient: '',\n                          adressClient: '',\n                          emailClient: '',\n                          phoneClient: '',\n                          dateRegistrationClient: Date.now() } }\n        validationSchema={ validationSchema }\n        onSubmit={ handleSubmit }\n      >\n        { ({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => (\n          <div>\n            <Form as={ Col } md='6' className={ styles.formContainer } onSubmit={ handleSubmit }>\n              <Form.Row>\n                <Form.Group as={ Col } md='6' controlId={ 'NameClientInput' }>                   { /*NAME*/ }\n                  <Form.Label> Nom </Form.Label>\n                  <Form.Control isValid = { touched.NameClient && !errors.NameClient }\n                                isInvalid = { touched.NameClient && errors.NameClient }\n                                name = 'NameClient'\n                                placeholder = 'Nom du client'\n                                onBlur = { handleBlur }\n                                value = { values.NameClient }\n                                onChange = { handleChange }>\n                  </Form.Control>\n                  <ErrorFormField touched = {touched.societe} message={errors.societe} />\n                </Form.Group>\n\n                <Form.Group as={ Col } md='6' controlId={ 'adressClientInput' }>                   { /*ADRESS*/ }\n                  <Form.Label> Adresse </Form.Label>\n                  <Form.Control isValid = { touched.adressClient && !errors.adressClient }\n                                isInvalid = { touched.adressClient && errors.adressClient }\n                                name = 'adressClient'\n                                placeholder = 'Adresse du client'\n                                onBlur = { handleBlur }\n                                value = { values.adressClient }\n                                onChange = { handleChange }>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group as={ Col } md='6' controlId={ 'emailClientInput' }>                  { /*EMAIL*/ }\n                  <Form.Label> Email </Form.Label>\n                  <Form.Control isValid={ touched.emailClient && !errors.emailClient }\n                                isInvalid={ touched.emailClient && errors.emailClient }\n                                name = 'emailClient'\n                                placeholder='Email du client'\n                                onBlur={ handleBlur }\n                                value={ values.emailClient }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={ Col } md='6' controlId={ 'phoneClientInput' }>                  { /*PHONE*/ }\n                  <Form.Label> Téléphone </Form.Label>\n                  <Form.Control isValid={ touched.phoneClient && !errors.phoneClient }\n                                isInvalid={ touched.phoneClient && errors.phoneClient }\n                                name = 'phoneClient'\n                                placeholder='Téléphone du client'\n                                onBlur={ handleBlur }\n                                value={ values.phoneClient }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group as={ Col } md='6' controlId={ 'dateRegistrationClientInput' }>                 { /*DATE REGISTRATION*/ }\n                  <Form.Label> Date d'enregistrement </Form.Label>\n                  <Form.Control type='date'\n                                isValid={ touched.dateRegistrationClient && !errors.dateRegistrationClient }\n                                isInvalid={ touched.dateRegistrationClient && errors.dateRegistrationClient }\n                                name = 'dateRegistrationClient'\n                                placeholder=''\n                                onBlur={ handleBlur }\n                                value={ values.dateRegistrationClient }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n\n              <Row className='row justify-content-center'>\n                <Button variant='primary' type='submit' onClick={handleSubmit} disabled={isSubmitting}> Valider </Button>\n              </Row>\n            </Form>\n          </div>\n        ) }\n      </Formik>\n    </div>\n  )\n}\n\nexport default ClientForm;\n","import React from 'react';          //REACT\n\nimport ErrorFormField from '../../Common/ErrorFormField/ErrorFormField';   //COMPONENTS\n\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\nimport { createContractSuccess, createContractError } from '../../../actions/admin.action';  //ACTIONS\n\nimport { createContract } from '../../../services/AdminAPI';           //API FUNCTIONS\n\nimport { Button, Form, Col, Row, Container } from 'react-bootstrap';  //BOOTSTRAP\n\nimport { Formik } from 'formik';    //FORMIK\nimport * as Yup from 'yup';         //YUP\n\nimport styles from './ContractForm.module.css';\n\nfunction ClientForm(props) {\n\n  const dispatch = useDispatch();\n  const adminState = useSelector(state => state.adminReducer);\n                                                                                //VALIDATION SCHEMA\n  const contratValidationSchema = Yup.object().shape({\n    nameContract: Yup.string().required('Ce champ est obligatoire'),\n    typeContract: Yup.string().required('Ce champ est obligatoire'),\n    startDateContract: Yup.date().required('Ce champ est obligatoire')\n  });\n\n  const handleAddContrat = async (values, {setSubmitting, resetForm}) => {          //HANDLE SUBMIT\n    setSubmitting(true);\n    const currentName = props.clientList[props.currentClient].NameClient;\n    values.clientName = currentName;\n    console.log('contract VALUES : '+JSON.stringify(values, null, 2));\n    createContract(currentName, values)\n      .then( res => {\n        dispatch(createContractSuccess(res, props.clientList, props.currentClient));\n      })\n      .catch( err => {\n        dispatch(createContractError(err));\n      })\n    setSubmitting(false);\n }\n\n  return(\n    <div as={Col} md='9' className={styles.newContractContainer}>\n      <Row>\n        <Col>\n          <h3> Créer un nouveau contrat </h3>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Formik\n            enableReinitialize\n            initialValues={ { nameContract: '',\n                              typeContract: '',\n                              startDateContract: '' } }\n            validationSchema={ contratValidationSchema }\n            onSubmit={ handleAddContrat }\n          >\n            { ({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => {\n            return(\n              <div>\n                <Form className={styles.newContractForm} onSubmit={ handleSubmit }>\n                  <Form.Row>\n                    <Form.Group as={ Col } md='4' controlId={ 'nameContract' }>                   { /*NAME*/ }\n                      <Form.Label> Nom </Form.Label>\n                      <Form.Control isValid={ touched.nameContract && !errors.nameContract }\n                                    isInvalid={ touched.nameContract && errors.nameContract }\n                                    placeholder='Nom du contrat'\n                                    onBlur={ handleBlur }\n                                    value={ values.nameContract }\n                                    onChange={ handleChange }>\n                      </Form.Control>\n                      <ErrorFormField touched={touched.societe} message={errors.societe} />\n                    </Form.Group>\n\n                    <Form.Group as={ Col } md='4' controlId={ 'typeContract' }>                   { /*TYPE*/ }\n                      <Form.Label> Type </Form.Label>\n                      <Form.Control isValid={ touched.typeContract && !errors.typeContract }\n                                    isInvalid={ touched.typeContract && errors.typeContract }\n                                    placeholder='Type du contrat'\n                                    onBlur={ handleBlur }\n                                    value={ values.typeContract }\n                                    onChange={ handleChange }>\n                      </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={ Col } md='4' controlId={ 'startDateContract' }>                 { /*START DATE*/ }\n                      <Form.Label> Date de début </Form.Label>\n                      <Form.Control type='date'\n                                    isValid={ touched.startDateContract && !errors.startDateContract }\n                                    isInvalid={ touched.startDateContract && errors.startDateContract }\n                                    placeholder='Date de début du contrat'\n                                    onBlur={ handleBlur }\n                                    value={ values.startDateContract }\n                                    onChange={ handleChange }>\n                      </Form.Control>\n                    </Form.Group>\n                  </Form.Row>\n\n                  <Row className='row justify-content-center'>\n                    <Button variant='primary' type='submit' disabled={isSubmitting}> Valider </Button>\n                  </Row>\n                </Form>\n              </div>\n            ) } }\n          </Formik>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    clientList: state.adminReducer.clientList,\n    currentClient: state.adminReducer.currentClient\n  }\n}\n\nexport default connect(mapStateToProps)(ClientForm);\n","import React from 'react';          //REACT\n\nimport ErrorFormField from '../../Common/ErrorFormField/ErrorFormField';   //COMPONENTS\n\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\nimport { createRestaurantSuccess, createRestaurantError } from '../../../actions/admin.action';  //ACTIONS\n\nimport { createRestaurant } from '../../../services/AdminAPI';           //API FUNCTIONS\n\nimport { Button, Form, Col, Row, Container } from 'react-bootstrap';  //BOOTSTRAP\n\nimport { Formik } from 'formik';    //FORMIK\nimport * as Yup from 'yup';         //YUP\n\nimport styles from './RestaurantForm.module.css';\n\nfunction RestaurantForm(props) {\n\n  const dispatch = useDispatch();\n                                                                                //VALIDATION SCHEMA\n  const restaurantValidationSchema = Yup.object().shape({\n    nameRestaurant: Yup.string().required('Ce champ est obligatoire'),\n    adressRestaurant: Yup.string().required('Ce champ est obligatoire'),\n  });\n\n  const handleAddRestaurant = async (values, {setSubmitting, resetForm}) => {          //HANDLE SUBMIT\n    setSubmitting(true);\n    console.log('IN SUBMIT NEW RESTAURANT')\n    const contractName = props.clientList[props.currentClient].contractList[props.contractIndex].nameContract;\n    values.contractName = contractName;\n    createRestaurant(contractName, values)\n      .then( res => {\n        dispatch(createRestaurantSuccess(res, props.clientList, props.currentClient));\n      })\n      .catch( err => {\n        dispatch(createRestaurantError(err));\n      })\n    setSubmitting(false);\n }\n\n  return(\n    <div className={ styles.newRestaurant }>\n      <Row className='justify-content-md-center'>\n        <h1>Création d'un nouveau restaurant :</h1>\n      </Row>\n\n      <Formik\n        enableReinitialize\n        initialValues={ { nameRestaurant: '',\n                          adressRestaurant: '' } }\n        validationSchema={ restaurantValidationSchema }\n        onSubmit={ handleAddRestaurant }\n      >\n        { ({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => {\n        return(\n          <div>\n            <Form onSubmit={ handleSubmit }>\n              <Form.Row className='justify-content-md-center'>\n                <Form.Group as={ Col } md='4' controlId={ 'nameRestaurant' }>                   { /*NAME*/ }\n                  <Form.Label> Nom </Form.Label>\n                  <Form.Control isValid={ touched.nameRestaurant && !errors.nameRestaurant }\n                                isInvalid={ touched.nameRestaurant && errors.nameRestaurant }\n                                placeholder='Nom du restaurant'\n                                onBlur={ handleBlur }\n                                value={ values.nameRestaurant }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                  <ErrorFormField touched={touched.nameRestaurant} message={errors.nameRestaurant} />\n                </Form.Group>\n\n                <Form.Group as={ Col } md='4' controlId={ 'adressRestaurant' }>                   { /*ADRESS*/ }\n                  <Form.Label> Adresse </Form.Label>\n                  <Form.Control isValid={ touched.adressRestaurant && !errors.adressRestaurant }\n                                isInvalid={ touched.adressRestaurant && errors.adressRestaurant }\n                                placeholder='Adresse du restaurant'\n                                onBlur={ handleBlur }\n                                value={ values.adressRestaurant }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n\n              <Row className='row justify-content-center'>\n                <Button variant='primary' type='submit' disabled={isSubmitting}> Valider </Button>\n              </Row>\n            </Form>\n          </div>\n        ) } }\n      </Formik>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    clientList: state.adminReducer.clientList,\n    currentClient: state.adminReducer.currentClient\n  }\n}\n\nexport default connect(mapStateToProps)(RestaurantForm);\n","import React, { useState } from 'react';                    //REACT\n\nimport { useSelector, connect, useDispatch } from 'react-redux';     //REDUX\nimport { changeCurrentRestaurant, changePageMode, updateRestaurant } from '../../../actions/admin.action';    //ACTIONS\n\nimport { createAccountForRestaurant, updateRestaurantAccountCreated } from '../../../services/AdminAPI';    //API\n\nimport RestaurantForm from './RestaurantForm';  //COMPONENTS\n\nimport { Formik } from 'formik';    //FORMIK\nimport * as Yup from 'yup';         //YUP\n\nimport Row from 'react-bootstrap/Row'       //BOOTSTRAP\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nimport styles from './RestaurantDetails.module.css';\n\nfunction RestaurantDetail(props) {\n\n  const dispatch = useDispatch();\n  const [createAccount, setCreateAccount] = useState(false);\n  const [emailValue, setEmailValue] = useState('');\n  const [passwordValue, setPasswordValue] = useState('');\n\n  const restaurant = props.clientList[props.currentClient].contractList[props.contractIndex].restaurantList[props.restaurantIndex];\n\n  const onClick = () => {\n    console.log('In onclik change current restaurant, fetched : '+props.adminState.fetched+' fetchinf : '+props.adminState.fetching);\n    dispatch(changeCurrentRestaurant(restaurant.nameRestaurant));\n    dispatch(changePageMode('dashboard'));\n  }\n\n  const handleCreateAccount = () => {\n    setCreateAccount(!createAccount);\n  }\n\n  const handleEmailChange = (event) => {\n    setEmailValue(event.target.value);\n  }\n\n  const handlePasswordChange = (event) => {\n    setPasswordValue(event.target.value);\n  }\n\n  const accountValidationSchema = Yup.object().shape({\n    email: Yup.string().required('Ce champ est obligatoire'),\n    password: Yup.string().required('Ce champ est obligatoire'),\n  });\n\n  const handleAddAccount = async (values, {setSubmitting, resetForm}) => {\n    setSubmitting(true);\n    console.log('In submit new account');\n    createAccountForRestaurant(values.email, values.password, restaurant.nameRestaurant)\n      .then( res => {\n        console.log('In then create account : '+JSON.stringify(res, null, 2));\n        updateRestaurantAccountCreated(restaurant.nameRestaurant)\n          .then( res => {\n            console.log('In then update restaurant : '+JSON.stringify(res, null, 2));\n            dispatch(updateRestaurant(props.currentClient, props.contractIndex, props.restaurantIndex, props.clientList))\n          })\n          .catch()\n      })\n      .catch( err => {\n        console.log('In create account catch error : '+JSON.stringify(err, null, 2));\n      })\n    setSubmitting(false);\n  }\n\n  return(\n    <div className={styles.restaurantDetails}>\n      <hr width=\"50%\" />\n      <Row>\n        <Col>\n          <h2> { restaurant.nameRestaurant } </h2>\n        </Col>\n        <Col>\n          <h2> { restaurant.adressRestaurant } </h2>\n        </Col>\n        <Col>\n          <Button onClick={onClick}> Voir le gaspillage </Button>\n        </Col>\n        <Col>\n        </Col>\n        {\n          restaurant.accountCreated == false ?\n            <Button onClick={handleCreateAccount}> Créer un compte </Button>\n          :\n            <Button disabled> Compte déjà créé </Button>\n        }\n      </Row>\n\n      {\n        createAccount ?\n          <Row>\n            <Formik\n              enableReinitialize\n              initialValues={ { email: '',\n                                password: '' } }\n              validationSchema={ accountValidationSchema }\n              onSubmit={ handleAddAccount }\n            >\n              { ({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => {\n              return(\n                <div>\n                  <Form onSubmit={ handleSubmit }>\n                    <Form.Row className='justify-content-md-center'>\n                      <Form.Group as={ Col } md='4' controlId={ 'email' }>                   { /*NAME*/ }\n                        <Form.Label> Email </Form.Label>\n                        <Form.Control isValid={ touched.email && !errors.email }\n                                      isInvalid={ touched.email && errors.email }\n                                      placeholder='email'\n                                      onBlur={ handleBlur }\n                                      value={ values.email }\n                                      onChange={ handleChange }>\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group as={ Col } md='4' controlId={ 'password' }>                   { /*ADRESS*/ }\n                        <Form.Label> Mot de passe </Form.Label>\n                        <Form.Control isValid={ touched.password && !errors.password }\n                                      isInvalid={ touched.password && errors.adresspasswordRestaurant }\n                                      placeholder='password'\n                                      onBlur={ handleBlur }\n                                      value={ values.password }\n                                      onChange={ handleChange }>\n                        </Form.Control>\n                      </Form.Group>\n                    </Form.Row>\n\n                    <Row className='row justify-content-center'>\n                      <Button variant='primary' type='submit' disabled={isSubmitting}> Valider </Button>\n                    </Row>\n                  </Form>\n                </div>\n              ) } }\n            </Formik>\n          </Row>\n        :\n          <> </>\n      }\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  console.log('IN STATEMAP restaurant detail');\n  return {\n    clientList: state.adminReducer.clientList,\n    currentClient: state.adminReducer.currentClient,\n    adminState: state.adminReducer,\n  }\n}\n\nexport default connect(mapStateToProps)(RestaurantDetail);\n","import React, { useState, useEffect } from 'react';                  //REACT\nimport { withRouter } from \"react-router-dom\";                       //ROUTER\nimport { useSelector, useDispatch, connect } from 'react-redux';     //REDUX\n\nimport { getRestaurantsSuccess, getRestaurantsError } from '../../../actions/admin.action';    //ACTIONS\n\nimport { getAllRestaurants } from '../../../services/AdminAPI';          //API FUNCTIONS\n\nimport RestaurantForm from './RestaurantForm';  //COMPONENTS\nimport RestaurantDetail from './RestaurantDetail';\n\nimport Row from 'react-bootstrap/Row';       //BOOTSTRAP\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nimport styles from './ContractDetails.module.css';\n\nfunction ContractDetail(props) {\n\n  const dispatch = useDispatch();\n\n  const contract = props.clientList[props.currentClient].contractList[props.contractIndex];\n\n  const [addRestaurant, setAddRestaurant] = useState(false);\n\n  useEffect( () => {\n    console.log('USE EFFECT CONTRACT DETAILS');\n    if (contract.restaurantList == null) {\n      getAllRestaurants(contract.nameContract)\n        .then( res => {\n          dispatch(getRestaurantsSuccess(res, props.clientList, props.currentClient, props.contractIndex));\n        })\n        .catch( err => {\n          dispatch(getRestaurantsError(err));\n        })\n    }\n  });\n\n  console.log('contract detail before rendering : '+JSON.stringify(props.clientList[props.currentClient].contractList[props.contractIndex].restaurantList, null, 2));\n\n  return(\n    <div className={styles.ContractDetails}>\n      <Row>\n        <Col md={{ offset: 1 }}>\n          <h2> { contract.nameContract } </h2>\n        </Col>\n        <Col md={{ offset: 1 }}>\n          <h2> { contract.typeContract } </h2>\n        </Col>\n        <Col md={{ offset: 1 }}>\n          <h2> { contract.startDateContract } </h2>\n        </Col>\n      </Row>\n\n      <br/>\n\n      <Row className='justify-content-md-center'>\n        <Col md='2'>\n          <Button onClick={ () => setAddRestaurant(true) }> Ajouter un restaurant </Button>\n        </Col>\n      </Row>\n\n      {\n        addRestaurant ?\n        <Row>\n          <Col md='12'>\n            <RestaurantForm contractIndex={props.contractIndex}/>\n          </Col>\n        </Row>\n        : <> </>\n      }\n\n      {\n        props.clientList[props.currentClient].contractList[props.contractIndex].restaurantList != undefined ?\n        props.clientList[props.currentClient].contractList[props.contractIndex].restaurantList.map( (item, index) => {\n          return (\n            <div>\n              <RestaurantDetail restaurantIndex={index} contractIndex={props.contractIndex}/>\n            </div>\n          )\n        })\n        : <> RESTAURANT LIST IS UNDEFINED </>\n      }\n    </div>\n  )\n}\n\nfunction mapStateToProps(state, ownProps) {\n  console.log('IN STATEMAP contract detail');\n  return {\n    clientList: state.adminReducer.clientList,\n    currentClient: state.adminReducer.currentClient,\n    restaurants: state.adminReducer.clientList[state.adminReducer.currentClient].contractList[ownProps.contractIndex].restaurantList\n  }\n}\n\nexport default connect(mapStateToProps)(ContractDetail);\n","import React, { useState, useEffect } from 'react';                 //REACT\n\nimport { useSelector, useDispatch, connect } from 'react-redux';    //REDUX\nimport { getContractsSuccess, getContractsError } from '../../../actions/admin.action';    //ACTIONS\n\nimport { getAllContracts } from '../../../services/AdminAPI';          //API FUNCTIONS\n\nimport ErrorFormField from '../../Common/ErrorFormField/ErrorFormField';   //COMPONENTS\nimport ContractForm from './ContractForm';\nimport ContractDetail from './ContractDetail';\n\nimport { Button, Form, Col, Row } from 'react-bootstrap';  //BOOTSTRAP\n\nimport { Formik } from 'formik';    //FORMIK\nimport * as Yup from 'yup';         //YUP\n\nimport styles from './ClientDetails.module.css'\n\nfunction ClientDetails(props) {\n\n  const dispatch = useDispatch();\n\n  const [addContrat, setAddContrat] = useState(false);\n\n  const client = props.clientList[props.currentClient];\n\n  const validationSchema = Yup.object().shape({\n    NameClient: Yup.string().required('Ce champ est obligatoire'),\n    adressClient: Yup.string().required('Ce champ est obligatoire'),\n    emailClient: Yup.string().required('Ce champ est obligatoire'),\n    phoneClient: Yup.string().required('Ce champ est obligatoire'),\n    dateRegistrationClient: Yup.date().required('Ce champ est obligatoire')\n  });\n\n  const handleSubmit = async (values, {setSubmitting, resetForm}) => {          //HANDLE SUBMIT\n   console.log('IN submit');\n }\n\n  useEffect( () => {\n    console.log('USE EFFECT CLIENT DETAILS');\n    if (client.contractList == null) {\n      getAllContracts(client.NameClient)\n        .then( res => {\n          dispatch(getContractsSuccess(res, props.clientList, props.currentClient));\n        })\n        .catch( err => {\n          dispatch(getContractsError(err));\n        })\n    }\n  });\n\n  console.log('currentClient.contractList : '+JSON.stringify(props.clientList[props.currentClient].contractList, null, 2));\n\n  return(\n    <div className={ styles.detailsContainer }>\n      <h1>Details : { client.NameClient } </h1>\n\n      <Formik\n        enableReinitialize\n        initialValues={ { NameClient: client.NameClient,\n                          adressClient: client.adressClient,\n                          emailClient: client.emailClient,\n                          phoneClient: client.phoneClient,\n                          dateRegistrationClient: client.dateRegistrationClient } }\n        validationSchema={ validationSchema }\n        onSubmit={ handleSubmit }\n      >\n        { ({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) =>{\n        return(\n          <div>\n            <Form as={Col} md='6' className={ styles.formContainer } onSubmit={ handleSubmit }>\n              <Form.Row>\n                <Form.Group as={ Col } md='6' controlId={ 'NameClientInput' }>                   { /*NAME*/ }\n                  <Form.Label> Nom </Form.Label>\n                  <Form.Control disabled\n                                isValid={ touched.NameClient && !errors.NameClient }\n                                isInvalid={ touched.NameClient && errors.NameClient }\n                                placeholder='Nom du client'\n                                onBlur={ handleBlur }\n                                value={ values.NameClient }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                  <ErrorFormField touched={touched.societe} message={errors.societe} />\n                </Form.Group>\n\n                <Form.Group as={ Col } md='6' controlId={ 'adressClientInput' }>                   { /*ADRESS*/ }\n                  <Form.Label> Adresse </Form.Label>\n                  <Form.Control disabled\n                                isValid={ touched.adressClient && !errors.adressClient }\n                                isInvalid={ touched.adressClient && errors.adressClient }\n                                placeholder='Adresse du client'\n                                onBlur={ handleBlur }\n                                value={ values.adressClient }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group as={ Col } md='6' controlId={ 'emailClientInput' }>                  { /*EMAIL*/ }\n                  <Form.Label> Email </Form.Label>\n                  <Form.Control disabled\n                                isValid={ touched.emailClient && !errors.emailClient }\n                                isInvalid={ touched.emailClient && errors.emailClient }\n                                placeholder='Email du client'\n                                onBlur={ handleBlur }\n                                value={ values.emailClient }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={ Col } md='6' controlId={ 'phoneClientInput' }>                  { /*PHONE*/ }\n                  <Form.Label> Téléphone </Form.Label>\n                  <Form.Control disabled\n                                isValid={ touched.phoneClient && !errors.phoneClient }\n                                isInvalid={ touched.phoneClient && errors.phoneClient }\n                                placeholder='Email du client'\n                                onBlur={ handleBlur }\n                                value={ values.phoneClient }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row >\n                <Form.Group as={ Col } md='4' controlId={ 'dateRegistrationClientInput' }>                 { /*DATE REGISTRATION*/ }\n                  <Form.Label> Date d'enregistrement </Form.Label>\n                  <Form.Control disabled\n                                type='date'\n                                isValid={ touched.dateRegistrationClient && !errors.dateRegistrationClient }\n                                isInvalid={ touched.dateRegistrationClient && errors.dateRegistrationClient }\n                                placeholder='Email du client'\n                                onBlur={ handleBlur }\n                                value={ values.dateRegistrationClient }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n            </Form>\n          </div>\n        ) } }\n      </Formik>\n\n      <br/>\n\n      <Row className='justify-content-md-center'>\n        <Col md='2'>\n          <h1> Contrats </h1>\n        </Col>\n      </Row>\n      <Row>\n        <Col md={{ offset: 8 }}>\n          <Button onClick={ () => setAddContrat(!addContrat) }> Ajouter un contrat </Button>\n        </Col>\n      </Row>\n\n      <Row>\n        {\n          addContrat ?\n          <div>\n            <ContractForm />\n          </div>\n          : <> </>\n        }\n      </Row>\n\n      {\n        props.clientList[props.currentClient].contractList != undefined ?\n        //console.log(\"the client ocntract list\")\n        props.clientList[props.currentClient].contractList.map( (item, index) => {\n          return (\n            <>\n              <ContractDetail contractIndex={index}/>\n            </>\n          )\n        })\n        : <> CONTRAT IS UNDEFINED </>\n      }\n\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  console.log('IN STATEMAP CLIENT DETAILS, currentClient.contractList : '+state.adminReducer.clientList[state.adminReducer.currentClient].contractList);\n  return {\n    clientList: state.adminReducer.clientList,\n    currentClient: state.adminReducer.currentClient,\n    contractList: state.adminReducer.clientList[state.adminReducer.currentClient].contractList\n  }\n}\n\nexport default connect(mapStateToProps)(ClientDetails);\n","import React, { useEffect }  from 'react';\n\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\nimport { getAllClientsSuccess, getAllClientsError, getAllClientStart } from '../../../actions/admin.action';  //ACTIONS\n\nimport { getAllClients } from '../../../services/AdminAPI';           //API FUNCTIONS\n\nimport Row from 'react-bootstrap/Row'   //BOOTSTRAP\nimport Col from 'react-bootstrap/Col'\n\nimport AdminSideBar from '../topBar/AdminSideBar';    //COMPONENTS\nimport AdminGaspi from '../gaspillage/AdminGaspi';\nimport ClientDashboard from '../../client/dashboard/ClientDashboard';\nimport NewClientForm from '../home/NewClientForm';\nimport ClientDetails from '../home/ClientDetails';\n\nfunction AdminContainer(props) {\n\n  const dispatch = useDispatch();\n\n  useEffect( () => {\n    console.log('Use effect admin container, fetched : '+props.adminState.fetched+' fetching : '+props.adminState.fetching);\n    if (!props.adminState.fetched && !props.adminState.fetching) {\n      dispatch(getAllClientStart());\n      getAllClients()\n        .then(res => {\n          dispatch(getAllClientsSuccess(res.result));\n        })\n        .catch(err => {\n          dispatch(getAllClientsError(err));\n        })\n    }\n  });\n\n  const displayPage = (pageMode) => {\n    console.log('IN admin display page function = '+pageMode + ' fetched : '+props.adminState.fetched);\n    switch (pageMode) {\n      case 'displayClient':\n        console.log('IN client');\n        return <ClientDetails client={ props.adminState.currentClient } />;\n        break;\n      case 'createClient':\n        console.log('IN client');\n        return <NewClientForm />;\n        break;\n      case 'dashboard':\n        console.log('IN DASHBOARD, fetched : '+props.adminState.fetched);\n        return <ClientDashboard restaurantName={props.adminState.currentRestaurant}/>;\n        break;\n      case 'stat':\n        console.log('IN STAT');\n        return <AdminGaspi restaurantName={props.adminState.currentRestaurant} />;\n        break;\n      case 'advice':\n        console.log('IN advice');\n        return <h1>NOT READY YET</h1>;\n        break;\n      case 'restaurant':\n        return (<h1>NOT READY YET</h1>);\n        break;\n      default:\n        return <NewClientForm />;\n    }\n  }\n\n  return(\n    <>\n      <Row style={{ height:'100vh', margin: 0, padding: 0}}>\n\n        <Col md='2' className='fixed-top' style={{ margin: 0, padding: 0}}>\n          <AdminSideBar />\n        </Col>\n\n        <Col md={{span: 10, offset: 2}} style={{padding: '0px' }}>\n          {\n            displayPage(props.pageMode)\n          }\n        </Col>\n\n      </Row>\n    </>\n  )\n}\n\n\nfunction mapStateToProps(state) {\n  //console.log('WTF : '+JSON.stringify(state, null, 2));\n  console.log('IN admin container map to state : '+state.adminReducer.pageMode +' fetched : '+state.adminReducer.fetched + ' pageMode : '+state.adminReducer.pageMode);\n  return {\n    pageMode: state.adminReducer.pageMode,\n    adminState: state.adminReducer,\n  }\n}\n\nexport default connect(mapStateToProps)(AdminContainer);\n","import React, { useState} from 'react';              //REACT\nimport { useSelector, useDispatch, connect } from 'react-redux';    //REDUX\nimport { changePageAction } from '../../../actions/client.action';  //ACTIONS\n\nimport { updateUserPassword } from '../../../services/AdminAPI';  //API\n\nimport { Formik } from 'formik';    //FORMIK\nimport * as Yup from 'yup';         //YUP\n\nimport Row from 'react-bootstrap/Row';   //BOOTSTRAP\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\n\nimport styles from './ClientSideBar.module.css'; //CSS\n\nimport topSideBar from '../../../publics/TopSideBar.png';\n\nfunction ClientSideBar(props) {\n\n  const dispatch = useDispatch();\n\n  const changePage = (newPage) => {             //change the current page ( dashboard / stats / my restaurant / etc )\n    dispatch(changePageAction(newPage));\n  }\n\n  const Home = () => {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"20\" viewBox=\"0 0 16 20\">\n        <g id=\"house\" transform=\"translate(0)\">\n          <path id=\"Tracé_99\" data-name=\"Tracé 99\" d=\"M15.581,5.186l-7-5a1,1,0,0,0-1.162,0l-7,5A1,1,0,0,0,1.581,6.814L2,6.515V15a1,1,0,0,0,1,1H13a1,1,0,0,0,1-1V6.515A1.7,1.7,0,0,0,15,7a1,1,0,0,0,.582-1.814ZM12,14H10V11a2,2,0,0,0-4,0v3H4V5.086L8,2.229l4,2.857Z\" fill=\"#fff\"/>\n        </g>\n      </svg>\n    )\n  }\n\n  const Single = () => {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"20\" viewBox=\"0 0 16 20\">\n        <g id=\"single-02\" transform=\"translate(-1 0)\">\n          <path id=\"Union_10\" data-name=\"Union 10\" d=\"M-4-310a6.018,6.018,0,0,1,6-6H4a6.018,6.018,0,0,1,6,6Zm2.6-2H7.5A4.033,4.033,0,0,0,4-314H2.1A4.035,4.035,0,0,0-1.4-312Zm.4-9v-1a4.012,4.012,0,0,1,4-4,4.012,4.012,0,0,1,4,4v1a4.012,4.012,0,0,1-4,4A4.012,4.012,0,0,1-1-321Zm2-1v1a2.006,2.006,0,0,0,2,2,2.006,2.006,0,0,0,2-2v-1a2.006,2.006,0,0,0-2-2A2.006,2.006,0,0,0,1-322Z\" transform=\"translate(5 326)\" fill=\"#fff\"/>\n        </g>\n      </svg>\n    )\n  }\n\n  const Receipt_list = () => {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"16\" viewBox=\"0 0 14 16\">\n        <g id=\"receipt-list-42\" transform=\"translate(-1)\">\n          <path id=\"Tracé_102\" data-name=\"Tracé 102\" d=\"M14,0H2A.945.945,0,0,0,1,1V16l3-2,2,2,2-2,2,2,2-2,3,2V1A.945.945,0,0,0,14,0ZM12,10H4V8h8Zm0-4H4V4h8Z\" fill=\"#fff\"/>\n        </g>\n      </svg>\n    )\n  }\n  const Chart_Bar = () => {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n        <g id=\"chart-bar-32\" transform=\"translate(0 0)\">\n          <path id=\"Union_8\" data-name=\"Union 8\" d=\"M-481-8a.945.945,0,0,1-1-1v-9a.945.945,0,0,1,1-1h2a.945.945,0,0,1,1,1v9a.945.945,0,0,1-1,1Zm-6,0a.944.944,0,0,1-1-1V-23a.945.945,0,0,1,1-1h2a.945.945,0,0,1,1,1V-9a.944.944,0,0,1-1,1Zm-6,0a.945.945,0,0,1-1-1v-4a.945.945,0,0,1,1-1h2a.946.946,0,0,1,1,1v4a.945.945,0,0,1-1,1Z\" transform=\"translate(494 24)\" fill=\"#fff\"/>\n        </g>\n      </svg>\n    )\n  }\n  const Calendar = () => {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n        <g id=\"Calendar\" transform=\"translate(-24 -242)\">\n          <rect id=\"Rectangle_557\" data-name=\"Rectangle 557\" width=\"16\" height=\"16\" transform=\"translate(24 242)\" fill=\"none\"/>\n          <path id=\"Tracé_149\" data-name=\"Tracé 149\" d=\"M2,5v9H14V5ZM13,2h2a.945.945,0,0,1,1,1V15a.945.945,0,0,1-1,1H1a.945.945,0,0,1-1-1V3A.945.945,0,0,1,1,2H3V1A.945.945,0,0,1,4,0,.945.945,0,0,1,5,1V2h6V1a1,1,0,0,1,2,0ZM12,12H10V10h2ZM9,12H7V10H9Zm3-3H10V7h2ZM9,9H7V7H9ZM6,12H4V10H6Z\" transform=\"translate(24 242)\" fill=\"#fff\" fill-rule=\"evenodd\"/>\n        </g>\n      </svg>\n    )\n  }\n\n\n\n  const ReturnElement = (propElem) => {\n    if (props.pageMode == propElem.item) {\n      return (\n        <Container>\n          <Row>\n            <div className={styles.whiteSelectedMark}>\n            </div>\n\n            <div className={ styles.SelectedClientSideBarElement }>\n              <span className={styles.iconDivWhenSelected}>\n                {propElem.children}\n              </span>\n              <span className={styles.textElement}>\n                { propElem.title }\n              </span>\n            </div>\n          </Row>\n        </Container>\n      );\n    }\n    else {\n      return (\n        <Container>\n          <Row>\n            <div className={ styles.ClientSideBarElement } onClick={ () => changePage(propElem.item) }>\n              <span className={styles.sameColorMark}>\n              </span>\n\n\n              <span className={styles.iconDiv}>\n                {propElem.children}\n              </span>\n              <span className={styles.textElement}>\n                { propElem.title }\n              </span>\n            </div>\n          </Row>\n        </Container>\n      );\n    }\n  }\n\n  return(\n    <div>\n    <Col md={{span: 12, offset: 0}} className={styles.ClientSideBarContainer} style={{padding: '0px'}}>\n\n        <Container>\n        <Row>\n          <div className={styles.imageDiv}>\n            <img className={styles.image} src={topSideBar} alt=\"Logo\" />\n          </div>\n        </Row>\n        </Container>\n\n        <ReturnElement item={'dashboard'} title={'Mon tableau de bord'} > <Home /> </ReturnElement>\n        <ReturnElement item={'stat'} title={'Mes statistiques'} > <Chart_Bar /> </ReturnElement>\n        <ReturnElement item={'advice'} title={'Mon espace conseil'} > <Receipt_list /> </ReturnElement>\n        <ReturnElement item={'restaurant'} title={'Mes restaurants'} > <Calendar /> </ReturnElement>\n        <ReturnElement item={'account'} title={'Mon compte'} > <Single /> </ReturnElement>\n\n    </Col>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    pageMode: state.clientReducer.page,\n    userEmail: state.userReducer.login,\n  }\n}\n\nexport default connect(mapStateToProps)(ClientSideBar);\n\n/*  <Row style={{backgroundColor: 'orange'}}>\n    <Col style={{backgroundColor: 'blue'}} md={{span: 1, offset: 0}}>\n      <div className={styles.whiteSelectedMark}>\n      </div>\n    </Col>\n\n    <Col style={{backgroundColor: 'red'}} md={{span: 11, offset: 0}} onClick={ () => changePage(item) }>\n      <div className={ styles.SelectedClientSideBarElement }>\n        { title }\n      </div>\n    </Col>\n  </Row>\n  */\n","import React, { useState} from 'react';              //REACT\nimport { useSelector, useDispatch, connect } from 'react-redux';    //REDUX\nimport { changePageAction } from '../../../actions/client.action';  //ACTIONS\nimport { disconnectAction } from '../../../actions/connexion.action';  //ACTIONS\n\nimport { updateUserPassword } from '../../../services/AdminAPI';\n\nimport chef from '../../../publics/image.png';\nimport topSideBar from '../../../publics/TopSideBar.png';\n\nimport Row from 'react-bootstrap/Row';   //BOOTSTRAP\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Image from 'react-bootstrap/Image';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n\n\nimport SearchIcon from '@material-ui/icons/Search'; //Material-ui\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Divider from '@material-ui/core/Divider';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Grid from '@material-ui/core/Grid';\n\nimport styles from './ClientTopBar.module.css' //CSS\n\nfunction ClientTopBar(props) {\n\n  const dispatch = useDispatch();\n\n  const [updatePassword, setUpdatePassword] = useState(false);\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n\n\n\n  const changePage = (newPage) => {             //change the current page ( dashboard / stats / my restaurant / etc )\n    dispatch(changePageAction(newPage));\n  }\n\n  const disconnect = () => {\n    dispatch(disconnectAction());\n  }\n\n\n\n  return(\n    <Navbar className={styles.ClientTopBarContainer+\" justify-content-between\"}>\n      <div style={{visibility: 'hidden'}}>\n      <Form inline >\n       <InputGroup>\n         <InputGroup.Prepend>\n           <InputGroup.Text id=\"basic-addon1\">@</InputGroup.Text>\n         </InputGroup.Prepend>\n         <FormControl\n           placeholder=\"Username\"\n           aria-label=\"Username\"\n           aria-describedby=\"basic-addon1\"\n         />\n       </InputGroup>\n      </Form>\n      </div>\n\n      <Navbar.Collapse className=\"justify-content-end\">\n        <Navbar.Text className>{props.userState.login}</Navbar.Text>\n        <NavDropdown title={<img className={styles.image} src={chef} alt=\"Logo\" />} id=\"collasible-nav-dropdown\" drop='left'>\n          <NavDropdown.Item onClick={ () => changePage('account') }> Voir le profil </NavDropdown.Item>\n          <NavDropdown.Divider />\n          <NavDropdown.Item onClick={ () => disconnect() }> Déconnexion </NavDropdown.Item>\n        </NavDropdown>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userState: state.userReducer,\n  }\n}\n\nexport default connect(mapStateToProps)(ClientTopBar);\n\n\n/*\n\n<Col md={{span: 6}} className={styles.barElement}>\n{\n  /*\n    <div className={styles.leftTopBar} >\n      <SearchIcon />\n      Rechercher sur la plateforme\n    </div>\n\n}\n</Col>\n<Col md={{ span: 6}} className={styles.barElement}>\n  <div className={styles.rightElements}>\n    <Grid container >\n      <QuestionAnswerIcon />\n      <NotificationsIcon />\n      <Divider orientation=\"vertical\" flexItem />\n      {props.userState.login}\n      <Dropdown>\n        <Dropdown.Toggle id=\"dropdown-custom-components\" >\n          <Image className={styles.image} src={chef} alt=\"chefIcon\" />\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <Dropdown.Item eventKey=\"1\"> Se déconnecter</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </Grid>\n  </div>\n</Col>\n\n*/\n","import React, { useState} from 'react';              //REACT\nimport { useSelector, useDispatch, connect } from 'react-redux';    //REDUX\nimport { changePageAction } from '../../../actions/client.action';  //ACTIONS\n\nimport { updateUserPassword } from '../../../services/AdminAPI';  //API\n\nimport { Formik } from 'formik';    //FORMIK\nimport * as Yup from 'yup';         //YUP\n\nimport Row from 'react-bootstrap/Row';   //BOOTSTRAP\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nimport styles from './Account.module.css'   // CSS\n\nfunction ClientAccount(props) {\n\n  const dispatch = useDispatch();\n\n  const [updatePassword, setUpdatePassword] = useState(false);    //to know when to display the form\n\n  const updatePasswordValidationSchema = Yup.object().shape({\n    oldPassword: Yup.string().required('Ce champ est obligatoire'),\n    newPassword: Yup.string().required('Ce champ est obligatoire'),\n  });\n\n  const changePage = (newPage) => {             //change the current page ( dashboard / stats / my restaurant / etc )\n    dispatch(changePageAction(newPage));\n  }\n\n  const displayUpdatePassword = () => {          //display or hide the update password form\n    setUpdatePassword(!updatePassword);\n  };\n\n  const handlePassword = async (values) => {\n    console.log('In handle submit');\n    //setSubmitting(true);\n    updateUserPassword(values.oldPassword, values.newPassword, props.userState.login)\n      .then( res => {\n        console.log('In then update password : '+JSON.stringify(res, null, 2));\n        //dispatch(updatePassword());\n      })\n      .catch( err => {\n        console.log('ERROR ERROR : '+JSON.stringify(err, null, 2));\n      })\n    //setSubmitting(false);\n  }\n\n  return(\n    <Col className={styles.globalContainer}>\n      <Row>\n        <Col md={{span: 12}}>\n          <Row className=\"justify-content-md-center\">\n            <h1 className={styles.pageTitle}> Compte de {props.userState.login} </h1>\n          </Row>\n        </Col>\n      </Row>\n\n      <Formik\n        enableReinitialize\n        initialValues={ { oldPassword: '',\n                          newPassword: '' } }\n        validationSchema={ updatePasswordValidationSchema }\n        onSubmit={ handlePassword }\n      >\n      { ({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => {\n      return(\n        <div>\n          <Form onSubmit={ handleSubmit }>\n            <Form.Row>\n              <Form.Group as={ Col } md='4' controlId={ 'oldPassword' }>                   { /*OLD PASSWORD*/ }\n                <Form.Label> Mot de passe actuel {errors.oldPassword} </Form.Label>\n                <Form.Control isValid={ touched.oldPassword && !errors.oldPassword }\n                              isInvalid={ touched.oldPassword && errors.oldPassword }\n                              placeholder=''\n                              onBlur={ handleBlur }\n                              value={ values.oldPassword }\n                              onChange={ handleChange }>\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group as={ Col } md='4' controlId={ 'newPassword' }>                   { /*NEW PASSWORD*/ }\n                <Form.Label> Nouveau mot de passe {errors.newPassword} </Form.Label>\n                <Form.Control isValid={ touched.newPassword && !errors.newPassword }\n                              isInvalid={ touched.newPassword && errors.newPassword }\n                              placeholder=''\n                              onBlur={ handleBlur }\n                              value={ values.newPassword }\n                              onChange={ handleChange }>\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n\n            <Row className='row justify-content-center'>\n              <Col md='8'>\n                <Button variant='primary' type='submit' disabled={isSubmitting}> Valider </Button>\n              </Col>\n            </Row>\n          </Form>\n        </div>\n      ) } }\n      </Formik>\n    </Col>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userState: state.userReducer,\n  }\n}\n\nexport default connect(mapStateToProps)(ClientAccount);\n","import React, { useEffect } from 'react';\nimport { Switch, Route, withRouter } from \"react-router-dom\";   //ROUTER\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\n\nimport Row from 'react-bootstrap/Row'   //BOOTSTRAP\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\n\nimport ClientSideBar from '../topBar/ClientSideBar';    //COMPONENTS\nimport ClientTopBar from '../topBar/ClientTopBar';\nimport ClientDashboard from '../dashboard/ClientDashboard';\nimport AdminGaspi from '../../administration/gaspillage/AdminGaspi';\nimport ClientAccount from '../account/ClientAccount';\n\nimport styles from './ClientContainer.module.css'; //CSS\n\nfunction ClientContainer(props) {\n\n  useEffect( () => {\n\n  });\n\n  const displayPage = (pageMode) => {\n    console.log('IN DISPLAY PAGE');\n    switch (pageMode) {\n      case 'dashboard':\n        console.log('IN dashboard');\n        return <ClientDashboard restaurantName={props.currentRestaurantName}/>;\n        break;\n      case 'stat':\n        console.log('IN STAT');\n        return <AdminGaspi restaurantName={props.currentRestaurantName} />;\n        break;\n      case 'advice':\n        console.log('IN advice');\n        return <h1>NOT READY YET</h1>;\n        break;\n      case 'restaurant':\n        return (<h1>NOT READY YET</h1>);\n        break;\n      case 'account':\n        return <ClientAccount />;\n        break;\n      default:\n        return (<ClientDashboard />);\n    }\n  }\n\n  console.log('BEFORE RENDERING !');\n\n  return(\n    <>\n      <Row style={{ height:'100vh', margin: 0, padding: 0}}>\n        <Col md={{span: 2, offset: 0}} className='fixed-top' style={{ padding: 0}}>\n          <ClientSideBar />\n        </Col>\n\n        <Col md={{span: 10, offset: 2}}>\n          <Row>\n            <Col style={{ margin: 0, padding: 0}}>\n              <ClientTopBar />\n            </Col>\n          </Row>\n          <Row className={styles.ContentBigRow}>\n            <Col>\n              <div className={styles.ClientTop}>\n              </div>\n              <Row className={styles.ContentDiv + \"justify-content-md-center\"}>\n                {\n                  displayPage(props.pageMode)\n                }\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nfunction mapStateToProps(state) {\n  console.log('IN container map to state : '+state.clientReducer.page);\n  return {\n    pageMode: state.clientReducer.page,\n    currentRestaurantName: state.navigationReducer.currentRestaurantName,\n  }\n}\n\nexport default connect(mapStateToProps)(ClientContainer);\n","import React from 'react';\n\nimport { LoginRoute } from './helper/routeHelper'; //HELPERS\nimport PrivateClientRoute from './helper/PrivateClientRoute';\nimport PrivateAdminRoute from './helper/PrivateAdminRoute';\n\nimport Display from './components/Display';                                 //COMPONENTS\nimport ConnexionContainer from './components/connexion/Connexion';\nimport AdminContainer from './components/administration/container/AdminContainer';\nimport ClientContainer from './components/client/container/ClientContainer';\n\nimport { Switch, Route, withRouter } from \"react-router-dom\";   //ROUTER\nimport { useSelector, useDispatch } from 'react-redux';         //REDUX\n\nimport { increment } from './actions/admin.action';             //ACTIONS\n\nfunction App() {\n\n  return (\n    <>\n      <Switch>\n        <Route exact path='/connexion/admin'>\n          <LoginRoute component={ <ConnexionContainer connexionRedirectPath='/adminConsole' /> } />\n        </Route>\n        <Route exact path='/connexion/client'>\n           <LoginRoute component={ <ConnexionContainer connexionRedirectPath='/clientConsole' /> } />\n        </Route>\n\n        <Route exact path='/adminConsole'>\n           <PrivateAdminRoute component={ <AdminContainer /> } />\n        </Route>\n        <Route exact path='/clientConsole'>\n           <PrivateClientRoute component={ <ClientContainer /> } />\n        </Route>\n\n        <Route path=\"/\">\n          <LoginRoute component={ <ConnexionContainer connexionRedirectPath='/clientConsole' /> } />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';                          //REACT\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';             //REDUX\nimport applicationStore from './store/store';\n\nimport { BrowserRouter } from 'react-router-dom';   //ROUTER\n\nimport 'bootstrap/dist/css/bootstrap.min.css';      //BOOTSTRAP\nimport Container from 'react-bootstrap/Container'\n\nReactDOM.render(\n  <Provider store={applicationStore}>\n    <BrowserRouter>\n      <Container fluid style={{padding: 0, margin: 0, height:'100%'}}>\n        <App />\n      </Container>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clientList\":\"ClientList_clientList__fRn1R\",\"clientElement\":\"ClientList_clientElement__1ESdj\",\"accordion\":\"ClientList_accordion__WbYmQ\",\"toggleElement\":\"ClientList_toggleElement__3_3Pw\",\"active\":\"ClientList_active__22h3S\",\"unactive\":\"ClientList_unactive__1bq3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formCheck\":\"Form_formCheck__1C02l\",\"formLabel\":\"Form_formLabel__3HHNS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsContainer\":\"ClientDetails_detailsContainer__sgPXq\",\"formContainer\":\"ClientDetails_formContainer__1b-EO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"global\":\"DashboardElement_global__3DIAH\",\"value\":\"DashboardElement_value__2ry9i\",\"title\":\"DashboardElement_title__2vzes\",\"legend\":\"DashboardElement_legend__OIdNK\",\"centerComponent\":\"DashboardElement_centerComponent__3HGsd\"};","import React from 'react';                    // REACT\nimport styles from './Form.module.css';       //CSS\n\nimport Form from 'react-bootstrap/Form';       //BOOTSTRAP\n\nfunction FormRadioElement(props) {\n\n  return(\n    <Form.Check type='radio'\n                className={styles.formCheck}\n                id='line'\n\n    >\n      <Form.Check.Input type='radio'\n                        name={props.name}\n                        checked={ props.currentValue == props.value }\n                        onChange={ props.onChange }\n                        onClick= { props.onClick }\n      />\n      <Form.Check.Label className={styles.formLabel}> {props.label} </Form.Check.Label>\n    </Form.Check>\n  )\n}\n\nexport default FormRadioElement;\n","import React, { useState } from 'react';\n\nimport { useParams } from \"react-router-dom\";\n\nimport ErrorFormField from '../../Common/ErrorFormField/ErrorFormField';   //COMPONENTS\nimport Line from './Line';\nimport Bar from './Bar';\nimport FormRadioElement from './FormRadioElement';\nimport FormCheckboxElement from './FormCheckboxElement';\n\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\n//import { getGaspillageDataSuccess, getGaspillageDataError } from '../../../actions/admin.action';  //ACTIONS\n\nimport { getGaspillageData, getFood, getFoodsOfCategories, getCategoriesName, getAllTrayForRestraurantDay } from '../../../services/AdminAPI';           //API FUNCTIONS\n\nimport { Button, Form, Col, Row, Container, Dropdown, DropdownButton, ButtonGroup, SplitButton } from 'react-bootstrap';  //BOOTSTRAP\n\nimport { Formik } from 'formik';    //FORMIK\nimport * as Yup from 'yup';         //YUP\n\nimport styles from './AdminGaspi.module.css'; //CSS\n\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nconst moment = require('moment');   //MOMENT\n\nfunction AdminGaspi(props) {\n\n  let [ready, setReady] = useState(false);\n  let [rangeDataTitle, setRangeDataTitle] = useState('');\n  let [type, setType] = useState('line');\n  let [legendType, setLegendType] = useState('');\n  let [finalFoodData, setFinalFoodData] = useState();\n  let [finalData, setFinalData] = useState({});\n  let [finalTray, setFinalTray] = useState({});\n  let [displayedData, setDisplayedData] = useState({});\n  let [displayedBarData, setDisplayedBarData] = useState({});\n\n  const gaspillageValidationSchema = Yup.object().shape({\n    dateStart: Yup.date().required('Ce champ est obligatoire'),\n    dateEnd: Yup.date().min(Yup.ref('dateStart')).required('Ce champ est obligatoire'),\n  });\n\n  console.log('BEFORE RENDERIIIIIIIIIIIIIIIIIIIIIIIIIING !'); //---------------------------------------------------------------------------------------------------------------------------------------------------------\n\n  const getAllDates = (startDate, endDate) => {\n    console.log('Begin get all dates');\n    const startDay = moment(startDate);                        //BEGIN GET ALL DATES\n    const endDay = moment(endDate);\n    const allDates = [];\n    allDates.push(startDay.clone());\n    while( (startDay.add(1, 'days')).isBefore(endDay) ){\n      allDates.push( startDay.clone() );\n    }\n    allDates.push( endDay.clone() );\n    console.log('ALL dates : '+JSON.stringify(allDates, null, 2));\n    return allDates;\n  }\n\n  const getFoodsFromCategories = async (categoryList) => {\n    console.log('Begin get food from categories');\n    const categoriesFoods = [];\n    for (const category of categoryList) {\n      await getFoodsOfCategories(category)\n        .then( res => categoriesFoods.push(res.Items))\n        .catch( err => console.log('ERROR when getting foods of category' + err))\n    }\n    console.log('the food categories : '+JSON.stringify(categoriesFoods, null, 2));\n    return categoriesFoods;\n  }\n\n  const getFoods = async (foodList) => {\n    console.log('Begin get foods');\n    const foods = [];\n    for (const food of foodList) {\n      await getFood(food)\n        .then( res => foods.push(res.Items[0]))\n        .catch( err => console.log('ERROR when getting food: ' + err))\n    }\n    console.log('the foods :'+ JSON.stringify(foods, null, 2));\n    return foods;\n  }\n\n  const storeFoodData = async (foodList, foodOfCategoriesLits) => {\n    console.log('Begin store food data');\n    var foodData = new Map();\n    for (const food of foodList) {\n      foodData.set(food.nameFood, food);\n    }\n    for (const foodsOfCategories of foodOfCategoriesLits) {\n      for (const food of foodsOfCategories) {\n        foodData.set(food.nameFood, food);\n      }\n    }\n    /*\n    for (const [categoryIndex, categoryItems] of foodOfCategoriesLits.entries()) {\n\n      var totalDensity = 0;\n      var totalPrice = 0;\n      var totalCo2 = 0;\n      for (const food of categoryItems) {\n        totalDensity = totalDensity + food.densityFood;\n        totalPrice = totalPrice + food.priceFood;\n        totalCo2 = totalCo2 + food.co2Food;\n      }\n      const categoryFood = {\n        nameFood: categoryItems[0].categoryFood,\n        densityFood: totalDensity/(categoryItems.length),\n        priceFood: totalPrice/(categoryItems.length),\n        co2Food: totalCo2/(categoryItems.length),\n      };\n      foodData.set(categoryItems[0].categoryFood, categoryFood);\n      //console.log('the food of CATEGORY : '+JSON.stringify())\n    }\n    */\n    console.log('Stored food data : '+foodData);\n    await setFinalFoodData(foodData);\n    return foodData;\n  }\n\n  const getSamplesForCategories = async (foodsOfCategories, allDates) => {\n    console.log('Begin getsamples for categories');\n    const samplesForCategories = [];\n    for (const foodsOfCategory of foodsOfCategories) {\n      //const foodsNameOfCategory = foodsOfCategory.map( food => food.nameFood)\n      const samples = await getSamplesForFoods(foodsOfCategory, allDates);\n      samplesForCategories.push(samples);\n    }\n    console.log('The sample for the categories : '+JSON.stringify(samplesForCategories, null, 2));\n    return samplesForCategories;\n  }\n\n  const getSamplesForFoods = async (foods, allDates) => {\n    console.log('Begin get samples for foods');\n    const samplesForFoods = [];\n    for (const food of foods) {\n      const samplesForFood = await getSamplesForFood(food, allDates);\n      samplesForFoods.push(samplesForFood);\n    }\n    console.log('The samples for foodS : '+JSON.stringify(samplesForFoods,null, 2));\n    return samplesForFoods;\n  }\n\n  const getSamplesForFood = async (food, allDates) => {\n    console.log('Begin get samples for food : '+ JSON.stringify(food, null, 2));\n    const samplesForFood = [];\n    for (const date of allDates) {\n      const stringDate = moment(date).format('YYYY-MM-DD');\n      await getGaspillageData(props.restaurantName, food.idFood, stringDate)\n        .then( res => {\n          console.log('Value of sample: '+JSON.stringify(res.Items, null, 2));\n\n          for (let indexSample = 0; indexSample < res.Items.length; indexSample++) {\n            console.log('sample item : '+JSON.stringify(res.Items[indexSample], null, 2));\n            console.log('sample food : '+JSON.stringify(food, null, 2));\n            res.Items[indexSample].mass = ((res.Items[indexSample].volume/1000) * food.volumicMassFood) / 1000;\n            res.Items[indexSample].co2 = (((res.Items[indexSample].volume/1000) * food.volumicMassFood) * (food.co2Food + (204.97/1000000)));\n            res.Items[indexSample].cost = ((((res.Items[indexSample].volume/1000) * food.volumicMassFood) * (food.PriceFood/1000))*2.5);\n          }\n          console.log('AAAAAAAAAAAAAAAAAAAAAAAAAAA : '+JSON.stringify(res.Items, null, 2));\n          samplesForFood.push(res.Items);\n        })\n        .catch( err => console.log('ERROR when getting samples for a date : '+err))\n    }\n    console.log('The samples for a food : '+ JSON.stringify(samplesForFood, null, 2));\n    return samplesForFood;\n  }\n\n  const createDataFromFoodsSamples = (foodsName, foodsSamples, allDates) => {\n    console.log('Begin create data from foods samples');\n    const foodsData = [];\n    for (const [foodIndex, foodItem] of foodsSamples.entries()) {\n      const itemColor = 'hsl('+foodIndex*30+', 70%, 50%)';\n      const foodData = {\n        id: foodsName[foodIndex],\n        color: itemColor,\n        data: []\n      }\n      for (const [dateIndex, dateItem] of foodsSamples[foodIndex].entries()) {\n        var totalVolume = 0;\n        var totalMass = 0;\n        var totalCost = 0;\n        var totalCo2 = 0;\n        var numberOfTray = 0;\n        for (const sample of foodsSamples[foodIndex][dateIndex]) {\n          console.log('SAMPLE COOOOOOST : '+sample.cost);\n          totalVolume = totalVolume + sample.volumeSample;\n          totalMass += sample.mass;\n          totalCost += sample.cost;\n          totalCo2 += sample.co2;\n          numberOfTray = numberOfTray + 1;\n          console.log('TOTAAAAAL COOOOOOST : '+totalCost);\n        }\n\n        const dataDay = {\n          x: moment(allDates[dateIndex]).format('YYYY-MM-DD'),\n          volume: totalVolume,\n          mass: totalMass,\n          cost: totalCost,\n          co2: totalCo2,\n          tray: numberOfTray\n        }\n        console.log(\"DAYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY : \"+JSON.stringify(dataDay, null, 2));\n        foodData.data.push(dataDay);\n      }\n      foodsData.push(foodData);\n    }\n    console.log('The FOODS DATAS : '+JSON.stringify(foodsData, null, 2));\n    return foodsData;\n  }\n\n  const createDataFromCategoriesSamples = (categoriesName, categoriesSamples, allDates) => {\n    console.log('Begin create data from categories samples : '+JSON.stringify(categoriesSamples, null, 2));\n    const categoriesData = [];\n    for (const [categoryIndex, categoryItem] of categoriesSamples.entries()) {    //pour chaque category\n      const itemColor = 'hsl('+(330-(categoryIndex*30))+', 70%, 50%)';\n      const categoryData = {\n        id: categoriesName[categoryIndex],\n        color: itemColor,\n        data: []\n      }\n      var data = [];\n      for (const [foodIndex, foodItem] of categoriesSamples[categoryIndex].entries()) {                   //pour chaque food de la category\n        for (const [dateIndex, dateItem] of categoriesSamples[categoryIndex][foodIndex].entries()) {      //pour chaque date de la food\n          console.log('Date Item : '+JSON.stringify(dateItem, null, 2));\n          var totalVolume = 0;\n          var numberOfTray = 0;\n          var totalMass = 0;\n          var totalCost = 0;\n          var totalCo2 = 0;\n          for (const sample of categoriesSamples[categoryIndex][foodIndex][dateIndex]) {\n              totalVolume = totalVolume + sample.volumeSample;\n              totalMass += sample.mass;\n              totalCost += sample.cost;\n              totalCo2 += sample.co2;\n              numberOfTray = numberOfTray + 1;\n          }\n          if (data[dateIndex] == undefined){\n            data[dateIndex] = {x: '', volume: 0, mass: 0, cost: 0, co2: 0, tray: 0};\n          }\n          data[dateIndex].x = moment(allDates[dateIndex]).format('YYYY-MM-DD');\n          data[dateIndex].volume = data[dateIndex].volume + totalVolume;\n          data[dateIndex].mass = data[dateIndex].mass + totalMass;\n          data[dateIndex].cost = data[dateIndex].cost + totalCost;\n          data[dateIndex].co2 = data[dateIndex].co2 + totalCo2;\n          data[dateIndex].tray = data[dateIndex].tray + numberOfTray;\n        }\n      }\n      categoryData.data = data;\n      categoriesData.push(categoryData);\n    }\n    return categoriesData;\n  }\n\n  const aggregateData = (data, timeScale) => {\n    console.log('Begin aggregate data : '+JSON.stringify(data, null, 2));\n    const aggregatedData = [];\n    for (const [indexLine, itemLine] of data.entries()) {     //pour chaque 'ligne' (food ou category)\n      switch (timeScale) {\n        case 'jour':\n          console.log('In jour');\n          aggregatedData.push(itemLine);\n          break;\n        case 'semaine':\n          console.log('In semaine');\n          var currentWeek = moment(itemLine.data[0].x).week();\n          const weekData = [ {                    //on créé une nouvelle donnée\n                              x: itemLine.data[0].x,\n                              volume: 0,\n                              mass: 0,\n                              cost: 0,\n                              co2: 0,\n                              tray: 0\n                             } ];\n          var indexData = 0;\n          for (const [indexDay, itemDay] of itemLine.data.entries()) {\n            if (currentWeek == moment(itemDay.x).week()) {\n              weekData[indexData].volume += itemDay.volume ;\n              weekData[indexData].mass += itemDay.mass ;\n              weekData[indexData].cost += itemDay.cost ;\n              weekData[indexData].co2 += itemDay.co2 ;\n              weekData[indexData].tray = weekData[indexData].tray + itemDay.tray ;\n            }\n            else {\n              indexData = indexData +1;\n              currentWeek = moment(itemDay.x).week();\n              weekData[indexData] = itemDay;\n            }\n          }\n\n          const newLineDataWeek = {\n            id: data[indexLine].id,\n            color: data[indexLine].color,\n            data: weekData\n          };\n          aggregatedData.push(newLineDataWeek);\n          break;\n        case 'mois':\n          console.log('In month');\n          var currentMonth = moment(itemLine.data[0].x).month();\n          const monthData = [ {                    //on créé une nouvelle donnée\n                              x: itemLine.data[0].x,\n                              volume: 0,\n                              mass: 0,\n                              cost: 0,\n                              co2: 0,\n                              tray: 0\n                             } ];\n          var indexData = 0;\n          for (const [indexDay, itemDay] of itemLine.data.entries()) {\n            if (currentMonth == moment(itemDay.x).month()) {\n              monthData[indexData].volume += itemDay.volume ;\n              monthData[indexData].mass += itemDay.mass ;\n              monthData[indexData].cost += itemDay.cost ;\n              monthData[indexData].co2 += itemDay.co2 ;\n              monthData[indexData].tray = monthData[indexData].tray + itemDay.tray ;\n            }\n            else {\n              indexData = indexData +1;\n              currentMonth = moment(itemDay.x).month();\n              monthData[indexData] = itemDay;\n            }\n          }\n          const newLineDataMonth = {\n            id: data[indexLine].id,\n            color: data[indexLine].color,\n            data: monthData\n          };\n          aggregatedData.push(newLineDataMonth);\n          break;\n        default:\n          console.log('In default');\n          aggregatedData.push(itemLine);\n          break;\n      }\n    }\n    console.log('The aggregated Datas : '+JSON.stringify(aggregatedData, null, 2));\n    return aggregatedData;\n  }\n\n  const aggregateTraysData = (trayData, timeScale) => {\n    console.log('Begin aggregate data : '+JSON.stringify(trayData, null, 2));\n    var aggregatedTrayData = [];\n    switch (timeScale) {\n      case 'jour':\n        console.log('In jour');\n        aggregatedTrayData.push(trayData);\n        break;\n      case 'semaine':\n        console.log('In semaine');\n        var currentWeek = moment(trayData.data[0].x).week();\n        const weekData = [ {                    //on créé une nouvelle donnée\n                            x: trayData.data[0].x,\n                            y: 0\n                           } ];\n        var indexData = 0;\n        for (const [indexDay, itemDay] of trayData.data.entries()) {\n          if (currentWeek == moment(itemDay.x).week()) {\n            weekData[indexData].y = weekData[indexData].y + itemDay.y ;\n          }\n          else {\n            indexData = indexData +1;\n            currentWeek = moment(itemDay.x).week();\n            weekData[indexData] = itemDay;\n          }\n        }\n\n        aggregatedTrayData = {\n          id: trayData.id,\n          color: trayData.color,\n          data: weekData\n        };\n        break;\n      case 'mois':\n        console.log('In month');\n        var currentMonth = moment(trayData.data[0].x).month();\n        const monthData = [ {                    //on créé une nouvelle donnée\n                            x: trayData[0].x,\n                            y: 0,\n                           } ];\n        var indexData = 0;\n        for (const [indexDay, itemDay] of trayData.data.entries()) {\n          if (currentMonth == moment(itemDay.x).month()) {\n            monthData[indexData].y += itemDay.y ;\n          }\n          else {\n            indexData = indexData +1;\n            currentMonth = moment(itemDay.x).month();\n            monthData[indexData] = itemDay;\n          }\n        }\n        aggregatedTrayData = {\n          id: trayData.id,\n          color: trayData.color,\n          data: monthData\n        };\n        break;\n      default:\n        console.log('In default');\n\n        break;\n      }\n    console.log('The aggregated Tray Datas : '+JSON.stringify(aggregatedTrayData, null, 2));\n    return aggregatedTrayData;\n  }\n\n  const createDisplayedData = async (dataTypeToDisplay, dataFinal, foodData, trayData) => {\n    console.log('Begin create displayed data, the final data is : '+JSON.stringify(dataFinal, null, 2));\n    console.log('The foods data are : '+foodData);\n    switch(dataTypeToDisplay) {\n      case 'mass':\n        setLegendType('Masse en Kg');\n        const massData = dataFinal.map( item => { return {  id: item.id,\n                                                            color: item.color,\n                                                            data: item.data.map( dataItem => { return { x: dataItem.x,\n                                                                                                        y: dataItem.mass.toFixed(2)\n                                                                                                      };\n                                                                                             })\n                                                         };\n                                                } );\n        console.log('Mass Data : '+JSON.stringify(massData, null, 2));\n        await createBarData(massData);\n        setDisplayedData(massData);\n        break;\n\n      case 'co2':\n        setLegendType('Quantité de Co2 en Kg');\n        const co2Data = dataFinal.map( item => { return {  id: item.id,\n                                                            color: item.color,\n                                                            data: item.data.map( dataItem => { return { x: dataItem.x,\n                                                                                                        y: dataItem.co2.toFixed(2),\n                                                                                                      }; // (   ml    *        g/ml)                      * (       gCo2/g                 + (gCo2/T) / 1M\n                                                                                             })\n                                                         };\n                                                } );\n        console.log('CO2 Data : '+JSON.stringify(co2Data, null, 2));\n        await createBarData(co2Data);\n        setDisplayedData(co2Data);\n        break;\n\n      case 'cost':\n        setLegendType('Coût en €');\n        const costData = dataFinal.map( item => { return {  id: item.id,\n                                                            color: item.color,\n                                                            data: item.data.map( dataItem => { return { x: dataItem.x,\n                                                                                                        y: dataItem.cost.toFixed(2),\n                                                                                                      };   //     ml    *    g/ml                          *              (€/Kg)            /1000\n                                                                                             })\n                                                         };\n                                                } );\n        console.log('Cost Data : '+JSON.stringify(costData, null, 2));\n        await createBarData(costData);\n        setDisplayedData(costData);\n        break;\n\n      case 'tray':\n        setLegendType('Nombre de plateau');\n        console.log('Tray Data : '+JSON.stringify(trayData, null, 2));\n        await createBarData(trayData);\n        setDisplayedData(trayData);\n        break;\n\n      default:\n\n        break;\n    }\n    setReady(true);\n  }\n\n  const getAllTrays = async (allDates) => {\n    console.log('Before getting all trays');\n    var allTrays = [];\n    for (const date of allDates) {\n      await getAllTrayForRestraurantDay(props.restaurantName, date)\n        .then( res => {\n          console.log('Success in getting trays :'+JSON.stringify(res, null, 2));\n          allTrays.push(res);\n        })\n        .catch( err => {\n          console.log('Error in getting trays :'+JSON.stringify(err, null, 2));\n        })\n    }\n\n    console.log('After getting all trays : '+JSON.stringify(allTrays));\n    return allTrays;\n  }\n\n  const createTrayData = (trays, allDates) => {\n    const trayData = {\n      id: 'Tray',\n      color: 'grey',\n      data: []\n    }\n    for (const [dateIndex, dateItem] of allDates.entries()) {\n      const newValue = {\n        x: moment(dateItem).format('YYYY-MM-DD'),\n        y: trays[dateIndex]\n      }\n      trayData.data.push()\n    }\n    console.log('THE TRAY DATA : '+JSON.stringify(trayData, null, 2));\n    return trayData;\n  }\n\n\n  const createBarData = (data) => {\n    console.log('In create bar data');\n    const barData = [];\n    for (const line of data) {\n      for (const [dataIndex, dataItem] of line.data.entries()) {\n        console.log('Data item : '+JSON.stringify(dataItem, null, 2));\n        if (barData[dataIndex] == undefined) {\n          barData[dataIndex] = { date: dataItem.x }\n        }\n        console.log(\"barData[\"+dataIndex+\"].\" + line.id.replace(' ', \"_\") + \" = \" + dataItem.y + \";\");\n        eval(\"barData[\"+dataIndex+\"].\" + line.id.replace(/ /g, \"_\").replace(/-/g, \"_\") + \" = \" + dataItem.y + \";\");\n        console.log('AFTER EVAL');\n      }\n    }\n    console.log('The BAR DATA : '+JSON.stringify(barData, null, 2));\n    setDisplayedBarData(barData);\n  }\n\n  const handleSubmit = async (values, {setSubmitting, resetForm}) => {\n    setSubmitting(true);\n    console.log('IN HANDLE SEARCH GASPI !');\n    setRangeDataTitle('du '+values.dateStart+' au '+values.dateEnd);\n    const allDates = await getAllDates(values.dateStart, values.dateEnd);\n\n    const allFoodsOfCategories = await getFoodsFromCategories(values.categoryCheck);\n    const allFoods = await getFoods(values.foodCheck);\n    const foodData = await storeFoodData(allFoods, allFoodsOfCategories);\n\n    const categoriesSamples = await getSamplesForCategories(allFoodsOfCategories, allDates);\n    const foodsSamples = await getSamplesForFoods(allFoods, allDates);\n    const trays = await getAllTrays(allDates);\n\n    const foodsData = await createDataFromFoodsSamples(values.foodCheck, foodsSamples, allDates);\n    const categoriesData = await createDataFromCategoriesSamples(values.categoryCheck, categoriesSamples, allDates);\n    const trayData  = await createTrayData(trays, allDates);\n\n    const allData = foodsData.concat(categoriesData);\n    const aggregatedData = await aggregateData(allData, values.timeScale);\n    const aggregatedTrays = await aggregateTraysData(trays, values.timeScale);\n    await setFinalData(aggregatedData);\n    await setFinalTray(aggregatedTrays);\n\n    createDisplayedData('mass', aggregatedData, foodData, aggregatedTrays);\n  }\n\n  const [categoriesName, setCategoriesName] = useState();\n  if (categoriesName == null) {\n    console.log('In get the categorieeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeees');\n    getCategoriesName()\n      .then( async res => {\n        console.log('The categories : '+JSON.stringify(res, null, 2));\n        var returnVal = res.result ;\n        for (const [index, category] of returnVal.entries()) {\n          await getFoodsOfCategories(category.nameCategory)\n            .then( res => {\n              console.log('food of cat : '+JSON.stringify(res, null, 2));\n              returnVal[index].food = res.Items;\n            })\n            .catch( err => console.log('ERROR when getting foods of category' + err))\n        }\n        console.log('The returnVal : '+JSON.stringify(returnVal, null, 2));\n        setCategoriesName(returnVal);\n      })\n      .catch(err => {\n        console.log('Error while getting the categories : '+JSON.stringify(err, null, 2));\n      })\n  }\n\n  const CalendarIcon = () => {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"39.653\" height=\"39.658\" viewBox=\"0 0 39.653 39.658\">\n        <g id=\"Calendar\" transform=\"translate(-30 -241)\">\n          <path id=\"Tracé_149\" data-name=\"Tracé 149\" d=\"M4.957,12.393V34.7H34.7V12.393ZM32.218,4.957h4.957a2.342,2.342,0,0,1,2.478,2.479V37.179a2.342,2.342,0,0,1-2.478,2.479H2.478A2.342,2.342,0,0,1,0,37.179V7.436A2.342,2.342,0,0,1,2.478,4.957H7.435V2.479A2.342,2.342,0,0,1,9.913,0a2.342,2.342,0,0,1,2.478,2.479V4.957h14.87V2.479a2.478,2.478,0,1,1,4.957,0ZM29.74,29.743H24.783V24.786H29.74Zm-7.435,0H17.348V24.786H22.3Zm7.435-7.436H24.783V17.35H29.74Zm-7.435,0H17.348V17.35H22.3ZM14.87,29.743H9.913V24.786H14.87Z\" transform=\"translate(30 241)\" fill=\"#90c261\" fill-rule=\"evenodd\"/>\n        </g>\n      </svg>\n    )\n  }\n\n  const SearchIcon = () => {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40.007\" height=\"40.007\" viewBox=\"0 0 40.007 40.007\">\n        <path id=\"icon_search\" d=\"M31.755,28.079a16.944,16.944,0,0,0,3.5-10.437A17.552,17.552,0,0,0,17.753,0,17.766,17.766,0,0,0,0,17.643,17.766,17.766,0,0,0,17.753,35.285a16.67,16.67,0,0,0,10.5-3.479l7.5,7.455a2.427,2.427,0,0,0,3.5,0,2.392,2.392,0,0,0,0-3.479Zm-14,1.988A12.556,12.556,0,0,1,5,17.643a12.752,12.752,0,0,1,25.5,0A12.556,12.556,0,0,1,17.753,30.067Z\" fill=\"#90c261\"/>\n      </svg>\n    )\n  }\n\n  const KnifeForkIcon = () => {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"37.814\" viewBox=\"0 0 40 37.814\">\n        <g id=\"d030eae21143eec06e9d33401e787d27\" transform=\"translate(-9.925 -36.825)\">\n          <path id=\"Tracé_359\" data-name=\"Tracé 359\" d=\"M162.781,102.5a2.431,2.431,0,0,0-1.478-.7c-1.033-.1-3.861,1.551-5.453,2.547a52.3,52.3,0,0,0-9.131,7.253l-7.469,7.465a2.441,2.441,0,0,0,0,3.449l.037.033L129.038,132.79a2.439,2.439,0,0,0,3.449,3.449l30.294-30.294a2.451,2.451,0,0,0,.571-2.543,2.328,2.328,0,0,0-.571-.906Z\" transform=\"translate(-113.567 -62.313)\" fill=\"#90c261\"/>\n          <path id=\"Tracé_360\" data-name=\"Tracé 360\" d=\"M563.349,592.7l-3.449,3.449,10.71,10.71a2.437,2.437,0,1,0,3.445-3.449L563.349,592.7Z\" transform=\"translate(-527.527 -533.187)\" fill=\"#90c261\"/>\n          <path id=\"Tracé_361\" data-name=\"Tracé 361\" d=\"M22,52.514l2.678,2.678,3.4-3.4-2.547-2.547a4.7,4.7,0,0,0-1.18-4.653c-.012-.012-.029-.02-.041-.033s-.02-.029-.033-.041l-7.457-7.457A.8.8,0,0,0,15.683,38.2l6.926,6.922a.014.014,0,0,0,.008,0,.5.5,0,0,1-.706.706l0,0h0L14.977,38.9a.8.8,0,0,0-1.135,1.135l6.926,6.931a0,0,0,0,1,0,0,.5.5,0,0,1-.706.706,0,0,0,0,0,0,0h0l-6.926-6.931A.8.8,0,1,0,12,41.873L18.928,48.8l0,0a.5.5,0,1,1-.706.706,0,0,0,0,0,0,0v0L11.3,42.579a.8.8,0,1,0-1.135,1.135l7.461,7.461c.012.012.029.02.041.033s.02.029.033.041A4.7,4.7,0,0,0,22,52.514Z\" fill=\"#90c261\"/>\n          <path id=\"Tracé_362\" data-name=\"Tracé 362\" d=\"M585.788,614.592,576,604.8l-3.4,3.4,9.792,9.792a2.4,2.4,0,1,0,3.4-3.4Z\" transform=\"translate(-539.709 -544.793)\" fill=\"#90c261\"/>\n        </g>\n      </svg>\n    )\n  }\n\n  const BarChartIcon = () => {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51.872\" height=\"39.532\" viewBox=\"0 0 51.872 39.532\">\n        <path id=\"Bar_Chart\" data-name=\"Bar Chart\" d=\"M88,27.766V-11.766h6.873V27.766Zm-9,0v-13.4h8v13.4Zm-9,0V8.621h8V27.766Zm-9,0V.963h8v26.8Zm-9,0V8.621h8V27.766Zm-9,0V-5.99h8V27.766Z\" transform=\"translate(-43 11.766)\" fill=\"#90c261\"/>\n      </svg>\n    )\n  }\n\n  return(\n    <Col className={styles.globalContainer}>\n\n      <Formik\n        enableReinitialize\n        initialValues={ { dateStart: '',\n                          dateEnd: '',\n                          timeScale: 'jour',\n                          graphType: 'line',\n                          foodCheck: [],\n                          categoryCheck: [] } }\n        validationSchema={ gaspillageValidationSchema }\n        onSubmit={ handleSubmit }\n      >\n        { ({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting, setFieldValue }) => {\n        console.log('the VALUES : '+JSON.stringify(values, null, 2));\n        return(\n          <div>\n            <Form onSubmit={ handleSubmit }>\n              <Row>\n                <Col md={{span: 12, offset: 0}}>\n                  <Row className=\"justify-content-md-center\">\n                      <style type=\"text/css\">\n                      {`\n                       .btn-custom-refresh {\n                         color: #90c261;\n                        }\n                      `}\n                      </style>\n                      <h1 className={styles.pageTitle}> Mes statistiques <Button variant='custom-refresh' type='submit' disabled={isSubmitting}> <RefreshIcon fontSize='large' /> </Button> </h1>\n                  </Row>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col md={{span: 3, offset: 0}}>\n                  <Row className=\"justify-content-md-center\">\n                    <div className={styles.FormElement}>\n                      <Container>\n                        <Row>\n                          <Col md={{span: 7}}>\n                            <Row>\n                              <p className={styles.formItemTitle}>Période d'étude</p>\n                            </Row>\n                            <Row>\n                            <style type=\"text/css\">\n                              {`\n                                @import url('https://fonts.googleapis.com/css2?family=Muli:wght@200;700&display=swap');\n\n                                .btn-custom {\n                                  font-size: 15px;\n                                  border-color: #a0a0a0;\n                                  border-width: 1px;\n                                  font-family: 'Muli', sans-serif;\n                                }\n                              `}\n                            </style>\n\n                              <DropdownButton as={ButtonGroup} style={{fontSize: '5px'}} className={styles.dropdownElement} variant='outline-secondary' title=\"Dates début / fin\" >\n                                <div className={styles.dropdownDate}>\n                                  <Form.Row>\n                                    <Form.Group as={Col} md={{span: 5, offset: 0}} controlId={ 'dateStart' }>                   { /*Start*/ }\n                                      <Form.Label style={{color: '#666666'}} classname={styles.dateDropDownTitles}> Date de début </Form.Label>\n                                      <Form.Control type= 'date'\n                                                    isValid={ touched.dateStart && !errors.dateStart }\n                                                    isInvalid={ touched.dateStart && errors.dateStart }\n                                                    placeholder='Date de début'\n                                                    onBlur={ handleBlur }\n                                                    value={ values.dateStart }\n                                                    onChange={ handleChange }>\n                                      </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} md={{span: 5, offset: 1}} controlId={ 'dateEnd' }>                   { /*End*/ }\n                                      <Form.Label style={{color: '#666666'}} classname={styles.dateDropDownTitles}> Date de fin </Form.Label>\n                                      <Form.Control type= 'date'\n                                                    isValid={ touched.dateEnd && !errors.dateEnd }\n                                                    isInvalid={ touched.dateEnd && errors.dateEnd }\n                                                    placeholder='Date de fin'\n                                                    onBlur={ handleBlur }\n                                                    value={ values.dateEnd }\n                                                    onChange={ handleChange }>\n                                      </Form.Control>\n                                    </Form.Group>\n                                  </Form.Row>\n                                </div>\n                              </DropdownButton>\n                            </Row>\n                          </Col>\n                          <Col md={{span: 5, offset: 0}}>\n                            <div className={styles.iconStyle}>\n                              <Row className=\"justify-content-md-center\" >\n                                <div style={{display: 'flex', justifyContent: 'flex-end', width: '100%'}}>\n                                  <CalendarIcon className={'float-rigth'}/>\n                                </div>\n                              </Row>\n                            </div>\n                          </Col>\n                        </Row>\n                      </Container>\n                    </div>\n                  </Row>\n                </Col>\n\n                <Col md={{span: 3, offset: 0}}>\n                  <Row className=\"justify-content-md-center\">\n                    <div className={styles.FormElement}>\n                      <Container>\n                        <Row>\n                          <Col md={{span: 7}}>\n                            <Row>\n                              <p className={styles.formItemTitle}>Agrégation</p>\n                            </Row>\n                            <Row>\n                              <DropdownButton as={ButtonGroup} className={styles.dropdownElement} variant='outline-secondary' title='Période'>\n                                <Form.Group as={Col} tag={'fieldset'}>                            { /*aggregation period*/ }\n                                  <FormRadioElement name='timeScale'\n                                                    currentValue={values.timeScale}\n                                                    value='jour'\n                                                    label='Jour'\n                                                    onChange={ () => setFieldValue('timeScale', 'jour')  }\n                                                    onClick={ () => null}\n                                  />\n                                  <FormRadioElement name='timeScale'\n                                                    currentValue={values.timeScale}\n                                                    value='semaine'\n                                                    label='Semaine'\n                                                    onChange={ () => setFieldValue('timeScale', 'semaine')  }\n                                                    onClick={ () => null }\n                                  />\n                                  <FormRadioElement name='timeScale'\n                                                    currentValue={values.timeScale}\n                                                    value='mois'\n                                                    label='Mois'\n                                                    onChange={ () => setFieldValue('timeScale', 'mois')  }\n                                                    onClick={ () => null }\n                                  />\n                                  <FormRadioElement name='timeScale'\n                                                    currentValue={values.timeScale}\n                                                    value='annee'\n                                                    label='Année'\n                                                    onChange={ () => setFieldValue('timeScale', 'annee')  }\n                                                    onClick={ () => null }\n                                  />\n                                </Form.Group>\n                              </DropdownButton>\n                            </Row>\n                          </Col>\n                          <Col md={{span: 5}}>\n                            <div className={styles.iconStyle}>\n                              <Row className=\"justify-content-md-center\">\n                                <div style={{display: 'flex', justifyContent: 'flex-end', width: '100%'}}>\n                                  <SearchIcon/>\n                                </div>\n                              </Row>\n                            </div>\n                          </Col>\n                        </Row>\n                      </Container>\n                    </div>\n                  </Row>\n                </Col>\n\n                <Col md={{span: 3, offset: 0}}>\n                  <Row className=\"justify-content-md-center\">\n                    <div className={styles.FormElement}>\n                      <Container>\n                        <Row>\n                          <Col md={{span: 7}}>\n                            <Row>\n                              <p className={styles.formItemTitle}>Type de graphe</p>\n                            </Row>\n                            <Row>\n                              <DropdownButton as={ButtonGroup} variant='outline-secondary' title='Graphe'>\n                                <Dropdown.Item onClick={ () => {  setType('line');\n                                                                  setFieldValue('graphType', 'line') } }\n\n                                >\n                                  Ligne\n                                </Dropdown.Item>\n                                <Dropdown.Item onClick={ () => {  setType('bar');\n                                                                  setFieldValue('graphType', 'bar') } }\n\n                                >\n                                  Histogramme\n                                </Dropdown.Item>\n                              </DropdownButton>\n                              {\n                                /*\n                                <DropdownButton as={ButtonGroup} className={styles.dropdownElement} variant='outline-secondary' title='Graphe'>\n                                  <Form.Group as={Col} tag={'fieldset'}>\n                                    <FormRadioElement name='graphType'\n                                                      currentValue={values.graphType}\n                                                      value='line'\n                                                      label='Line'\n                                                      onChange={ () => setFieldValue('graphType', 'line')  }\n                                                      onClick={ () => setType('line') }\n                                    />\n                                    <FormRadioElement name='graphType'\n                                                      currentValue={values.graphType}\n                                                      value='bar'\n                                                      label='Histogramme'\n                                                      onChange={ () => setFieldValue('graphType', 'bar')  }\n                                                      onClick={ () => setType('bar') }\n                                    />\n                                  </Form.Group>\n                                </DropdownButton>\n                                */\n                              }\n                            </Row>\n                          </Col>\n                          <Col md={{span: 5}}>\n                            <div className={styles.iconStyle}>\n                              <Row className=\"justify-content-md-center\">\n                                <div style={{display: 'flex', justifyContent: 'flex-end', width: '100%'}}>\n                                  <BarChartIcon/>\n                                </div>\n                              </Row>\n                            </div>\n                          </Col>\n                        </Row>\n                      </Container>\n                    </div>\n                  </Row>\n                </Col>\n\n                <Col md={{span: 3, offset: 0}}>\n                  <Row className=\"justify-content-md-center\">\n                    <div className={styles.FormElement}>\n                      <Container>\n                        <style type=\"text/css\">\n                          {`\n                            .btn-split-custom {\n                              font-size: 25px;\n                              backgroundColor: white;\n                              border-width: 0px;\n                              color: #90c261;\n                            }\n                          `}\n                        </style>\n                        <Row>\n                          <Col md={{span: 7}}>\n                            <Row>\n                              <p className={styles.formItemTitle}>Aliments étudiés</p>\n                            </Row>\n                            <Row>\n                              <DropdownButton as={ButtonGroup} className={styles.dropdownElement} variant='outline-secondary' title=\"Classes\" >\n\n                                  {\n                                    (categoriesName != null) ?\n                                      categoriesName.map( category => {\n                                        const name = category.nameCategory;\n                                        console.log('Try to display a category');\n                                        return (\n                                          <>\n                                          <Dropdown as={Col} drop='right'>\n                                            <Row>\n                                              <Col md={{span: 9, offset: 0}}>\n                                                <div className={styles.centerComponent}>\n                                                  <FormCheckboxElement  name='categoryCheck'\n                                                                        id={ name }\n                                                                        onChange={ handleChange }\n                                                                        value={ name }\n                                                                        label={ name }\n                                                  />\n                                                </div>\n                                              </Col>\n                                              <Col md={{span: 3, offset: 0}}>\n                                                <Dropdown.Toggle split variant=\"split-custom\" id=\"dropdown-split-basic\" />\n                                              </Col>\n\n                                              <Dropdown.Menu>\n                                                <Col>\n                                                  {\n                                                    category.food.map( food => {\n                                                      return (\n                                                        <FormCheckboxElement  name='foodCheck'\n                                                                              id= { food.nameFood }\n                                                                              onChange={ handleChange }\n                                                                              value= { food.nameFood }\n                                                                              label= { food.nameFood }\n                                                        />\n                                                      )\n                                                    })\n                                                  }\n                                                </Col>\n                                              </Dropdown.Menu>\n\n                                            </Row>\n                                          </Dropdown>\n\n                                          </>\n                                        )\n                                      })\n                                    :\n                                      <> </>\n                                  }\n                              </DropdownButton>\n                            </Row>\n                          </Col>\n                          <Col md={{span: 5}}>\n                            <div className={styles.iconStyle}>\n                              <Row className=\"justify-content-md-center\">\n                                <div style={{display: 'flex', justifyContent: 'flex-end', width: '100%'}}>\n                                  <KnifeForkIcon/>\n                                </div>\n                              </Row>\n                            </div>\n                          </Col>\n                        </Row>\n                      </Container>\n                    </div>\n                  </Row>\n                </Col>\n              </Row>\n              {\n                !ready ?\n                  <Row className=\"justify-content-md-center\">\n                    <Col>\n                      <style type=\"text/css\">\n                        {`\n                          .btn-custom-grey {\n                            font-size: 20px;\n                            background-color: #666666;\n                            border-width: 0px;\n                            color: white;\n                          }\n\n                          .btn-custom-grey:hover {\n                            font-size: 20px;\n                            background-color: #525252;\n                            border-width: 0px;\n                            color: white;\n                          }\n                        `}\n                      </style>\n                      <div style={{display: 'flex', justifyContent: 'center', width: '100%', marginTop: '30px'}}>\n                        <Button variant='custom-grey' type='submit' disabled={isSubmitting}> Lancer la recherche </Button>\n                      </div>\n                    </Col>\n                  </Row>\n                :\n                  <></>\n              }\n            </Form>\n          </div>\n\n        ) } }\n      </Formik>\n\n      <br/>\n      <br/>\n\n      {\n        ready ?\n          type == 'line' ?\n            <Row>\n              <div className={styles.graphElement}>\n                <Row>\n                  <Col md={{span: 9, offset: 0}}>\n                    Données {rangeDataTitle}\n                  </Col>\n                  <Col md={{span: 1, offset: 1}} className={styles.dropdownElement}>\n                    <DropdownButton as={ButtonGroup} variant='outline-secondary' title='Type de données'>\n                      <Dropdown.Item onClick={ () => { createDisplayedData('mass', finalData, finalFoodData) } }>Masse (Kg) </Dropdown.Item>\n                      <Dropdown.Item onClick={ () => { createDisplayedData('cost', finalData, finalFoodData) } }>Coût (€) </Dropdown.Item>\n                      <Dropdown.Item onClick={ () => { createDisplayedData('co2', finalData, finalFoodData) } }>Consommation CO2 </Dropdown.Item>\n                      <Dropdown.Item onClick={ () => { createDisplayedData('tray', finalData, finalFoodData) } }> Nombre de plateau </Dropdown.Item>\n                    </DropdownButton>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col md={{span: 12}}>\n                    <div className={styles.divGraph}>\n                      <Line data={ displayedData }  allData={ finalData } dataType={ legendType } />\n                    </div>\n                  </Col>\n                </Row>\n              </div>\n            </Row>\n          :\n            <Row>\n              <div className={styles.graphElement}>\n                <Row>\n                  <Col md={{span: 9, offset: 0}}>\n                    Données {rangeDataTitle}\n                  </Col>\n                  <Col md={{span: 1, offset: 1}} className={styles.dropdownElement}>\n                    <DropdownButton as={ButtonGroup} variant='outline-secondary' title='Type de données'>\n                      <Dropdown.Item onClick={ () => { createDisplayedData('mass', finalData, finalFoodData) } }>Masse (Kg) </Dropdown.Item>\n                      <Dropdown.Item onClick={ () => { createDisplayedData('cost', finalData, finalFoodData) } }>Coût (€) </Dropdown.Item>\n                      <Dropdown.Item onClick={ () => { createDisplayedData('co2', finalData, finalFoodData) } }>Consommation CO2 </Dropdown.Item>\n                      <Dropdown.Item onClick={ () => { createDisplayedData('tray', finalData, finalFoodData) } }> Nombre de plateau </Dropdown.Item>\n                    </DropdownButton>\n                  </Col>\n               </Row>\n               <Row>\n                 <Col md={{span: 12}}>\n                   <div className={styles.divGraph}>\n                     <Bar data={ displayedBarData } keys={ finalData } allData={ finalData } dataType={ legendType } />\n                   </div>\n                 </Col>\n               </Row>\n              </div>\n            </Row>\n        :\n          <>\n          </>\n      }\n\n    </Col>\n  )\n}\n\nexport default AdminGaspi;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContentDiv\":\"ClientContainer_ContentDiv__eXWHo\",\"ClientTop\":\"ClientContainer_ClientTop__1NC7t\",\"ContentBigRow\":\"ClientContainer_ContentBigRow__iL3e0\"};","import axios from 'axios';\n//const back_url = 'http://localhost:8081';\nconst back_url = '';\n\nconst AWS = require('aws-sdk');\n//const awsConfig = require('aws-config');\nconst awsConfig =  {\n  'region': 'eu-west-3',\n  'endpoint': 'http://localhost:8000',\n  'accessKeyId': 'BLBLBLBLBLBLB',\n  'secretAccessKey': 'BLBLBLBLBLLBLBLBLB'\n};\nAWS.config.update(awsConfig);\n\n//-------------------------------------------------- CLIENT -----------------------------------------------\n\nexport async function getChefAccount (login, password) {\n  console.log('In chef get account');\n  const url = back_url+'/account';\n  const res = await axios.get(url, { params: { login: login, password: password, type: 'chef' } } )\n    .then (res => {\n      //console.log('In then getChefAccount : '+JSON.stringify(res, null, 2));\n      return res.data.result;\n    })\n    .catch ( err => {\n      console.log('In catch getChefAccount : '+err);\n    })\n  console.log('Result : '+JSON.stringify(res, null, 2));\n  return res;\n}\n\n/**\n *\n *\n */\n export function createAccountForRestaurant (email, password, restaurantName) {\n   const data = { email: email, password: password, nameRestaurant: restaurantName, accountType: 'chef' };\n   const url = back_url+'/account';\n   return new Promise((resolve, reject) => {\n    axios.post(url, data)\n      .then(response => {\n        console.log('IN THEN IN API : '+JSON.stringify(response, null, 2));\n        resolve(response.data)\n      })\n      .catch(err => {\n        console.log('In catch in api : '+err)\n        reject(err)\n      })\n  })\n}\n\n/**\n *\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function updateUserPassword (old, newPassword, email) {\n   const data = { old: old, new: newPassword, email: email };\n   const url = back_url+'/account';\n   return new Promise((resolve, reject) => {\n    axios.put(url, data)\n      .then(response => {\n        console.log('IN THEN IN API : '+JSON.stringify(response, null, 2));\n        sleep(5000);\n        resolve(response.data)\n      })\n      .catch(err => {\n        console.log('In catch in api : '+err)\n        sleep(5000);\n        reject(err)\n      })\n  })\n}\nfunction sleep(milliseconds) {\n  const date = Date.now();\n  let currentDate = null;\n  do {\n    currentDate = Date.now();\n  } while (currentDate - date < milliseconds);\n}\n\n/**\n *\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n/* export function updateUserPassword (old, newPassword, email) {\n   console.log('IN update account');\n   return new Promise((resolve, reject) => {\n     console.log('In promise update account');\n     sleep(5000);\n     const docClient = new AWS.DynamoDB.DocumentClient();\n     const params = {\n       TableName: 'Account',\n       Key: {\n           emailAccount: email,\n       },\n       ConditionExpression: 'passwordAccount = :valPassword',\n       UpdateExpression: 'set passwordAccount = :value',\n       ExpressionAttributeValues: { // a map of substitutions for all attribute values\n           ':value': newPassword,\n           \":valPassword\": old,\n       },\n       ReturnValues: 'ALL_NEW',\n     };\n     console.log('Before the request');\n     sleep(5000);\n     docClient.update(params, function(error, data) {\n       if (error) {\n         console.log('ERROR DURING update account : '+error);\n         sleep(5000);\n         reject(error);\n       }\n       else {\n         console.log('SUCCESS update account : '+ JSON.stringify(data, null, 2) );\n         sleep(5000);\n         resolve({ result: data });\n       }\n     });\n   })\n}\n*/\n\n/**\n *  GET all the clients in the database\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function getAllClients () {\n  return new Promise((resolve, reject) => {\n    axios.get(back_url+'/clients')\n      .then(response => resolve(response.data))\n      .catch(err => reject(err))\n  })\n}\n\n/**\n *  POST create a new client in the database\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function createClient (newClient) {\n  return new Promise((resolve, reject) => {\n    axios.post(back_url+'/client', newClient )\n      .then(response => resolve(response.data.result))\n      .catch(err => reject(err))\n  })\n}\n\n//-------------------------------------------------- CONTRACT -----------------------------------------------\n\n/**\n *  GET all the contracts for a client\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function getAllContracts (nameClient) {\n  return new Promise((resolve, reject) => {\n    axios.get(back_url+'/client/'+nameClient+'/contracts')\n      .then(response => resolve(response.data))\n      .catch(err => reject(err))\n  })\n}\n\n/**\n *  POST create a new contract for a client\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function createContract (nameClient, newContract) {\n  const url = back_url+'/client/'+nameClient+'/contract';\n  return new Promise((resolve, reject) => {\n    axios.post(url, newContract )\n      .then(response => resolve(response.data.result))\n      .catch(err => reject(err))\n  })\n}\n\n//------------------------------------------------ RESTAURANT -----------------------------------------------\n\n/**\n *  GET all the contracts for a client\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function getAllRestaurants (nameContract) {\n  return new Promise((resolve, reject) => {\n    axios.get(back_url+'/contract/'+nameContract+'/restaurants')\n      .then(response => resolve(response.data))\n      .catch(err => reject(err))\n  })\n}\n\n/**\n *  POST create a new contract for a client\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function createRestaurant (nameContract, newRestaurant) {\n  newRestaurant.accountCreated = false;\n  const url = back_url+'/contract/'+nameContract+'/restaurant';\n  return new Promise((resolve, reject) => {\n    axios.post(url, newRestaurant)\n      .then(response => resolve(response.data.result))\n      .catch(err => reject(err))\n  })\n}\n\n// ------------------------------------------------ FOOD ----------------------------------------------------\n\n/**\n *  GET all the contracts for a client\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function getFood (nameFood) {\n  console.log('IN get food api : ' + nameFood);\n  return new Promise((resolve, reject) => {\n    axios.get( back_url+'/food/'+nameFood )\n      .then(response => {\n        resolve(response.data)\n      })\n      .catch(err => {\n        console.log('ERROR in get food API : '+err)\n        reject(err)\n      })\n  })\n}\n\n/**\n *  GET all the contracts for a client\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function getFoodsOfCategories (nameCategory) {\n  console.log('IN get foodOfCategories api : ' + nameCategory);\n  return new Promise((resolve, reject) => {\n    axios.get( back_url+'/category/'+nameCategory+'/foods' )\n      .then(response => resolve(response.data))\n      .catch(err => reject(err))\n  })\n}\n\n\n// ---------------------------------------------- GASPILLAGE -------------------------------------------------\n\n/**\n *  GET all the samples for a restaurant, date and food\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function getGaspillageData (restaurantName, foodName, dateValue) {\n   console.log('in get gaspi API : '+foodName+' - '+dateValue);\n   return new Promise((resolve, reject) => {\n    axios.get(back_url+'/gaspillage/'+restaurantName, { params: { food: foodName, date: dateValue } })\n      .then(response => resolve(response.data))\n      .catch(err => reject(err))\n  })\n}\n\n\n/**\n *  GET all the samples for a restaurant and date\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function getAllSamplesForRestaurantAndDay (restaurantName, dateValue) {\n   //console.log('in get all samples API : '+dateValue);\n   return new Promise((resolve, reject) => {\n    axios.get(back_url+'/gaspillage/'+restaurantName, { params: { date: dateValue } })\n      .then(response => {\n        console.log('In result API sample :'+JSON.stringify(response.data, null, 2));\n        resolve(response.data)\n      })\n      .catch(err => reject(err))\n  })\n}\n\n\n/**\n *\n *\n */\n export function updateRestaurantAccountCreated (restaurantName) {\n   //console.log('in get all samples API : '+dateValue);\n   return new Promise((resolve, reject) => {\n    axios.put(back_url+'/restaurant/', { params: { name: restaurantName } })\n      .then(response => resolve(response.data))\n      .catch(err => reject(err))\n  })\n}\n\n\n// ------------------------------------ CATEGORIES ---------------------------------\n\n/**\n *\n *\n */\n export function getCategoriesName () {\n   console.log('in get all CATEGORIES API : ');\n   return new Promise((resolve, reject) => {\n    axios.get(back_url+'/categories/')\n      .then(response => resolve(response.data))\n      .catch(err => reject(err))\n  })\n}\n\n\nexport function getFoodById (idFood) {\n  console.log('in get food by id API : ');\n  return new Promise((resolve, reject) => {\n   axios.get(back_url+'/food/id/'+idFood)\n     .then(response => resolve(response.data))\n     .catch(err => reject(err))\n })\n}\n\n\n// ------------------------------ TRAY --------------------------------------\n\n/**\n *  GET all the samples for a restaurant, date and food\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function getAllTrayForRestraurantDay (restaurantName, dateValue) {\n   console.log('in get tray API : '+dateValue.format('YYYY-MM-DD'));\n   return new Promise((resolve, reject) => {\n    axios.get(back_url+'/'+restaurantName+'/tray', { params: { date: dateValue.format('YYYY-MM-DD') } })\n      .then(response => resolve(response.data.Count))\n      .catch(err => reject(err))\n  })\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"Graph_tooltip__1QyOO\"};","module.exports = __webpack_public_path__ + \"static/media/TopSideBar.bd95e180.png\";","import React from 'react';                    // REACT\nimport styles from './Form.module.css';       //CSS\n\nimport Form from 'react-bootstrap/Form';      //BOOTSTRAP\n\nfunction FormCheckboxElement(props) {\n\n  return(\n    <Form.Check type='checkbox'\n                className={styles.formCheck}\n                id={'checkbox-'+props.id}\n                name={ props.name }\n\n    >\n      <Form.Check.Input type='checkbox'\n                        name={ props.name }\n                        value={ props.value }\n                        onChange={ props.onChange }\n      />\n      <Form.Check.Label name={ props.name } className={styles.formLabel}> {props.label} </Form.Check.Label>\n    </Form.Check>\n  )\n}\n\nexport default FormCheckboxElement;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newContractContainer\":\"ContractForm_newContractContainer__2lDDj\",\"newContractForm\":\"ContractForm_newContractForm__8EdCL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ClientTopBarContainer\":\"ClientTopBar_ClientTopBarContainer__JJzKe\",\"bootstrapNavbar\":\"ClientTopBar_bootstrapNavbar__cX9s0\",\"barElement\":\"ClientTopBar_barElement__3Y8QI\",\"rightElements\":\"ClientTopBar_rightElements__3xeyv\",\"leftTopBar\":\"ClientTopBar_leftTopBar__3VqeH\",\"customNavLink\":\"ClientTopBar_customNavLink__2Hhfe\",\"image\":\"ClientTopBar_image__P6mWJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"globalContainer\":\"Account_globalContainer__2z0jB\",\"pageTitle\":\"Account_pageTitle__2K3K6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"globalContainer\":\"AdminGaspi_globalContainer__2SB6M\",\"btn-custom\":\"AdminGaspi_btn-custom__D3hl0\",\"FormElement\":\"AdminGaspi_FormElement__2mYhI\",\"formLabel\":\"AdminGaspi_formLabel__1LMIB\",\"graphElement\":\"AdminGaspi_graphElement__kD01u\",\"divGraph\":\"AdminGaspi_divGraph__Vg_Un\",\"dateDropDownTitles\":\"AdminGaspi_dateDropDownTitles__qHLZa\",\"formCheck\":\"AdminGaspi_formCheck__D3LVP\",\"dropdownDate\":\"AdminGaspi_dropdownDate__ZwFHq\",\"dropdownElement\":\"AdminGaspi_dropdownElement__IvydT\",\"iconStyle\":\"AdminGaspi_iconStyle__3snL6\",\"formItemTitle\":\"AdminGaspi_formItemTitle__3nkC6\",\"pageTitle\":\"AdminGaspi_pageTitle__mm8eQ\",\"centerRefresh\":\"AdminGaspi_centerRefresh__2WAA2\",\"centerComponent\":\"AdminGaspi_centerComponent__3BI-v\"};","module.exports = __webpack_public_path__ + \"static/media/Back_Connexion.5c0a1b82.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"adminSideBarContainer\":\"AdminSideBar_adminSideBarContainer__2Cux3\"};","import React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\nimport styles from './Graph.module.css'; //CSS\n\n// make sure parent container have a defined height when using responsive component,\n// otherwise height will be 0 and no chart will be rendered.\n// website examples showcase many properties, you'll often use just a few of them.\nconst Line = (props) => {\n\n  const toolTipElement = (tooltipProps) => {\n    console.log('IN TOOLTIP');\n\n    var foodIndex = props.allData.map( item => item.id ).indexOf(tooltipProps.point.serieId);\n    console.log('FOOD INDEX  = '+foodIndex);\n    var dateIndex = props.allData[foodIndex].data.map( item => item.x ).indexOf(tooltipProps.point.data.x);\n    console.log('THE INDEX : ' + dateIndex);\n\n    return (\n      <>\n      <div className={styles.tooltip}>\n        { tooltipProps.point.data.y }\n      </div>\n      {\n        /*\n        <div style={{backgroundColor: 'white'}}>\n          <> { tooltipProps.point.serieId } </>\n          <br/>\n          <>{ tooltipProps.point.data.x } : </> <> { tooltipProps.point.data.y } </>\n          <br/>\n          <> Moyenne : </> <> { tooltipProps.point.data.y==0 ? 0 :(tooltipProps.point.data.y / props.allData[foodIndex].data[dateIndex].tray).toFixed(2) } </>\n        </div>\n        */\n      }\n      </>\n    )\n  };\n\n  console.log('RERENDER THE LINE : '+JSON.stringify(props.data, null, 2));\n\n  return(\n    <ResponsiveLine\n    tooltip={toolTipElement}\n    isInteractive={true}\n    useMesh={true}\n    debugMesh={false}\n    data={props.data}\n    margin={{ top: 20, right: 50, bottom: 80, left: 60 }}\n    xScale={{ type: 'point' }}\n    yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\n    curve=\"linear\"\n    axisTop={null}\n    axisRight={null}\n    axisBottom={{\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'Temps',\n        legendOffset: 36,\n        legendPosition: 'middle'\n    }}\n    axisLeft={{\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: props.dataType,\n        legendOffset: -40,\n        legendPosition: 'middle'\n    }}\n    colors={{ scheme: 'nivo' }}\n    pointSize={11}\n    pointColor={{ theme: 'background' }}\n    pointBorderWidth={3}\n    pointBorderColor={{ from: 'serieColor', modifiers: [] }}\n    pointLabel=\"y\"\n    pointLabelYOffset={-12}\n    useMesh={true}\n    legends={[\n        {\n            anchor: 'bottom-left',\n            direction: 'row',\n            justify: false,\n            translateX: 0,\n            translateY: 72,\n            itemsSpacing: 0,\n            itemDirection: 'left-to-right',\n            itemWidth: 80,\n            itemHeight: 20,\n            itemOpacity: 0.75,\n            symbolSize: 12,\n            symbolShape: 'circle',\n            symbolBorderColor: 'rgba(0, 0, 0, .5)',\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemBackground: 'rgba(0, 0, 0, .03)',\n                        itemOpacity: 1\n                    }\n                }\n            ]\n        }\n    ]}\n/>\n\n);\n}\n\nexport default Line;\n\n\n/*\n\n<ResponsiveLine\n  data={props.data}\n  margin={{\n    top: 50,\n    right: 110,\n    bottom: 50,\n    left: 60\n  }}\n  xScale={{\n    type: 'point'\n  }}\n  yScale={{\n    type: 'linear',\n    stacked: false,\n    min: 'auto',\n    max: 'auto'\n  }}\n  minY=\"auto\"\n  maxY=\"auto\"\n  stacked={true}\n  curve=\"linear\"\n  axisBottom={{\n    orient: 'bottom',\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    legend: 'Temps',\n    legendOffset: 36,\n    legendPosition: 'middle'\n  }}\n  axisLeft={{\n    orient: 'left',\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    legend: 'Gaspillage en Kg',\n    legendOffset: -40,\n    legendPosition: 'middle'\n  }}\n  dotSize={10}\n  dotColor=\"inherit:darker(0.3)\"\n  dotBorderWidth={2}\n  dotBorderColor=\"#ffffff\"\n  enableDotLabel={true}\n  dotLabel=\"y\"\n  dotLabelYOffset={-12}\n  animate={true}\n  motionStiffness={90}\n  motionDamping={15}\n  isInteractive={true}\n  legends={[\n    {\n      anchor: 'bottom-right',\n      direction: 'column',\n      justify: false,\n      translateX: 100,\n      translateY: 0,\n      itemsSpacing: 0,\n      itemDirection: 'left-to-right',\n      itemWidth: 80,\n      itemHeight: 20,\n      itemOpacity: 0.75,\n      symbolSize: 12,\n      symbolShape: 'circle',\n      symbolBorderColor: 'rgba(0, 0, 0, .5)',\n      effects: [\n        {\n          on: 'hover',\n          style: {\n            itemBackground: 'rgba(0, 0, 0, .03)',\n            itemOpacity: 1\n          }\n        }\n      ]\n    }\n  ]}\n/>\n*/\n","import React from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\nimport styles from './Graph.module.css'; //CSS\n\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\nconst MyResponsiveBar = (props) => {\n\n  console.log('IN RENDER BAR !');\n  console.log('the BAR data : '+JSON.stringify(props.data, null, 2));\n  console.log('the BAR keys : '+JSON.stringify(props.keys, null, 2));\n\n  console.log('the BAR ALL DATA : '+JSON.stringify(props.allData, null, 2));\n\n\n  const keys = [props.keys.map( item => { return item.id } )];\n\n  const toolTipElement = (node) => {\n    console.log('IN TOOLTIP : '+JSON.stringify(node, null, 2));\n    var foodIndex = props.allData.map( item => item.id ).indexOf(node.id);\n    console.log('FOOD INDEX  = '+foodIndex);\n    var dateIndex = props.allData[foodIndex].data.map( item => item.x ).indexOf(node.indexValue);\n    console.log('THE INDEX : ' + dateIndex);\n\n    return (\n      <>\n      <div>\n        { node.value }\n      </div>\n      {\n        /*\n        <div style={{backgroundColor: 'white', display: 'none'}}>\n          <> { node.id } </>\n          <br/>\n          <>{ node.indexValue } : </> <>  </>\n          <br/>\n          <> Moyenne : </> <> { node.value==0 ? 0 :(node.value / props.allData[foodIndex].data[dateIndex].tray).toFixed(2) } </>\n        </div>\n        */\n      }\n\n      </>\n    )\n  };\n\n  return (\n    <ResponsiveBar\n        tooltip={ node => toolTipElement(node) }\n        data={props.data}\n        keys={ keys[0] }\n        indexBy=\"date\"\n        margin={{ top: 50, right: 30, bottom: 80, left: 60 }}\n        borderRadius={5}\n        padding={0.5}\n        groupMode=\"grouped\"\n        colors={{ scheme: 'nivo' }}\n        defs={[\n            {\n                id: 'dots',\n                type: 'patternDots',\n                background: 'inherit',\n                color: '#38bcb2',\n                size: 4,\n                padding: 1,\n                stagger: true\n            },\n            {\n                id: 'lines',\n                type: 'patternLines',\n                background: 'inherit',\n                color: '#eed312',\n                rotation: -45,\n                lineWidth: 6,\n                spacing: 10\n            }\n        ]}\n        fill={[\n            {\n                match: {\n                    id: 'fries'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'sandwich'\n                },\n                id: 'lines'\n            }\n        ]}\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Dates',\n            legendPosition: 'middle',\n            legendOffset: 32\n        }}\n        axisLeft={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Quantité',\n            legendPosition: 'middle',\n            legendOffset: -40\n        }}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n        legends={[\n            {\n                dataFrom: 'keys',\n                anchor: 'bottom-left',\n                direction: 'row',\n                justify: false,\n                translateX: 0,\n                translateY: 72,\n                itemsSpacing: 2,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemDirection: 'left-to-right',\n                itemOpacity: 0.85,\n                symbolSize: 20,\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n    />\n  )\n}\n\nexport default MyResponsiveBar;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"globalContainer\":\"ClientDashboard_globalContainer__3x1Gw\",\"dividongColumn\":\"ClientDashboard_dividongColumn__3fTTC\",\"dashboardElement\":\"ClientDashboard_dashboardElement__1r9TT\",\"dashboardBarChartGlobal\":\"ClientDashboard_dashboardBarChartGlobal__10u1J\",\"dashboardBarChart\":\"ClientDashboard_dashboardBarChart__1VnIl\",\"dashboardPieChartGlobal\":\"ClientDashboard_dashboardPieChartGlobal__1-K-N\",\"dashboardPieChart\":\"ClientDashboard_dashboardPieChart__3Cnrl\",\"bottomElement\":\"ClientDashboard_bottomElement__33BUA\",\"pageTitle\":\"ClientDashboard_pageTitle__1Xaw0\",\"barChartTitle\":\"ClientDashboard_barChartTitle__3y8WP\",\"pieChartTitle\":\"ClientDashboard_pieChartTitle__iBd1d\",\"dividerDiv\":\"ClientDashboard_dividerDiv__3gJIF\",\"nivoBarStyle\":\"ClientDashboard_nivoBarStyle__QH3j-\",\"percent\":\"ClientDashboard_percent__Mo_Fr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newRestaurant\":\"RestaurantForm_newRestaurant__34GUh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"restaurantDetails\":\"RestaurantDetails_restaurantDetails__3gMfy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContractDetails\":\"ContractDetails_ContractDetails__OXn6p\"};","module.exports = __webpack_public_path__ + \"static/media/image.8f676946.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"globalContainer\":\"Connexion_globalContainer__15cEr\",\"leftImage\":\"Connexion_leftImage__2I2iN\",\"svgDiv\":\"Connexion_svgDiv__3Mv6Z\",\"svg\":\"Connexion_svg__1H_Jz\",\"rigthForm\":\"Connexion_rigthForm__3flB7\",\"centerText\":\"Connexion_centerText__ZgICg\",\"title\":\"Connexion_title__35L61\",\"subtitle\":\"Connexion_subtitle__2daLX\",\"formElement\":\"Connexion_formElement__1vRFi\",\"submitButton\":\"Connexion_submitButton__3btbb\",\"centerComponent\":\"Connexion_centerComponent__PoTHX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageDiv\":\"ClientSideBar_imageDiv__4nHjN\",\"image\":\"ClientSideBar_image__1D7O7\",\"ClientSideBarContainer\":\"ClientSideBar_ClientSideBarContainer__2Sa-k\",\"ClientSideBarElement\":\"ClientSideBar_ClientSideBarElement__Gjhk-\",\"iconDiv\":\"ClientSideBar_iconDiv__2Ee1l\",\"iconDivWhenSelected\":\"ClientSideBar_iconDivWhenSelected__Qcdne\",\"textElement\":\"ClientSideBar_textElement__1SW39\",\"sameColorMark\":\"ClientSideBar_sameColorMark__2HZib\",\"whiteSelectedMark\":\"ClientSideBar_whiteSelectedMark__3cawb\",\"SelectedClientSideBarElement\":\"ClientSideBar_SelectedClientSideBarElement__1yZg8\",\"WhiteMark\":\"ClientSideBar_WhiteMark__35aze\"};","import React from 'react';\n\nconst Error = ({ touched, message }) => {\n  if (!touched) {\n    return null;\n  }\n  if (message) {\n    return <div style={{color: 'red'}} className='form-message invalid'> {message} </div>;\n  }\n  else {\n    return null;\n  }\n}\n\nexport default Error;\n"],"sourceRoot":""}