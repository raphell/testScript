{"version":3,"sources":["reducers/user.reducer.js","reducers/admin.reducer.js","reducers/client.reducer.js","reducers/navigation.reducer.js","reducers/reducers.js","store/store.js","actions/connexion.action.js","helper/authorizationHelper.js","actions/navigation.action.js","helper/routeHelper.js","helper/PrivateClientRoute.js","helper/PrivateAdminRoute.js","components/Display.js","components/connexion/Connexion.js","actions/admin.action.js","components/administration/home/ClientList.js","components/administration/topBar/AdminSideBar.js","components/client/dashboard/Bar.js","components/client/dashboard/Pie.js","actions/client.action.js","components/client/dashboard/DashboardElement.js","components/client/dashboard/ClientDashboard.js","components/administration/home/NewClientForm.js","components/administration/home/ContractForm.js","components/administration/home/RestaurantForm.js","components/administration/home/RestaurantDetail.js","components/administration/home/ContractDetail.js","components/administration/home/ClientDetails.js","components/administration/container/AdminContainer.js","components/client/topBar/ClientSideBar.js","components/client/topBar/ClientTopBar.js","components/client/account/ClientAccount.js","components/client/container/ClientContainer.js","App.js","serviceWorker.js","index.js","components/administration/home/ClientList.module.css","components/administration/gaspillage/Form.module.css","components/administration/home/ClientDetails.module.css","components/client/dashboard/DashboardElement.module.css","components/administration/gaspillage/FormRadioElement.js","components/administration/gaspillage/AdminGaspi.js","components/client/container/ClientContainer.module.css","components/administration/gaspillage/Graph.module.css","publics/TopSideBar.png","services/AdminAPI.js","components/administration/home/ContractForm.module.css","components/client/topBar/ClientTopBar.module.css","components/client/account/Account.module.css","components/administration/gaspillage/AdminGaspi.module.css","publics/Back_Connexion.png","components/administration/topBar/AdminSideBar.module.css","components/administration/gaspillage/Line.js","components/administration/gaspillage/Bar.js","components/client/dashboard/ClientDashboard.module.css","components/administration/home/RestaurantForm.module.css","components/administration/home/RestaurantDetails.module.css","components/administration/home/ContractDetails.module.css","publics/image.png","components/connexion/Connexion.module.css","components/administration/gaspillage/FormCheckboxElement.js","components/client/topBar/ClientSideBar.module.css","components/Common/ErrorFormField/ErrorFormField.js"],"names":["initialState","login","password","userType","isLogged","isLogging","redirection","userReducer","state","action","type","console","log","payload","clientList","currentClient","fetching","fetched","error","adding","pageMode","currentRestaurant","adminReducer","mode","data","length","clientIndex","push","newClient","contractList","Items","newContract","JSON","stringify","currentContract","restaurantList","newRestaurant","client","contract","restaurant","accountCreated","page","drillDownLevel","selectedMonth","selectedWeek","selectedDay","selectedCategory","dataType","rawData","clearData","displayedData","clientReducer","newPage","currentRestaurantName","navigationReducer","name","allReducers","combineReducers","applicationStore","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","updateRedirection","logged","isLoggingIn","getState","isLoggedIn","isClient","a","store","getChefAccount","accounts","dispatch","restaurantName","isAdmin","connexionState","getRedirectionClientPage","require","isUserClient","isUserAdmin","getRedirectionAdminPage","LoginRoute","props","component","to","connect","userState","useEffect","connecting","getComponentToDisplay","Display","withRouter","useDispatch","connectionValidationSchema","Yup","shape","required","handleSubmitForm","values","setSubmitting","resetForm","history","connexionRedirectPath","React","useState","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Container","fluid","Row","className","styles","globalContainer","Col","md","span","offset","leftImage","style","padding","svgDiv","svg","src","backgroundImage","alt","centerComponent","centerText","title","subtitle","enableReinitialize","initialValues","validationSchema","onSubmit","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","formElement","TextField","id","label","value","helperText","onChange","onBlur","fullWidth","color","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","onMouseDown","visibility","Button","submitButton","backgroundColor","border","borderRadius","fontFamily","fontSize","disabled","changePageMode","newMode","updateRestaurant","AdminHome","displayList","setDisplayList","setReturnNormal","Accordion","accordion","Toggle","as","eventKey","toggleElement","active","unactive","Collapse","collapseElement","listStyleType","map","item","index","newCurrentClientIndex","changeCurrentClient","newCurrentClient","clientElement","NameClient","changePage","adminSideBarContainer","ClientList","MyResponsiveBar","keys","allData","e","handleClick","indexBy","colors","customColor","margin","top","right","bottom","left","defs","background","size","stagger","rotation","lineWidth","spacing","fill","match","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","dataLegendLeftAxis","labelFormat","d","y","labelSkipWidth","labelSkipHeight","labelTextColor","animate","motionStiffness","motionDamping","MyResponsivePie","formatedData","startAngle","endAngle","innerRadius","padAngle","colorParam","borderWidth","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","theme","labels","text","changePageAction","updateDrillDown","newLevel","updateSelectedMonth","newMonth","updateSelectedWeek","newWeek","updateSelectedDay","newDay","updateSelectedCategory","newCategory","DashboardElement","global","height","Moment","moment","extendMoment","locale","clientState","adminState","getAllDates","Date","getFullYear","currentDate","startDay","startOf","endDay","allDates","clone","add","isBefore","getFoodValues","foodName","food","getFood","then","res","catch","err","getAllSamplesForDay","day","samples","getAllSamplesForRestaurantAndDay","format","getAllData","allRawData","mass","cost","co2","tray","inevitableMass","inevitableCost","inevitableCo2","months","allFoods","Map","allTrays","allCategories","sample","undefined","get","newFood","set","nameFood","newTray","trayId","foodValues","categoryFood","volumeSample","densityFood","co2Food","priceFood","newValues","volume","monthIndex","dateTimeSample","month","weeks","weekIndex","week","days","dayIndex","categories","categoryIndex","indexOf","foods","foodIndex","element","newAliment","Promise","resolve","reject","getTotalValue","graphValues","barColor","titleLegend","entries","monthName","monthValue","newBar","itemValue","toFixed","evitable","inevitable","graph","currentYear","year","startDate","firstDay","endOf","monthRange","range","by","mday","firstDate","indexWeek","weekValue","testDate","indexDay","itemDay","dayValue","categoryValue","foodValue","handleUpdateDataType","newType","updateDataType","pageTitle","dashboardElement","dividerDiv","width","dashboardBarChartGlobal","barChartTitle","variant","dashboardBarChart","Bar","nivoBarStyle","dashboardPieChartGlobal","pieChartTitle","dashboardPieChart","Pie","percent","parseInt","getPercentValue","ClientForm","useSelector","adressClient","emailClient","phoneClient","dateRegistrationClient","createClient","detailsContainer","now","Form","formContainer","Group","controlId","Label","Control","isValid","isInvalid","placeholder","ErrorFormField","societe","message","contratValidationSchema","nameContract","typeContract","startDateContract","handleAddContrat","currentName","clientName","createContract","newContractContainer","newContractForm","restaurantValidationSchema","nameRestaurant","adressRestaurant","handleAddRestaurant","contractName","contractIndex","createRestaurant","createAccount","setCreateAccount","restaurantIndex","accountValidationSchema","email","handleAddAccount","createAccountForRestaurant","updateRestaurantAccountCreated","restaurantDetails","adresspasswordRestaurant","ownProps","restaurants","addRestaurant","setAddRestaurant","getAllRestaurants","ContractDetails","addContrat","setAddContrat","getAllContracts","ContractForm","getAllClients","result","NewClientForm","AdminGaspi","displayPage","userEmail","ReturnElement","propElem","whiteSelectedMark","SelectedClientSideBarElement","iconDivWhenSelected","children","textElement","ClientSideBarElement","sameColorMark","iconDiv","ClientSideBarContainer","imageDiv","image","topSideBar","xmlns","viewBox","transform","data-name","fill-rule","Navbar","ClientTopBarContainer","inline","InputGroup","Prepend","Text","FormControl","aria-describedby","NavDropdown","chef","drop","Item","Divider","updatePasswordValidationSchema","oldPassword","newPassword","handlePassword","updateUserPassword","ContentBigRow","ClientTop","ContentDiv","exact","path","Connexion","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","FormRadioElement","Check","formCheck","Input","checked","currentValue","formLabel","setReady","rangeDataTitle","setRangeDataTitle","setType","legendType","setLegendType","finalFoodData","setFinalFoodData","finalData","setFinalData","setDisplayedData","displayedBarData","setDisplayedBarData","gaspillageValidationSchema","dateStart","dateEnd","min","endDate","getFoodsFromCategories","categoryList","categoriesFoods","category","getFoodsOfCategories","getFoods","foodList","storeFoodData","foodOfCategoriesLits","foodData","foodsOfCategories","getSamplesForCategories","samplesForCategories","foodsOfCategory","getSamplesForFoods","samplesForFoods","getSamplesForFood","samplesForFood","date","stringDate","getGaspillageData","indexSample","createDataFromFoodsSamples","foodsName","foodsSamples","foodsData","itemColor","dateIndex","totalVolume","totalMass","totalCost","totalCo2","numberOfTray","dataDay","x","createDataFromCategoriesSamples","categoriesName","categoriesSamples","categoriesData","categoryData","dateItem","aggregateData","timeScale","aggregatedData","indexLine","itemLine","currentWeek","weekData","indexData","newLineDataWeek","currentMonth","monthData","newLineDataMonth","createDisplayedData","dataTypeToDisplay","dataFinal","massData","dataItem","createBarData","co2Data","costData","trayData","barData","line","dataIndex","eval","categoryCheck","allFoodsOfCategories","foodCheck","concat","displayDatePickers","setDisplayDatePickers","CalendarIcon","SearchIcon","KnifeForkIcon","BarChartIcon","graphType","setFieldValue","FormElement","formItemTitle","ButtonGroup","dropdownElement","dropdownDate","classname","dateDropDownTitles","iconStyle","display","justifyContent","tag","split","Menu","marginTop","graphElement","divGraph","back_url","axios","params","accountType","post","response","old","new","put","sleep","milliseconds","nameClient","url","nameCategory","dateValue","config","update","Line","tooltip","tooltipProps","point","serieId","isInteractive","useMesh","debugMesh","xScale","yScale","max","stacked","reverse","curve","orient","scheme","pointSize","pointColor","pointBorderWidth","pointBorderColor","pointLabel","pointLabelYOffset","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","node","indexValue","toolTipElement","groupMode","legends","dataFrom","FormCheckboxElement","Error"],"mappings":"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","file":"static/js/main.6e30658e.chunk.js","sourcesContent":["const initialState = {\n  login: null,\n  password: null,\n  userType: null,     //can be 'chief' or 'director'\n  isLogged: false,\n  isLogging: false,\n  redirection: null,\n};\n\nconst userReducer = (state = initialState, action) => {\n\n  switch(action.type){\n    case 'CONNECTING':\n      console.log('USER REDUCER connecting');\n      return {\n        ...state,\n        isLogging: true,\n        login: action.payload.login,\n        password: action.payload.password\n      }\n      break;\n\n    case 'FAILED_CONNECT':\n      console.log('USER REDUCER failed connect');\n      return {\n        ...state,\n        isLogging: false,\n        login: null,\n        password: null\n      }\n      break;\n\n    case 'UPDATE_REDIRECTION':\n      console.log('USER REDUCER update direction = '+action.payload.redirection);\n      return {\n        ...state,\n        redirection: action.payload.redirection,\n      }\n      break;\n\n    case 'LOGGED':\n      console.log('USER REDUCER logged');\n      return {\n        ...state,\n        isLogged: true,\n        isLogging: false,\n        userType: action.payload.userType,\n      }\n      break;\n\n    case 'DISCONNECT':\n      console.log('In disconnect user')\n      return initialState;\n      break;\n\n    default:\n      return state;\n      break;\n  }\n}\n\nexport default userReducer;\n","const initialState = {\n  clientList: [],\n  currentClient: null,\n  fetching: false,\n  fetched: false,\n  error: null,\n  adding: false,\n  pageMode: 'createClient',\n  currentRestaurant: null,\n}\n\nconst adminReducer = (state = initialState, action) => {\n  switch(action.type){\n\n    //----------------------------- GET CLIENTS --------------------------------------\n\n    case 'GET_ALL_CLIENTS_START':\n    console.log('IN ADMIN REDUCER')\n      return {\n        ...state,\n        fetching: true\n      };\n      break;\n\n    case 'GET_ALL_CLIENTS_SUCCESS':\n    console.log('In get all client success');\n      const mode = action.data.length != 0 ? 'displayClient' : 'createClient';\n      return {\n        ...state,\n        fetching: false,\n        fetched: true,\n        clientList: action.data,\n        currentClient: 0,\n        pageMode: mode\n      };\n      break;\n\n    case 'GET_ALL_CLIENTS_ERROR':\n      console.log('In get all client error');\n      return {\n        ...state,\n        fetching: false,\n        fetched: false,\n        error: action.error\n      }\n      break;\n\n    case 'CHANGE_CURRENT_CLIENT':\n    console.log('IN ADMIN REDUCER')\n\n      return {\n        ...state,\n        currentClient: action.clientIndex,\n        pageMode: 'displayClient'\n      }\n      break;\n\n//----------------------------- CREATE CLIENTS --------------------------------------\n\n    case 'CREATE_CLIENT_START':\n      console.log('IN ADMIN REDUCER')\n\n      return {\n        ...state,\n        adding: true\n      };\n      break;\n\n    case 'CREATE_CLIENT_SUCCESS':\n      console.log('IN ADMIN REDUCER')\n\n      action.data.clientList.push(action.data.newClient)\n      return {\n        ...state,\n        adding: false,\n        clientList: action.data.clientList,\n        currentClient: action.data.clientList.length -1,\n        pageMode: 'displayClient'\n      };\n      break;\n\n    case 'CREATE_CLIENT_ERROR':\n      return {\n        ...state,\n        adding: false,\n        error: action.error\n      };\n      break;\n\n    case 'CREATE_MODE_ACTIVATED':\n      console.log('IN REDUCER CREATE client MODE')\n      return {\n        ...state,\n        pageMode: 'createClient'\n      };\n      break;\n\n//----------------------------- GET CONTRACTS --------------------------------------\n\n    case 'GET_CONTRACTS_SUCCESS':\n    console.log('IN ADMIN REDUCER')\n\n      action.clientList[action.currentClient].contractList = action.data.Items;\n      return {\n        ...state,\n        clientList: action.clientList\n      };\n      break;\n\n    case 'GET_CONTRACTS_ERROR':\n    console.log('IN ADMIN REDUCER')\n\n      return {\n        ...state,\n        error: action.error\n      }\n      break;\n\n//----------------------------- CREATE CONTRACT --------------------------------------\n\n    case 'CREATE_CONTRACT_SUCCESS':\n    console.log('IN ADMIN REDUCER')\n\n      action.clientList[action.currentClient].contractList.push(action.newContract);\n      console.log(JSON.stringify(action.clientList, null, 2));\n      return {\n        ...state,\n        clientList: action.clientList\n      };\n      break;\n\n    case 'CREATE_CONTRACT_ERROR':\n    console.log('IN ADMIN REDUCER')\n\n      return {\n        ...state,\n        error: action.error\n      };\n      break;\n\n\n//----------------------------- GET RESTAURANTS --------------------------------------\n\n    case 'GET_RESTAURANTS_SUCCESS':\n    console.log('IN ADMIN REDUCER')\n\n      action.clientList[action.currentClient].contractList[action.currentContract].restaurantList = action.data.Items;\n      return {\n        ...state,\n        clientList: action.clientList\n      };\n      break;\n\n    case 'GET_RESTAURANTS_ERROR':\n    console.log('IN ADMIN REDUCER')\n\n      return {\n        ...state,\n        error: action.error\n      }\n      break;\n\n//----------------------------- CREATE RESTAURANT --------------------------------------\n\n    case 'CREATE_RESTAURANT_SUCCESS':\n    console.log('IN ADMIN REDUCER')\n\n      action.clientList[action.currentClient].contractList[action.currentContract].restaurantList.push(action.newRestaurant);\n      console.log(JSON.stringify(action.clientList, null, 2));\n      return {\n        ...state,\n        clientList: action.clientList\n      };\n      break;\n\n    case 'CREATE_RESTAURANT_ERROR':\n      console.log('IN ADMIN REDUCER')\n\n      return {\n        ...state,\n        error: action.error\n      };\n      break;\n\n//----------------------------- CHANGE CURRENT RESTAURANT --------------------------------------\n\n    case 'CHANGE_CURRENT_RESTAURANT':\n    console.log('IN ADMIN REDUCER')\n\n      return {\n        ...state,\n        currentRestaurant: action.data\n      };\n      break;\n\n//----------------------------- CHANGE CURRENT PAGE MODE --------------------------------------\n\n    case 'CHANGE_PAGE_MODE':\n      console.log('IN REDUCER CHANGE PAGE MODE : '+action.data);\n\n      return {\n        ...state,\n        pageMode: action.data\n      };\n      break;\n\n//----------------------------- CHANGE CURRENT PAGE MODE --------------------------------------\n\n    case 'UPDATE_RESTAURANT':\n      console.log('IN REDUCER update restaurant : '+action.data);\n      action.data.clientList[action.data.client].contractList[action.data.contract].restaurantList[action.data.restaurant].accountCreated = true;\n      return {\n        ...state,\n        clientList: action.data.clientList\n      };\n      break;\n\n    case 'DISCONNECT':\n      console.log('In disconnect admin')\n      return initialState;\n      break;\n\n    default:\n      return state; break;\n  }\n}\n\nexport default adminReducer;\n","const initialState = {\n  currentRestaurant: null,\n  currentContract: null,\n  page: 'dashboard',\n  drillDownLevel: 'year',\n  selectedMonth: null,\n  selectedWeek: null,\n  selectedDay: null,\n  selectedCategory: null,\n  dataType: 'mass',\n  fetching: false,\n  fetched: false,\n  error: false,\n  rawData: null,\n  clearData: null,\n  displayedData: null\n}\n\nconst clientReducer = (state = initialState, action) => {\n  //console.log('TEST : '+JSON.stringify(state, null, 2));\n  switch(action.type){\n\n    case 'CHANGE_PAGE':\n      return {\n        ...state,\n        page: action.data.newPage\n      };\n      break;\n\n    case 'GET_RAW_DATA_START':\n      console.log('in reducer get raw data start, state = '+JSON.stringify({...state, fetching: true }, null, 2));\n      return {\n        ...state,\n        fetching: true\n      };\n      break;\n\n    case 'GET_RAW_DATA_SUCCESS':\n      return {\n        ...state,\n        fetching: false,\n        fetched: true,\n        rawData: action.data,\n      };\n      break;\n\n    case 'GET_RAW_DATA_ERROR':\n      return {\n        ...state,\n        fetching: false,\n        fetched: false,\n        error: action.error\n      }\n      break;\n\n    case 'UPDATE_DRILLDOWN':\n    console.log('Update drillDownLevel');\n      return {\n        ...state,\n        drillDownLevel: action.data\n      }\n      break;\n\n    case 'UPDATE_DATA_TYPE':\n      console.log('NEW DATATYPE : '+action.data);\n      return {\n        ...state,\n        dataType: action.data\n      }\n      break;\n\n    case 'UPDATE_MONTH':\n      return {\n        ...state,\n        selectedMonth: action.data\n      }\n      break;\n\n    case 'UPDATE_WEEK':\n      return {\n        ...state,\n        selectedWeek: action.data\n      }\n      break;\n\n    case 'UPDATE_DAY':\n      return {\n        ...state,\n        selectedDay: action.data\n      }\n      break;\n\n    case 'UPDATE_CATEGORY':\n      return {\n        ...state,\n        selectedCategory: action.data\n      }\n      break;\n\n    case 'DISCONNECT':\n      console.log('In disconnect client')\n      return initialState;\n      break;\n\n    default:\n      return state;\n      break;\n  }\n}\n\nexport default clientReducer;\n","const initialState = {\n  pageMode: 'dashboard',\n  currentRestaurantName: '',\n};\n\nconst navigationReducer = (state = initialState, action) => {\n\n  switch(action.type){\n    case 'UPDATE_PAGEMODE':\n      console.log('nav reducer update pagemode');\n      return {\n        ...state,\n        pageMode: action.payload.pageMode,\n      }\n      break;\n\n    case 'UPDATE_CURRENT_RESTAURANT_NAME':\n      console.log('nav reducer update current restaurant name');\n      return {\n        ...state,\n        currentRestaurantName: action.payload.name,\n      }\n      break;\n\n    case 'DISCONNECT':\n      console.log('In disconnect navigation')\n      return initialState;\n      break;\n\n    default:\n      return state;\n      break;\n  }\n}\n\nexport default navigationReducer;\n","import userReducer from './user.reducer';\nimport adminReducer from './admin.reducer';\nimport clientReducer from './client.reducer';\nimport navigationReducer from './navigation.reducer';\n\nimport {combineReducers} from 'redux';\n\nconst allReducers = combineReducers({\n  userReducer: userReducer,\n  adminReducer : adminReducer,\n  clientReducer: clientReducer,\n  navigationReducer: navigationReducer\n})\n\nexport default allReducers\n","import { createStore } from 'redux';\nimport allReducers from '../reducers/reducers'\n\nconst applicationStore = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default applicationStore;\n","export const connect = (login, password) => {\n  return {\n    type: 'CONNECTING',\n    payload: {\n      login: login,\n      password: password,\n    }\n  };\n};\n\nexport const failConnect = () => {\n  return {\n    type: 'FAILED_CONNECT',\n  };\n};\n\nexport const updateRedirection = (redirection) => {\n  return {\n    type: 'UPDATE_REDIRECTION',\n    payload: {\n      redirection: redirection,\n    }\n  };\n};\n\nexport const logged = (userType) => {\n  return {\n    type: 'LOGGED',\n    payload: {\n      userType: userType,\n    }\n  };\n};\n\nexport const disconnectAction = () => {\n  return {\n    type: 'DISCONNECT'\n  };\n};\n","//import { getToken } from '../services/token.service';\n//import decoder from 'jwt-decode';\nimport { useSelector, useDispatch } from 'react-redux';   //REDUX\nimport applicationStore from '../store/store';            //store\n\nimport { updateCurrentRestaurantName } from '../actions/navigation.action';\n\nimport { getChefAccount } from '../services/AdminAPI';\n\nconst isLoggingIn = () => {\n  console.log('In is logging in ?');\n  const state = applicationStore.getState();\n  const connexionState = state.userReducer;\n  return connexionState.isLogging;\n}\n\nconst isLoggedIn = () => {\n  console.log('In is logged in ?');\n  const state = applicationStore.getState();\n  const connexionState = state.userReducer;\n  return connexionState.isLogged;\n}\n\n\nconst isClient = async () => {\n  console.log('In is client ?');\n  const store = applicationStore.getState();\n  const accounts = await getChefAccount(store.userReducer.login, store.userReducer.password);\n  console.log('ACCOUNTS : '+JSON.stringify(accounts, null, 2));\n\n  if (accounts[0] != null){\n    applicationStore.dispatch(updateCurrentRestaurantName(accounts[0].restaurantName))\n    console.log('IS A CLIENT')\n    return true;\n  }\n  else {\n    console.log('NOT A CLIENT')\n    return false;\n  }\n}\n\nconst isAdmin = () => {\n  const state = applicationStore.getState();\n  const connexionState = state.userReducer;\n  if (connexionState.login=='admin' && connexionState.password=='adminMdp'){\n    console.log('IS A ADMIN')\n    return true;\n  }\n  else {\n    console.log('NOT A ADMIN')\n    return false;\n  }\n}\n\nexport { isLoggingIn, isLoggedIn, isClient, isAdmin };\n\n/*\ninterface IToken {\n  id: string,\n  first_name: string,\n  last_name: string,\n  role: string,\n  email: string\n}\n\nconst getTokenJson = (): IToken | null => {\n  const token = getToken();\n  if (token != null) {\n    const decoded = decoder<IToken>(token);\n    return decoded;\n  }\n  return null;\n};\n\nconst getRole = (): string | null => {\n  const decoded = getTokenJson();\n  if (typeof decoded == 'object' && decoded != null){\n    return decoded.role;\n  }\n  else\n    return null;\n};\n\nconst getEmail = (): string => {\n  const decoded = getTokenJson();\n  if (typeof decoded == 'object' && decoded != null)\n    return decoded.email;\n  else\n    return '';\n};\n\nconst getUsername = (): string | null => {\n  const decoded = getTokenJson();\n  if (typeof decoded == 'object' && decoded != null)\n    return decoded.last_name + ' ' + decoded.first_name;\n  else\n    return null;\n};\n\nconst getId = (): number => {\n  const decoded = getTokenJson();\n  let idString = '';\n  if (typeof decoded == 'object' && decoded != null)\n    idString = decoded.id;\n  try {\n    return parseInt(idString);\n  } catch{\n    return 0.1;\n  }\n};\n\n\nconst isLoggedIn = () => getToken() != null;\nconst isStudent = () => getRole() === 'eleve';\nconst isAdmin = () => getRole() === 'administration'|| getRole()==='professeur';\n\n\nexport { isLoggedIn, getUsername, getRole, isClient, isAdmin, getEmail, getId };\n*/\n","export const updateCurrentRestaurantName = (restaurantName) => {\n  return {\n    type: 'UPDATE_CURRENT_RESTAURANT_NAME',\n    payload: {\n      name: restaurantName,\n    }\n  };\n};\n","import React, { useEffect } from 'react';\n\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\nimport applicationStore from '../store/store';            //store\n\nimport { updateRedirection, logged, failConnect } from '../actions/connexion.action';\n\nimport { Redirect } from 'react-router-dom';\nimport { isAdmin, isClient, isLoggingIn, isLoggedIn } from './authorizationHelper';\nconst jc = require('json-cycle');\n\n//const dispatch = useDispatch();\n\nconst getRedirectionClientPage = async () => {\n  console.log('In get redirect client');\n  if (isLoggingIn()) {\n    console.log('is logging')\n    const isUserClient = await isClient();\n    const isUserAdmin = await isAdmin();\n    console.log('isclient value : '+isUserClient);\n    if (isUserClient){\n      console.log('Is a client');\n      applicationStore.dispatch(logged('chef'));\n      applicationStore.dispatch(updateRedirection(''));\n    }\n    else if (isUserAdmin) {\n      console.log('The USER is an ADMIN');\n      applicationStore.dispatch(logged('admin'));\n      applicationStore.dispatch(updateRedirection('/adminConsole'));\n    }\n    else {\n      console.log('CONNEXION FAILED, must return to connexion component');\n      applicationStore.dispatch(failConnect());\n      applicationStore.dispatch(updateRedirection('/connexion/client'));\n    }\n  }\n  else if (!isLoggedIn()) {\n    console.log('not logging');       // if the user didn't enter its credential we must display the connection page\n    applicationStore.dispatch(updateRedirection('/connexion/client'));\n  }\n};\n\nconst getRedirectionAdminPage = async () => {\n  console.log('In get redirect admin');\n  if (isLoggingIn()) {\n    const isUserClient = await isClient();\n    const isUserAdmin = await isAdmin();\n    if (isUserAdmin){\n      console.log('the USEr is a ADMIN');\n      applicationStore.dispatch(logged('admin'));\n      applicationStore.dispatch(updateRedirection(''));\n    }\n    else if (isUserClient) {\n      applicationStore.dispatch(logged('chef'));\n      applicationStore.dispatch(updateRedirection('/clientConsole'));\n    }\n    else {\n      console.log('CONNEXION FAILED, must return to connexion component');\n      applicationStore.dispatch(failConnect());\n      applicationStore.dispatch(updateRedirection('/connexion/client'));\n    }\n  }\n  else if (!isLoggedIn()) {\n    console.log('not logging');       // if the user didn't enter its credential we must display the connection page\n    applicationStore.dispatch(updateRedirection('/connexion/admin'));\n  }\n};\n\n\n// -------------------------------------------------------------------------------------------------------\n\n\nconst LoginRoute = (props) => {\n  //console.log('IN LOGGING ROUTE + '+JSON.stringify(jc.decycle(props.component), null, 2));\n  console.log('IN LOGGING ROUTE');\n  if (isLoggingIn() == false) {\n    console.log('Not logged in');\n    return props.component;\n  }\n  else {\n    console.log('Already logged in');\n    return <Redirect to=\"/clientConsole\" push/>;\n  }\n};\n\nexport { getRedirectionClientPage, getRedirectionAdminPage, LoginRoute };\n","import React, { useEffect } from 'react';\n\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\n\nimport { Redirect } from 'react-router-dom';\n\nimport { getRedirectionClientPage } from './routeHelper';\nimport { isAdmin, isClient, isLoggedIn } from './authorizationHelper';\n\n\nconst PrivateClientRoute = (props) => {\n  console.log('In private client route');\n\n  useEffect( () => {\n    console.log('In useEffect private client route');\n    if (!props.userState.isLogged) {\n      console.log('before get redirect client : '+JSON.stringify(props.userState, null, 2));\n      getRedirectionClientPage();\n    }\n  });\n\n  const getComponentToDisplay = () => {\n    console.log('In get component to display in priv route client');\n    const redirection = props.userState.redirection;\n    const connecting = props.userState.isLogging;\n    const userType = props.userState.userType;\n    console.log('Redirection is : _'+redirection+'_');\n\n    if (connecting) {\n      console.log('Must display wait for check');\n      return (<h1> WAITING TO CHECK CREDENTIALS </h1>);\n    }\n    else if (userType==='chef') {\n      console.log('The user is a chef');\n      return props.component;\n    }\n    else {\n      if (redirection == null) {\n        return (<h1> WAITING TO CHECK CREDENTIALS </h1>);\n      }\n      else {\n        console.log('Must display : '+redirection);\n        return <Redirect to={redirection} push/>;\n      }\n\n    }\n  }\n\n  return (\n    <>\n      {\n        getComponentToDisplay()\n      }\n    </>\n  )\n};\n\nfunction mapStateToProps(state) {\n  console.log('IN private client route map to state : '+JSON.stringify(state.userReducer, null, 2));\n  return {\n    userState: state.userReducer,\n  }\n}\n\nexport default connect(mapStateToProps)(PrivateClientRoute);\n","import React, { useEffect } from 'react';\n\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\n\nimport { Redirect } from 'react-router-dom';\n\nimport { getRedirectionAdminPage } from './routeHelper';\nimport { isAdmin, isClient, isLoggedIn } from './authorizationHelper';\n\n\nconst PrivateAdminRoute = (props) => {\n  console.log('In private admin route');\n\n  useEffect( () => {\n    console.log('In useEffect private admin route');\n    if (!props.userState.isLogged) {\n      console.log('before get redirect admin : '+JSON.stringify(props.userState, null, 2));\n      getRedirectionAdminPage();\n    }\n  });\n\n  const getComponentToDisplay = () => {\n    console.log('In get component to display in priv route admin');\n    const redirection = props.userState.redirection;\n    const connecting = props.userState.isLogging;\n    const userType = props.userState.userType;\n    console.log('Redirection is : _'+redirection+'_');\n\n    if (connecting) {\n      console.log('Must display wait for check');\n      return (<h1> WAITING TO CHECK CREDENTIALS </h1>);\n    }\n    else if (userType==='admin') {\n      console.log('The user is a chef');\n      return props.component;\n    }\n    else {\n      if (redirection == null) {\n        return (<h1> WAITING TO CHECK CREDENTIALS </h1>);\n      }\n      else {\n        console.log('Must display : '+redirection);\n        return <Redirect to={redirection} push/>;\n      }\n\n    }\n  }\n\n  return (\n    <>\n      {\n        getComponentToDisplay()\n      }\n    </>\n  )\n};\n\nfunction mapStateToProps(state) {\n  console.log('IN private admin route map to state : '+JSON.stringify(state.userReducer, null, 2));\n  return {\n    userState: state.userReducer,\n  }\n}\n\nexport default connect(mapStateToProps)(PrivateAdminRoute);\n","import React from 'react';\n\nfunction Display(props) {\n\n  return (\n    <div>\n        <p>\n          Repas : {props.repas.name}\n        </p>\n        <p>\n          Quantité : {props.repas.quantity}\n        </p>\n    </div>\n  );\n}\n\nexport default Display;\n","import React, { useState } from 'react';                    // REACT\nimport { withRouter } from \"react-router-dom\";              // ROUTER\nimport { useSelector, useDispatch } from 'react-redux';     // REDUX\n\nimport { connect } from '../../actions/connexion.action';   // ACTION\n\nimport Row from 'react-bootstrap/Row';              // BOOTSTRAP\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nimport FormLabel from '@material-ui/core/FormLabel';    // MATERIAL-UI\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nimport backgroundImage from '../../publics/Back_Connexion.png';\n\nimport { Formik } from 'formik';            // FORMIK\nimport * as Yup from 'yup';                 // YUP\n\nimport styles from './Connexion.module.css'   // CSS\n\nfunction ConnexionContainer(props) {\n\n  const dispatch = useDispatch();                         // create dispatcher\n\n  const connectionValidationSchema = Yup.object().shape({           // validation schema\n    login: Yup.string().required('Ce champ est obligatoire'),\n    password: Yup.string().required('Ce champ est obligatoire'),\n  });\n\n  const handleSubmitForm = async (values, {setSubmitting, resetForm}) => {      // submit form\n    setSubmitting(true);\n    console.log('SUBMIT VALUES : '+JSON.stringify(values, null, 2));\n    dispatch(connect(values.login, values.password));\n    props.history.push(props.connexionRedirectPath);\n    setSubmitting(false);\n  }\n\n  const [showPassword, setShowPassword] = React.useState(false);            // Show password state\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  console.log('The connexion container, props : '+props.connexionRedirectPath);\n\n  return(\n    <Container fluid>\n      <Row className={ styles.globalContainer }>\n\n        <Col md={{span: 7, offset: 0}} className={ styles.leftImage } style={{padding: '0px'}}>        {/* left image */}\n          <div className={styles.svgDiv}>\n            <img className={styles.svg} src={backgroundImage} alt=\"Bear\" />\n          </div>\n        </Col>\n\n        <Col md={{span: 5, offset: 0}}>         {/* rigth form */}\n          <div className={styles.centerComponent}>\n            <Row className=\"justify-content-md-center\">\n              <Col>\n                <div className={styles.centerText}>\n                  <h1 className={styles.title}> BIENVENUE </h1>                                           {/* title */}\n                  <p className={styles.subtitle}> Connectez vous pour accéder à vos données </p>\n                </div>\n              </Col>\n            </Row>\n\n            <br/>\n                                                                                                        {/* form */}\n            <Formik\n              enableReinitialize\n              initialValues={ { login: '',\n                                password: '' } }\n              validationSchema={ connectionValidationSchema }\n              onSubmit={ handleSubmitForm }\n            >\n              { ({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => {\n              return(\n                <div>\n                  <Row className=\"justify-content-md-center\">                                          {/* login */}\n                    <Col md={{span: 8, offset: 0}}>\n                      <div className={ styles.formElement }>\n                        <TextField id='login'\n                                  name='login'\n                                  label=\"Nom d'utilisateur\"\n                                  value={ values.login }\n                                  helperText={ errors.login && touched.login ? errors.login : '' }\n                                  error={ errors.login && touched.login ? true : false }\n                                  onChange={ handleChange }\n                                  onBlur={ handleBlur }\n                                  fullWidth\n                                  style={{color: '#666666'}}\n                        />\n                      </div>\n                    </Col>\n                  </Row>\n\n                  <Row className=\"justify-content-md-center\">                                          {/* password */}\n                    <Col md={{span: 8, offset: 0}}>\n                      <div className={ styles.formElement }>\n                        <TextField id='password'\n                                  type={showPassword ? 'text' : 'password'}\n                                  name='password'\n                                  label=\"Mot de passe\"\n                                  value={ values.password }\n                                  helperText={ errors.password && touched.password ? errors.password : '' }\n                                  error={ errors.password && touched.password ? true : false }\n                                  onChange={ handleChange }\n                                  onBlur={ handleBlur }\n                                  fullWidth\n                                  className={ styles.formElement }\n                                  InputProps={{\n                                    endAdornment:\n                                      <InputAdornment position=\"end\">\n                                        <IconButton\n                                          aria-label=\"toggle password visibility\"\n                                          onClick={handleClickShowPassword}\n                                          onMouseDown={handleMouseDownPassword}\n                                        >\n                                          {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\n                                        </IconButton>\n                                      </InputAdornment>\n                                  }}\n\n                        />\n                      </div>\n                    </Col>\n                  </Row>\n\n                  <br/>\n\n                  <Row style={{visibility: 'hidden'}} className=\"justify-content-md-center\">\n                    <Col md={{span: 3, offset: 0}}>\n                      <span className={styles.centerText}>\n                        Se souvenir de moi\n                      </span>\n                    </Col>\n                    <Col md={{span: 3, offset: 2}}>\n                      <span className={styles.centerText}>\n                        Mot de passe oublié\n                      </span>\n                    </Col>\n                  </Row>\n\n                  <br/>\n\n                  <Row className='row justify-content-center'>\n                      <Button className={styles.submitButton} style={{backgroundColor: '#90c261', border: '#90c261', borderRadius: '5px', fontFamily: 'Muli', fontSize: '18px'}} type='submit' onClick={handleSubmit} disabled={isSubmitting}> Se connecter </Button>\n                  </Row>\n                </div>\n              ) } }\n            </Formik>\n          </div>\n\n        </Col>\n\n      </Row>\n    </Container>\n  )\n}\n\nexport default withRouter(ConnexionContainer);\n","import { getAllClients } from '../services/AdminAPI';\n\n// ----------------------------- GET ALL THE CLIENTS ---------------------------------------\n\nexport function getAllClientStart () {\n  return { type: 'GET_ALL_CLIENTS_START' };\n}\n\nexport function getAllClientsSuccess (data) {\n  return {\n        type: 'GET_ALL_CLIENTS_SUCCESS',\n        data: data\n      };\n}\n\nexport function getAllClientsError (error) {\n  return {\n        type: 'GET_ALL_CLIENTS_ERROR',\n        error: error\n      };\n}\n\nexport function changeCurrentClient (newCurrentClientIndex) {\n  return {\n        type: 'CHANGE_CURRENT_CLIENT',\n        clientIndex: newCurrentClientIndex\n      };\n}\n\n// ----------------------------- CREATE A NEW CLIENT ---------------------------------------\n\nexport function changeModeToCreate() {\n  return { type: 'CREATE_MODE_ACTIVATED' };\n}\n\nexport function createClientStart () {\n  return { type: 'CREATE_CLIENT_START' };\n}\n\nexport function createClientSuccess (clientList, newClient) {\n  return {\n          type: 'CREATE_CLIENT_SUCCESS',\n          data: { clientList: clientList,\n                  newClient: newClient\n                }\n        };\n}\n\nexport function createClientError (error) {\n  return {\n          type: 'CREATE_CLIENT_ERROR',\n          error: error\n         };\n}\n\n// ----------------------------- GET ALL THE CONTRACTS FOR A CLIENT ---------------------------------------\n\nexport function getContractsSuccess (data, clientList, currentClient) {\n  return {\n        type: 'GET_CONTRACTS_SUCCESS',\n        data: data,\n        clientList: clientList,\n        currentClient: currentClient\n      };\n}\n\nexport function getContractsError (error) {\n  return {\n        type: 'GET_CONTRACTS_ERROR',\n        error: error\n      };\n}\n\n// ----------------------------- CREATE A NEW CONTRACT FOR A CLIENT ---------------------------------------\n\nexport function createContractSuccess (newContract, clientList, currentClient) {\n  return {\n          type: 'CREATE_CONTRACT_SUCCESS',\n          newContract: newContract,\n          clientList: clientList,\n          currentClient: currentClient\n        };\n}\n\nexport function createContractError (error) {\n  return {\n          type: 'CREATE_CONTRACT_ERROR',\n          error: error\n         };\n}\n\n// ----------------------------- GET ALL THE RESTAURANTS FOR A CONTRACT ---------------------------------------\n\nexport function getRestaurantsSuccess (data, clientList, currentClient, currentContract) {\n  return {\n        type: 'GET_RESTAURANTS_SUCCESS',\n        data: data,\n        clientList: clientList,\n        currentClient: currentClient,\n        currentContract: currentContract\n      };\n}\n\nexport function getRestaurantsError (error) {\n  return {\n        type: 'GET_RESTAURANTS_ERROR',\n        error: error\n      };\n}\n\n// ----------------------------- CREATE A NEW RESTAURANT FOR A CONTRACT ---------------------------------------\n\nexport function createRestaurantSuccess (newRestaurant, clientList, currentClient, currentContract) {\n  return {\n          type: 'CREATE_RESTAURANT_SUCCESS',\n          newRestaurant: newRestaurant,\n          clientList: clientList,\n          currentClient: currentClient,\n          currentContract: currentContract\n        };\n}\n\nexport function createRestaurantError (error) {\n  return {\n          type: 'CREATE_RESTAURANT_ERROR',\n          error: error\n         };\n}\n\n//------------------------------------- CHANGE THE CURRENT RESTAURANT ----------------------\n\nexport function changeCurrentRestaurant(newCurrentRestaurantName) {\n  return {\n    type: 'CHANGE_CURRENT_RESTAURANT',\n    data: newCurrentRestaurantName\n  }\n}\n\n//------------------------------------- CHANGE THE PAGE MODE ----------------------\n\nexport function changePageMode(newMode) {\n  return {\n    type: 'CHANGE_PAGE_MODE',\n    data: newMode\n  }\n}\n\n//------------------------------------- UPDATE RESTAURANT ----------------------\n\nexport function updateRestaurant(client, contract, restaurant, clientList) {\n  return {\n    type: 'UPDATE_RESTAURANT',\n    data: {\n      client: client,\n      contract: contract,\n      restaurant: restaurant,\n      clientList: clientList\n    }\n  }\n}\n","import React, { useState } from 'react';                //REACT\n\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\n\nimport { changeModeToCreate, changeCurrentClient } from '../../../actions/admin.action';  //ACTIONS\n\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nimport styles from './ClientList.module.css'    //CSS\n\nfunction AdminHome(props) {\n\n  const dispatch = useDispatch();\n  const [displayList, setDisplayList] = useState(false);\n  const [returnNormal, setReturnNormal] = useState(false);\n\n  const newCurrentClient = (event, newCurrentClientIndex) => {\n    event.preventDefault();\n    console.log('IN change current');\n    dispatch(changeCurrentClient(newCurrentClientIndex));\n  };\n\n  const addNewClient = (event) => {\n    event.preventDefault();\n    console.log('IN create new client');\n    dispatch(changeModeToCreate());\n  };\n\n  const selectToggle = (event) => {\n    setReturnNormal(displayList);\n    setDisplayList(!displayList);\n  }\n\n  console.log('Before render client list');\n  return(\n    <Row>\n        <Accordion className={styles.accordion}>\n        \n          <Accordion.Toggle as={Col} eventKey=\"0\" className={styles.toggleElement} onClick={selectToggle}>\n            <Row >\n              <Col md='6'> <strong> Client list </strong> </Col>\n              <Col md={{offset: 4}} > <strong className={displayList ? styles.active : styles.unactive }> &#8250; </strong> </Col>\n            </Row>\n          </Accordion.Toggle>\n\n          <Accordion.Collapse eventKey=\"0\" className={styles.collapseElement}>\n            <ul style={{listStyleType: 'none'}}>\n              {\n                props.clientList.map( (item, index) => (\n                  <li onClick={ (event) => newCurrentClient(event, index) } className={styles.clientElement}> { item.NameClient } </li>\n                ))\n              }\n              <li onClick={ addNewClient }> + Add new client </li>\n            </ul>\n          </Accordion.Collapse>\n\n        </Accordion>\n    </Row>\n  )\n}\n\nexport default AdminHome;\n","import React from 'react';              //REACT\n\nimport { useSelector, useDispatch, connect } from 'react-redux';    //REDUX\n\nimport { changePageMode } from '../../../actions/admin.action';\n\nimport Row from 'react-bootstrap/Row'   //BOOTSTRAP\nimport Col from 'react-bootstrap/Col'\n\nimport ClientList from '../home/ClientList';  //COMPONENTS\n\nimport styles from './AdminSideBar.module.css' //CSS\n\nfunction AdminSideBar(props) {\n\n  const dispatch = useDispatch();\n\n  const changePage = (newPage) => {\n    dispatch(changePageMode(newPage));\n  };\n\n  console.log('Before render adminSideBar');\n  return(\n    <Col md='12' className={styles.adminSideBarContainer}>\n        <b> Kikleo </b>\n\n        <div id='topbarTitle'>\n          <b> ADMINISTRATION CONSOLE </b>\n        </div>\n\n        <div id='topbarDeconnexion'>\n          Déconnexion\n        </div>\n\n        <ClientList clientList={ props.clientList }/>\n\n        {\n          props.currentRestaurant != null ?\n            <>\n              <div onClick={ () => changePage('dashboard') }>\n                Tableau de bord\n              </div>\n\n              <div onClick={ () => changePage('stat') }>\n                Mes statistiques\n              </div>\n\n              <div onClick={ () => changePage('advice') }>\n                Mon espace conseil\n              </div>\n\n              <div onClick={ () => changePage('restaurant') }>\n                Mon restaurant\n              </div>\n            </>\n          :\n            <>\n            </>\n        }\n    </Col>\n  )\n}\n\nfunction mapStateToProps(state) {\n  console.log('IN adminSideBar map to state : '+state.adminReducer);\n  return {\n    clientList: state.adminReducer.clientList,\n    currentRestaurant: state.adminReducer.currentRestaurant,\n  }\n}\n\nexport default connect(mapStateToProps)(AdminSideBar);\n","import React from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\n\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\nconst MyResponsiveBar = (props) => {\n\n  console.log('IN RENDER BAR !');\n  console.log('the BAR data : '+JSON.stringify(props.data, null, 2));\n  console.log('the BAR keys : '+JSON.stringify(props.keys, null, 2));\n  console.log('the BAR index : '+JSON.stringify(props.index, null, 2));\n  console.log('the BAR ALL DATA : '+JSON.stringify(props.allData, null, 2));\n\n\n  //const keys = [props.keys.map( item => { return item.id } )];\n\n  const toolTipElement = (node) => {\n    console.log('IN TOOLTIP : '+JSON.stringify(node, null, 2));\n    var foodIndex = props.allData.map( item => item.id ).indexOf(node.id);\n    console.log('FOOD INDEX  = '+foodIndex);\n    var dateIndex = props.allData[foodIndex].data.map( item => item.x ).indexOf(node.indexValue);\n    console.log('THE INDEX : ' + dateIndex);\n\n    return (\n      <>\n      <div>\n        { node.value }\n      </div>\n      {\n        /*\n        <div style={{backgroundColor: 'white', display: 'none'}}>\n          <> { node.id } </>\n          <br/>\n          <>{ node.indexValue } : </> <> { node.value } </>\n          <br/>\n          <> Moyenne : </> <> { node.value==0 ? 0 :(node.value / props.allData[foodIndex].data[dateIndex].tray).toFixed(2) } </>\n        </div>\n        */\n      }\n      </>\n    )\n  };\n\n  const getBarColor = () => {\n    console.log('THE COLOR : '+JSON.stringify(props, null, ));\n    return props.customColor;\n  };\n\n  return (\n    <ResponsiveBar\n        onClick={ (e) => props.handleClick(e) }\n        data={ props.data }\n        keys={ [props.keys] }\n        indexBy={props.index}\n        colors={getBarColor}\n        borderRadius={5}\n        padding={0.5}\n        margin={{ top: 50, right: 30, bottom: 50, left: 80 }}\n        defs={[\n            {\n                id: 'dots',\n                type: 'patternDots',\n                background: 'inherit',\n                color: '#38bcb2',\n                size: 4,\n                padding: 1,\n                stagger: true\n            },\n            {\n                id: 'lines',\n                type: 'patternLines',\n                background: 'inherit',\n                color: '#eed312',\n                rotation: -45,\n                lineWidth: 6,\n                spacing: 10\n            }\n        ]}\n        fill={[\n            {\n                match: {\n                    id: 'fries'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'sandwich'\n                },\n                id: 'lines'\n            }\n        ]}\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: '',\n            legendPosition: 'middle',\n            legendOffset: 32\n        }}\n        axisLeft={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: props.dataLegendLeftAxis,\n            legendPosition: 'middle',\n            legendOffset: -50\n        }}\n        labelFormat={d => <tspan y={ -10 }>{ d }</tspan>}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n    />\n  )\n}\n\nexport default MyResponsiveBar;\n","import React from 'react';\nimport { ResponsivePie } from '@nivo/pie'\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\nconst MyResponsivePie = ({ data /* see data tab */ }) => {\n\n  console.log('IN THE PIEEEEEEEEEEEEE : '+JSON.stringify(data, null, 2));\n\n  const theme = {\n    labels: {\n      text: {\n        fontSize: '15px',\n      }\n    }\n  };\n\n  const formatedData = [\n    data[1],\n    data[0]\n  ];\n\n  const getColors = (colorParam) => {\n    if (colorParam.id == 'Non_évitable') {\n      return '#90c261';\n    }\n    else {\n      return '#f7d426';\n    }\n  }\n\n  return (\n    <ResponsivePie\n        data={formatedData}\n        margin={{ top: 30, right: 20, bottom: 10, left: 20 }}\n        startAngle={90}\n        endAngle={-90}\n        innerRadius={0.6}\n        padAngle={0.7}\n        colors={ getColors }\n        borderWidth={1}\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n        radialLabelsSkipAngle={0}\n        radialLabelsTextXOffset={6}\n        radialLabelsTextColor=\"#333333\"\n        radialLabelsLinkOffset={0}\n        radialLabelsLinkDiagonalLength={16}\n        radialLabelsLinkHorizontalLength={24}\n        radialLabelsLinkStrokeWidth={1}\n        radialLabelsLinkColor={{ from: 'color' }}\n        slicesLabelsSkipAngle={0}\n        slicesLabelsTextColor=\"#333333\"\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n        theme={theme}\n        defs={[\n            {\n                id: 'dots',\n                type: 'patternDots',\n                background: 'inherit',\n                color: 'rgba(255, 255, 255, 0.3)',\n                size: 4,\n                padding: 1,\n                stagger: true\n            },\n            {\n                id: 'lines',\n                type: 'patternLines',\n                background: 'inherit',\n                color: 'rgba(255, 255, 255, 0.3)',\n                rotation: -45,\n                lineWidth: 6,\n                spacing: 10\n            }\n        ]}\n        fill={[\n            {\n                match: {\n                    id: 'ruby'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'c'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'go'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'python'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'scala'\n                },\n                id: 'lines'\n            },\n            {\n                match: {\n                    id: 'lisp'\n                },\n                id: 'lines'\n            },\n            {\n                match: {\n                    id: 'elixir'\n                },\n                id: 'lines'\n            },\n            {\n                match: {\n                    id: 'javascript'\n                },\n                id: 'lines'\n            }\n        ]}\n        \n    />\n  )\n}\n\nexport default MyResponsivePie;\n","export function changePageAction (data) {\n  return {\n        type: 'CHANGE_PAGE',\n        data: {\n                newPage: data\n              }\n      };\n};\n\nexport function getRawDataStart () {\n  return { type: 'GET_RAW_DATA_START' };\n};\n\nexport function getRawDataSuccess (data) {\n  return {\n        type: 'GET_RAW_DATA_SUCCESS',\n        data: data\n      };\n};\n\nexport function getRawDataError (error) {\n  return {\n        type: 'GET_RAW_DATA_ERROR',\n        error: error\n      };\n};\n\nexport function updateDrillDown (newLevel) {\n  return {\n        type: 'UPDATE_DRILLDOWN',\n        data: newLevel\n      };\n};\n\nexport function updateSelectedMonth (newMonth) {\n  return {\n        type: 'UPDATE_MONTH',\n        data: newMonth\n      };\n};\n\nexport function updateSelectedWeek (newWeek) {\n  return {\n        type: 'UPDATE_WEEK',\n        data: newWeek\n      };\n};\n\nexport function updateSelectedDay (newDay) {\n  return {\n        type: 'UPDATE_DAY',\n        data: newDay\n      };\n};\n\nexport function updateSelectedCategory (newCategory) {\n  return {\n        type: 'UPDATE_CATEGORY',\n        data: newCategory\n      };\n};\n\nexport function updateDataType (newType) {\n  return {\n        type: 'UPDATE_DATA_TYPE',\n        data: newType\n      };\n};\n","import React from 'react';                    // REACT\n\nimport Row from 'react-bootstrap/Row';              // BOOTSTRAP\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\n\nimport styles from './DashboardElement.module.css'   // CSS\n\nfunction DashboardElement(props) {\n\n  console.log('The dashboard element, props : '+props.connexionRedirectPath);\n\n  return(\n    <div className={styles.global}>\n\n        <div style={{color: props.color, height: '20%'}}>\n          <div className={styles.title}>\n            {props.title}\n          </div>\n        </div>\n\n        <div className={styles.centerComponent} style={{color: props.color}}>\n          <div className={styles.value}>\n            {props.value}\n          </div>\n          <div className={styles.legend}>\n            {props.legend}\n          </div>\n        </div>\n\n    </div>\n  )\n}\n\nexport default DashboardElement;\n\n/*\n\n<div style={{color: props.color, height:'20%'}}>\n  <div className={styles.title}>\n    {props.title}\n  </div>\n</div>\n\n<div className='centerComponent' style={{color: props.color}}>\n  <div className={styles.value}>\n    {props.value}\n  </div>\n</div>\n<div style={{color: '#a0a0a0'}}>\n  <div className={styles.legend}>\n    {props.legend}\n  </div>\n</div>\n\n*/\n","import React, { useEffect } from 'react';\n\nimport Bar from './Bar';\nimport Pie from './Pie';\n\nimport { useDispatch, connect } from 'react-redux';           //REDUX\nimport { getRawDataStart, getRawDataSuccess, getRawDataError, updateDrillDown, updateDataType, updateSelectedMonth, updateSelectedWeek, updateSelectedDay, updateSelectedCategory } from '../../../actions/client.action';  //ACTIONS\n\nimport { getFood, getAllSamplesForRestaurantAndDay } from '../../../services/AdminAPI';           //API FUNCTIONS\n\nimport DashboardElement from './DashboardElement';      // COMPONENTS\n\nimport Row from 'react-bootstrap/Row';   //BOOTSTRAP\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nimport styles from './ClientDashboard.module.css'   // CSS\n\nconst Moment = require('moment');\nconst MomentRange = require('moment-range');\n\nconst moment = MomentRange.extendMoment(Moment);\nmoment.locale('fr');\n\nfunction ClientDashboard(props) {\n\n  const dispatch = useDispatch();\n\n  const getAllDates = () => {                         // ------------- get all dates\n    //console.log('Begin get all dates');\n    const year = new Date().getFullYear();\n    const currentDate = new Date();\n    const startDay = moment().startOf('year');\n    const endDay = moment(currentDate);\n\n    const allDates = [];\n    allDates.push(startDay.clone());\n    while( (startDay.add(1, 'days')).isBefore(endDay) ){\n      allDates.push( startDay.clone() );\n    }\n    allDates.push( endDay.clone() );\n    //console.log('All dates : '+JSON.stringify(allDates, null, 2));\n    return allDates;\n  }\n\n  const getFoodValues = async (foodName) => {                  // ------------- get food values\n    //console.log('In get food values');\n    var food = null;\n    await getFood(foodName)\n      .then (res => {\n        //console.log('In then get food values : '+JSON.stringify(res, null, 2));\n        food = res.Items[0];\n      })\n      .catch( err => {\n        console.log('ERROR in get food values : '+err);\n      })\n    //console.log('The food values : '+JSON.stringify(food, null, 2));\n    return food;\n  }\n\n  const getAllSamplesForDay = async (restaurant, day) => {              // ------------- get all samples for date\n    //console.log('In get all samples for day - '+day);\n    var samples = null;\n    /*const samples = getAllSamplesForRestaurantAndDay(restaurant, day.format('YYYY-MM-DD'));\n    console.log('The samples : '+JSON.stringify(samples, null, 2));\n    return samples;*/\n    await getAllSamplesForRestaurantAndDay(restaurant, day.format('YYYY-MM-DD'))\n      .then( res => {\n        //console.log('In then get all samples for - ' +day.format('YYYY-MM-DD')/*+ ': '+JSON.stringify(res, null, 2)*/);\n        samples = res.Items;\n      })\n      .catch( err => {\n        console.log('In catch error get all samples : '+JSON.stringify(err, null, 2));\n      })\n    //console.log('The samples of the day : '+JSON.stringify(samples, null, 2));\n    return samples;\n  }\n\n  const getAllData = async () => {                                // ------------- get all raw data\n    console.log('In get all raw data')\n    var allRawData= {\n      mass: 0,\n      cost: 0,\n      co2: 0,\n      tray: 0,\n      inevitableMass: 0,\n      inevitableCost: 0,\n      inevitableCo2: 0,\n      months: []\n    };\n    const allDates = getAllDates();\n    const allFoods = new Map();\n    const allTrays = new Map();\n    const allCategories = ['Proteine','Legume','Fruit','Feculent','Crudite','Fromage','Dessert','Plats_compose','Pain'];\n\n    for (const day of allDates) {\n      //console.log('In for get all samples far : '+day);\n      const samples = await getAllSamplesForDay(props.restaurantName, day);\n      for (const sample of samples) {\n        //console.log('The scurrent sample : '+JSON.stringify(sample, null, 2));\n        if (allFoods.get(sample.foodName) == undefined) {   // create the food values if needed\n          const newFood = await getFoodValues(sample.foodName);\n          allFoods.set(newFood.nameFood, newFood);\n        }\n\n        var newTray = 0;\n        if (allTrays.get(sample.trayId) == undefined) {\n          allTrays.set(samples.trayId, 1);\n          newTray = 1;\n        }\n        //console.log('ALL the food values : '+JSON.stringify(allFoods, null, 2));\n        const foodValues = allFoods.get(sample.foodName);   // get the food values\n        //console.log('The food values : '+JSON.stringify(foodValues, null, 2));\n        var inevitableMass = 0;\n        var inevitableCost = 0;\n        var inevitableCo2 = 0;\n        if (foodValues.categoryFood == 'Os' || foodValues.categoryFood == 'Peau') {\n          inevitableMass = (sample.volumeSample * foodValues.densityFood);\n          inevitableCo2 = ((sample.volumeSample * foodValues.densityFood) * (foodValues.co2Food + (204.97/1000000)));\n          inevitableCost = (((sample.volumeSample * foodValues.densityFood) * (foodValues.priceFood/1000))*2.5);\n        }\n        const newValues = {                                 // create the new values\n          food: sample.foodName,\n          volume: sample.volumeSample,\n          mass: (sample.volumeSample * foodValues.densityFood),\n          co2: ((sample.volumeSample * foodValues.densityFood) * (foodValues.co2Food + (204.97/1000000))),\n          cost: (((sample.volumeSample * foodValues.densityFood) * (foodValues.priceFood/1000))*2.5),\n          inevitableMass: inevitableMass,\n          inevitableCost: inevitableCost,\n          inevitableCo2: inevitableCo2\n        }\n        //console.log('INEVITABLE : '+newValues.inevitable);\n\n        allRawData.mass += newValues.mass;        // update year values\n        allRawData.cost += newValues.cost;\n        allRawData.co2 += newValues.co2;\n        allRawData.inevitableMass += newValues.inevitableMass;\n        allRawData.inevitableCost += newValues.inevitableCost;\n        allRawData.inevitableCo2 += newValues.inevitableCo2;\n        allRawData.tray += newTray;\n\n        const monthIndex = moment(sample.dateTimeSample).month();\n        if (allRawData.months[monthIndex] == undefined){      // get or create month\n          allRawData.months[monthIndex] = {\n            index: moment(sample.dateTimeSample).format('MMMM'),\n            mass: 0,\n            cost: 0,\n            co2: 0,\n            tray: 0,\n            inevitableMass: 0,\n            inevitableCost: 0,\n            inevitableCo2: 0,\n            weeks: []\n          };\n        }\n        allRawData.months[monthIndex].mass += newValues.mass;         //update the month values\n        allRawData.months[monthIndex].cost += newValues.cost;\n        allRawData.months[monthIndex].co2 += newValues.co2;\n        allRawData.months[monthIndex].inevitableMass += newValues.inevitableMass;\n        allRawData.months[monthIndex].inevitableCost += newValues.inevitableCost;\n        allRawData.months[monthIndex].inevitableCo2 += newValues.inevitableCo2;\n        allRawData.months[monthIndex].tray += newTray;\n\n        const weekIndex = moment(sample.dateTimeSample).week() - moment(sample.dateTimeSample).startOf('month').week();\n        if (allRawData.months[monthIndex].weeks[weekIndex] == undefined){ // get or create week\n          allRawData.months[monthIndex].weeks[weekIndex] = {\n            index: weekIndex +' - '+ sample.dateTimeSample,\n            mass: 0,\n            cost: 0,\n            co2: 0,\n            tray: 0,\n            inevitableMass: 0,\n            inevitableCost: 0,\n            inevitableCo2: 0,\n            days: []\n          };\n        }\n        allRawData.months[monthIndex].weeks[weekIndex].mass += newValues.mass;    //update the week valus\n        allRawData.months[monthIndex].weeks[weekIndex].cost += newValues.cost;\n        allRawData.months[monthIndex].weeks[weekIndex].co2 += newValues.co2;\n        allRawData.months[monthIndex].weeks[weekIndex].inevitableMass += newValues.inevitableMass;\n        allRawData.months[monthIndex].weeks[weekIndex].inevitableCost += newValues.inevitableCost;\n        allRawData.months[monthIndex].weeks[weekIndex].inevitableCo2 += newValues.inevitableCo2;\n        allRawData.months[monthIndex].weeks[weekIndex].tray += newTray;\n\n        const dayIndex = moment(sample.dateTimeSample).day()-1; // -1 because with moment sunday is 0\n        if (allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex] == undefined){ // get or create day\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex] = {\n            index: moment(sample.dateTimeSample).format('dddd'),\n            mass: 0,\n            cost: 0,\n            co2: 0,\n            tray: 0,\n            inevitableMass: 0,\n            inevitableCost: 0,\n            inevitableCo2: 0,\n            categories: []\n          };\n        }\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].mass += newValues.mass;    //update the day valus\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].cost += newValues.cost;\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].co2 += newValues.co2;\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].inevitableMass += newValues.inevitableMass;\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].inevitableCost += newValues.inevitableCost;\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].inevitableCo2 += newValues.inevitableCo2;\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].tray += newTray;\n\n        const categoryIndex = allCategories.indexOf(allFoods.get(sample.foodName).categoryFood);\n        if (allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex] == undefined){ // get or create category\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex] = {\n            index: allFoods.get(sample.foodName).categoryFood,\n            mass: 0,\n            cost: 0,\n            co2: 0,\n            tray: 0,\n            inevitableMass: 0,\n            inevitableCost: 0,\n            inevitableCo2: 0,\n            foods: []\n          };\n        }\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].mass += newValues.mass;    //update the category valus\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].cost += newValues.cost;\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].co2 += newValues.co2;\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].inevitableMass += newValues.inevitableMass;\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].inevitableCost += newValues.inevitableCost;\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].inevitableCo2 += newValues.inevitableCo2;\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].tray += newTray;\n\n        var foodIndex = allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods.map(element => element.food).indexOf(sample.foodName);\n        if(foodIndex == -1) {\n          const newAliment = {\n            food: sample.foodName,\n            index: sample.foodName,\n            mass: 0,\n            cost: 0,\n            co2: 0,\n            tray: 0,\n            inevitableMass: 0,\n            inevitableCost: 0,\n            inevitableCo2: 0,\n          };\n          allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods.push(newAliment);\n        }\n        foodIndex = allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods.map(element => element.food).indexOf(sample.foodName);\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods[foodIndex].mass += newValues.mass;    //update the food valus\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods[foodIndex].cost += newValues.cost;\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods[foodIndex].co2 += newValues.co2;\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods[foodIndex].inevitableMass += newValues.inevitableMass;\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods[foodIndex].inevitableCost += newValues.inevitableCost;\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods[foodIndex].inevitableCo2 += newValues.inevitableCo2;\n        allRawData.months[monthIndex].weeks[weekIndex].days[dayIndex].categories[categoryIndex].foods[foodIndex].tray += newTray;\n      }\n    }\n    return new Promise ( (resolve, reject) => {\n      console.log('in new promise');\n      resolve(allRawData);\n    } );\n  }\n\n  const getTotalValue = () => {                                                                 // GET TOTAL VALUE\n    console.log('IN GET TOTAL VALUE');\n    const graphValues = [];\n    const rawData = props.clientState.rawData;\n    const selectedMonth = props.clientState.selectedMonth;\n    const selectedWeek = props.clientState.selectedWeek;\n    const selectedDay = props.clientState.selectedDay;\n    const selectedCategory = props.clientState.selectedCategory;\n    var legend = '';\n    var barColor = null;\n    switch (props.clientState.dataType) {\n      case 'mass':\n        legend = 'Quantité (kg)';\n        barColor = '#90c261';\n        break;\n      case 'cost':\n        legend = 'Coût (€)';\n        barColor = '#54b0e3';\n        break;\n      case 'co2':\n        legend = 'GES CO2';\n        barColor = '#f7d426';\n        break;\n      case 'tray':\n        legend = 'Nombre de plateau';\n        barColor = '#666666';\n        break;\n      default:\n        legend = 'Quantité';\n        break;\n\n    };\n    switch (props.clientState.drillDownLevel) {\n      case 'year':                                                // DRILLDOWN YEAR\n      var titleLegend = 'Année '+moment().format('YYYY');\n        for (const [monthIndex, monthName] of ['Jan', 'Fév', 'Mars', 'Avl', 'Mai', 'Juin', 'Jui', 'Août', 'Sept', 'Oct', 'Nov', 'Déc'].entries()){\n          const monthValue = rawData.months[monthIndex];\n          var newBar = null;\n          if (monthValue == undefined || monthValue==null) {\n            newBar = {\n              index: monthName,\n              value: 0\n            };\n          }\n          else {\n            var itemValue = null;\n            switch (props.clientState.dataType) {\n              case 'mass':\n                itemValue = (monthValue.mass/1000).toFixed(2);\n                break;\n              case 'cost':\n                itemValue = monthValue.cost.toFixed(2);\n                break;\n              case 'co2':\n                itemValue = monthValue.co2.toFixed(2);\n                break;\n              case 'tray':\n                itemValue = monthValue.tray;\n                break;\n              default:\n\n            };\n            newBar = {\n              index: monthName,\n              value: itemValue\n            };\n          }\n          graphValues.push(newBar);\n        }\n        var evitable = 0;\n        var inevitable = 0;\n        switch (props.clientState.dataType) {\n          case 'mass':\n            evitable = rawData.mass - rawData.inevitableMass;\n            inevitable = rawData.inevitableMass;\n            break;\n          case 'cost':\n            evitable = rawData.cost - rawData.inevitableCost;\n            inevitable = rawData.inevitableCost;\n            break;\n          case 'co2':\n            evitable = rawData.co2 - rawData.inevitableCo2;\n            inevitable = rawData.inevitableCo2;\n            break;\n          default:\n            evitable = rawData.mass - rawData.inevitableMass;\n            inevitable = rawData.inevitableMass;\n        };\n        return {\n          mass: rawData.mass,\n          cost: rawData.cost,\n          co2: rawData.co2,\n          tray: rawData.tray,\n          graph: graphValues,\n          legend: legend,\n          titleLegend: titleLegend,\n          barColor: barColor,\n          evitable: [\n                      {\n                        \"id\": \"Evitable\",\n                        \"label\": \"Evitable\",\n                        \"value\": evitable.toFixed(2)\n                      },\n                      {\n                        \"id\": \"Non_évitable\",\n                        \"label\": \"Non-évitable\",\n                        \"value\": inevitable.toFixed(2)\n                      }\n                    ]\n        }\n        break;\n      case 'month':                                                                       // DRILLDOWN MONTH\n        console.log('BEGIN '+props.clientState.drillDownLevel+' MONTH : '+props.clientState.selectedMonth);\n\n        var currentYear = moment().year();\n        console.log('The year : '+currentYear);\n        var startDate = moment([currentYear, props.clientState.selectedMonth]);\n        console.log('The start date :'+startDate.format(\"dddd, MMMM Do YYYY, h:mm:ss a\"));\n        var titleLegend = startDate.format('MMMM YYYY');\n        var firstDay = moment(startDate).startOf('month');\n        var endDay = moment(startDate).endOf('month');\n\n        var monthRange = moment.range(firstDay, endDay);\n        var weeks = []\n        for (const mday of monthRange.by('days')) {\n           if (weeks.map( item => item.week ).indexOf(mday.week()) === -1) {\n               weeks.push( { week: mday.week(), firstDate: mday } );\n           }\n        }\n        console.log('the WEEKS : '+JSON.stringify(weeks, null, 2));\n\n        for (const [indexWeek, weekDate] of weeks.entries()) {\n          const weekValue = rawData.months[selectedMonth].weeks[indexWeek];\n          var newBar = null;\n          var chartIndexDay = weeks[indexWeek].firstDate;\n          if (weeks[indexWeek].firstDate.add(1, 'days').format('dddd') == 'Sunday'){\n            chartIndexDay = weeks[indexWeek].firstDate.add(1, 'days')\n          }\n          if (weekValue == undefined || weekValue == null) {\n            newBar = {\n              index: 'S'+(indexWeek+1),\n              value: 0\n            };\n          }\n          else {\n            var itemValue = null;\n            switch (props.clientState.dataType) {\n              case 'mass':\n                itemValue = (weekValue.mass/1000).toFixed(2);\n                break;\n              case 'cost':\n                itemValue = weekValue.cost.toFixed(2);\n                break;\n              case 'co2':\n                itemValue = weekValue.co2.toFixed(2);\n                break;\n              case 'tray':\n                itemValue = weekValue.tray;\n                break;\n              default:\n\n            };\n            newBar = {\n              index: 'S'+(indexWeek+1),\n              value: itemValue\n            };\n          }\n          graphValues.push(newBar);\n        }\n        console.log('Before return for month : '+JSON.stringify(graphValues, null, 2));\n        var evitable = 0;\n        var inevitable = 0;\n        switch (props.clientState.dataType) {\n          case 'mass':\n            evitable = rawData.months[selectedMonth].mass - rawData.months[selectedMonth].inevitableMass;\n            inevitable = rawData.months[selectedMonth].inevitableMass;\n            break;\n          case 'cost':\n            evitable = rawData.months[selectedMonth].cost - rawData.months[selectedMonth].inevitableCost;\n            inevitable = rawData.months[selectedMonth].inevitableCost;\n            break;\n          case 'co2':\n            evitable = rawData.months[selectedMonth].co2 - rawData.months[selectedMonth].inevitableCo2;\n            inevitable = rawData.months[selectedMonth].inevitableCo2;\n            break;\n          default:\n            evitable = rawData.months[selectedMonth].mass - rawData.months[selectedMonth].inevitableMass;\n            inevitable = rawData.months[selectedMonth].inevitableMass;\n        };\n        return {\n          mass: rawData.months[selectedMonth].mass,\n          cost: rawData.months[selectedMonth].cost,\n          co2: rawData.months[selectedMonth].co2,\n          tray: rawData.months[selectedMonth].tray,\n          graph: graphValues,\n          titleLegend: titleLegend,\n          legend: legend,\n          barColor: barColor,\n          evitable: [\n                      {\n                        \"id\": \"Evitable\",\n                        \"label\": \"Evitable\",\n                        \"value\": evitable.toFixed(2)\n                      },\n                      {\n                        \"id\": \"Non_évitable\",\n                        \"label\": \"Non-évitable\",\n                        \"value\": inevitable.toFixed(2)\n                      }\n                    ]\n        }\n        break;\n      case 'week':                                                                           // DRILLDOWN WEEK\n        console.log('BEGIN '+props.clientState.drillDownLevel+' MONTH : '+props.clientState.selectedMonth);\n        var currentYear = moment().year();\n        console.log('The year : '+currentYear);\n        var startDate = moment([currentYear, props.clientState.selectedMonth]);\n        console.log('The start date :'+startDate.format(\"dddd, MMMM Do YYYY, h:mm:ss a\"));\n        var firstDay = moment(startDate).startOf('month');\n        var endDay = moment(startDate).endOf('month');\n\n        var monthRange = moment.range(firstDay, endDay);\n        var weeks = []\n        for (const mday of monthRange.by('days')) {\n           if (weeks.map( item => item.week ).indexOf(mday.week()) === -1) {\n             var testDate = mday.clone();\n             if (testDate.add(1, 'days').format('dddd') == 'Sunday'){\n               weeks.push( { week: testDate.week(), firstDate: testDate.add(1, 'days') } );\n             }\n             else {\n               weeks.push( { week: mday.week(), firstDate: mday } );\n             }\n           }\n        }\n        console.log('THE WEEKS : '+JSON.stringify(weeks, null, 2));\n        console.log('selected week : '+selectedWeek);\n        var titleLegend = 'Semaine '+ (selectedWeek+1) +' de '+ startDate.format('MMMM YYYY') +' ('+ weeks[selectedWeek].firstDate.format('D/M/YY') +' au ...';\n        for (const [indexDay, itemDay] of ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi'].entries()){\n          const dayValue = rawData.months[selectedMonth].weeks[selectedWeek].days[indexDay];\n          var newBar = null;\n          if (dayValue == undefined || dayValue==null) {\n            newBar = {\n              index: itemDay,\n              value: 0\n            };\n          }\n          else {\n            var itemValue = null;\n            switch (props.clientState.dataType) {\n              case 'mass':\n                itemValue = (dayValue.mass/1000).toFixed(2);\n                break;\n              case 'cost':\n                itemValue = dayValue.cost.toFixed(2);\n                break;\n              case 'co2':\n                itemValue = dayValue.co2.toFixed(2);\n                break;\n              case 'tray':\n                itemValue = dayValue.tray;\n                break;\n              default:\n\n            }\n            newBar = {\n              index: itemDay,\n              value: itemValue\n            };\n          }\n          graphValues.push(newBar);\n        }\n\n        switch (props.clientState.dataType) {\n          case 'mass':\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].mass - rawData.months[selectedMonth].weeks[selectedWeek].inevitableMass;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].inevitableMass;\n            break;\n          case 'cost':\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].cost - rawData.months[selectedMonth].weeks[selectedWeek].inevitableCost;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].inevitableCost;\n            break;\n          case 'co2':\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].co2 - rawData.months[selectedMonth].weeks[selectedWeek].inevitableCo2;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].inevitableCo2;\n            break;\n          default:\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].mass - rawData.months[selectedMonth].weeks[selectedWeek].inevitableMass;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].inevitableMass;\n        };\n        return {\n          mass: rawData.months[selectedMonth].weeks[selectedWeek].mass,\n          cost: rawData.months[selectedMonth].weeks[selectedWeek].cost,\n          co2: rawData.months[selectedMonth].weeks[selectedWeek].co2,\n          tray: rawData.months[selectedMonth].weeks[selectedWeek].tray,\n          graph: graphValues,\n          barColor: barColor,\n          legend: legend,\n          titleLegend: titleLegend,\n          evitable: [\n                      {\n                        \"id\": \"Evitable\",\n                        \"label\": \"Evitable\",\n                        \"value\": evitable.toFixed(2)\n                      },\n                      {\n                        \"id\": \"Non_évitable\",\n                        \"label\": \"Non-évitable\",\n                        \"value\": inevitable.toFixed(2)\n                      }\n                    ]\n        }\n        break;\n      case 'day':\n        console.log('BEGIN '+props.clientState.drillDownLevel+' MONTH : '+props.clientState.selectedMonth);\n        console.log('IN DRILLDOWN DAY');                                                              // DRILLDOWN DAY\n        for (const categoryValue of rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories) {\n          console.log('CATEGORY values : '+JSON.stringify(categoryValue, null, 2));\n          var newBar = null;\n          if (categoryValue == undefined) {\n            newBar = {\n              index: '',\n              value: 0\n            };\n          }\n          else {\n            var itemValue = null;\n            switch (props.clientState.dataType) {\n              case 'mass':\n                itemValue = (categoryValue.mass/1000).toFixed(2);\n                break;\n              case 'cost':\n                itemValue = categoryValue.cost.toFixed(2);\n                break;\n              case 'co2':\n                itemValue = categoryValue.co2.toFixed(2);\n                break;\n              case 'tray':\n                itemValue = categoryValue.tray;\n                break;\n              default:\n\n            }\n            newBar = {\n              index: categoryValue.index,\n              value: itemValue\n            };\n          }\n          graphValues.push(newBar);\n        }\n        switch (props.clientState.dataType) {\n          case 'mass':\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].mass - rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].inevitableMass;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].inevitableMass;\n            break;\n          case 'cost':\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].cost - rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].inevitableCost;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].inevitableCost;\n            break;\n          case 'co2':\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].co2 - rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].inevitableCo2;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].inevitableCo2;\n            break;\n          default:\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].mass - rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].inevitableMass;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].inevitableMass;\n        };\n        return {\n          mass: rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].mass,\n          cost: rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].cost,\n          co2: rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].co2,\n          tray: rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].tray,\n          graph: graphValues,\n          barColor: barColor,\n          legend: legend,\n          evitable: [\n                      {\n                        \"id\": \"Evitable\",\n                        \"label\": \"Evitable\",\n                        \"value\": evitable.toFixed(2)\n                      },\n                      {\n                        \"id\": \"Non_évitable\",\n                        \"label\": \"Non-évitable\",\n                        \"value\": inevitable.toFixed(2)\n                      }\n                    ]\n        }\n        break;\n      case 'category':                                                                             // DRILLDOWN CATEGORY\n        console.log('BEGIN '+props.clientState.drillDownLevel+' MONTH : '+props.clientState.selectedMonth);\n        for (const foodValue of rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].foods) {\n          var itemValue = null;\n          switch (props.clientState.dataType) {\n            case 'mass':\n              itemValue = (foodValue.mass/1000).toFixed(2);\n              break;\n            case 'cost':\n              itemValue = foodValue.cost.toFixed(2);\n              break;\n            case 'co2':\n              itemValue = foodValue.co2.toFixed(2);\n              break;\n            case 'tray':\n              itemValue = foodValue.tray.toFixed(2);\n              break;\n            default:\n\n          }\n          const newBar = {\n            index: foodValue.index,\n            value: itemValue\n          };\n          graphValues.push(newBar);\n        }\n        switch (props.clientState.dataType) {\n          case 'mass':\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].mass - rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].inevitableMass;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].inevitableMass;\n            break;\n          case 'cost':\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].cost - rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].inevitableCost;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].inevitableCost;\n            break;\n          case 'co2':\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].co2 - rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].inevitableCo2;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].inevitableCo2;\n            break;\n          default:\n            evitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].mass - rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].inevitableMass;\n            inevitable = rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].inevitableMass;\n        };\n        return {\n          mass: rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].mass,\n          cost: rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].cost,\n          co2: rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].co2,\n          tray: rawData.months[selectedMonth].weeks[selectedWeek].days[selectedDay].categories[selectedCategory].tray,\n          graph: graphValues,\n          barColor: barColor,\n          legend: legend,\n          evitable: [\n                      {\n                        \"id\": \"Evitable\",\n                        \"label\": \"Evitable\",\n                        \"value\": evitable.toFixed(2)\n                      },\n                      {\n                        \"id\": \"Non_évitable\",\n                        \"label\": \"Non-évitable\",\n                        \"value\": inevitable.toFixed(2)\n                      }\n                    ]\n        }\n        break;\n      default:                                                              //DRILLDOWN DEFAULT\n        return null;\n        break;\n    }\n  }\n\n  const handleClickOnBar = (element) => {\n    console.log('IN on click on bar');\n    switch (props.clientState.drillDownLevel) {\n      case 'year':\n          dispatch(updateSelectedMonth(element.index));\n          dispatch(updateDrillDown('month'));\n        break;\n      case 'month':\n          dispatch(updateSelectedWeek(element.index));\n          dispatch(updateDrillDown('week'));\n        break;\n      case 'week':\n          dispatch(updateSelectedDay(element.index));\n          dispatch(updateDrillDown('day'));\n        break;\n      case 'day':\n          dispatch(updateSelectedCategory(element.index));\n          dispatch(updateDrillDown('category'));\n        break;\n      case 'category':\n\n        break;\n      default:\n\n    }\n    console.log('End of on click on bar');\n  }\n\n  const handleReturn = () => {\n    console.log('In handleReturn !, month = '+props.clientState.selectedMonth);\n    switch (props.clientState.drillDownLevel) {\n      case 'year':\n\n        break;\n      case 'month':\n          dispatch(updateSelectedMonth(null));\n          dispatch(updateDrillDown('year'));\n        break;\n      case 'week':\n          dispatch(updateSelectedWeek(null));\n          dispatch(updateDrillDown('month'));\n        break;\n      case 'day':\n          dispatch(updateSelectedDay(null));\n          dispatch(updateDrillDown('week'));\n        break;\n      case 'category':\n        dispatch(updateSelectedCategory(null));\n        dispatch(updateDrillDown('day'));\n        break;\n      default:\n\n    }\n    console.log('End of handle return');\n  }\n\n  const handleUpdateDataType = (newType) => {\n    console.log('In hlandle update data type');\n    dispatch(updateDataType(newType));\n  }\n\n  const getPercentValue = () => {\n    console.log('EVITABLE : '+getTotalValue().evitable[0].value);\n    console.log('INEVITABLE : '+getTotalValue().evitable[1].value);\n    const evitable = parseInt(getTotalValue().evitable[0].value);\n    const inevitable = parseInt(getTotalValue().evitable[1].value)\n    const value = (evitable / (evitable + inevitable) ) * 100;\n    return value.toFixed(0);\n  }\n\n\n  // NOT a FUCNTION\n  if (props.clientState.error != false) {\n    console.log('ERROR : '+JSON.stringify(props.clientState.error, null, 2));\n  }\n  else if (!props.clientState.fetched && !props.clientState.fetching) {\n    console.log('Raw data not fetched : ['+props.clientState.fetched+'] and not fetching['+props.clientState.fetching+']');\n    dispatch(getRawDataStart());\n    console.log('Before get all data : '+props.adminState.fetched);\n    getAllData()\n      .then(res => {\n        console.log('In success get raw data : '+JSON.stringify(res, null, 2));\n        dispatch(getRawDataSuccess(res));\n      })\n      .catch(err => {\n        console.log('In error get raw data : '+err);\n        dispatch(getRawDataError(err));\n      })\n  }\n\n  console.log('Before render client dashboard');\n  return(\n    <Col className={styles.globalContainer}>\n      <Row>\n        <Col md={{span: 12, offset: 0}}>\n         <Row className=\"justify-content-md-center\">\n           {\n             props.clientState.fetched ?\n              <h1 className={styles.pageTitle}> Mon tableau de bord - { getTotalValue().titleLegend } </h1>\n            :\n              <h1 className={styles.pageTitle}> Mon tableau de bord </h1>\n          }\n         </Row>\n        </Col>\n      </Row>\n\n      {\n        props.clientState.fetched ?\n          <div>\n            <Row className=\"justify-content-md-center\">\n              <Col md={{span: 6, offset: 0}}>\n                <Row>\n                  <Col md={{span: 6, offset: 0}}>\n                    <Row className=\"justify-content-md-center\">\n                      <div onClick={ () => handleUpdateDataType('mass') } className={styles.dashboardElement}>\n                        <DashboardElement value={ (getTotalValue().mass/1000).toFixed(2) + ' kg' } title={'Quantité gaspillée'} legend={'par les convives'} color={'#90c261'} />\n                      </div>\n                    </Row>\n\n                    <Row>\n                      <div className={styles.dividerDiv}>\n                      </div>\n                    </Row>\n\n                    <Row className=\"justify-content-md-center\">\n                      <div onClick={ () => handleUpdateDataType('mass') } className={styles.dashboardElement}>\n                        <DashboardElement value={ (getTotalValue().mass / getTotalValue().tray).toFixed(2) + ' g' } title={'Quantité gaspillée / convive'} legend={'par repas servis'} color={'#90c261'} />\n                      </div>\n                    </Row>\n                  </Col>\n\n                  <Col md={{span: 6, offset: 0}}>\n                    <Row className=\"justify-content-md-center\">\n                      <div onClick={ () => handleUpdateDataType('cost') }  className={styles.dashboardElement}>\n                        <DashboardElement value={ getTotalValue().cost.toFixed(2) + ' €' } title={'Coût économique'} legend={'coût complet du gaspillage'} color={'#54b0e3'} />\n                      </div>\n                    </Row>\n\n                    <Row>\n                      <div className={styles.dividerDiv} style={{width: '10px'}}>\n                      </div>\n                    </Row>\n\n                    <Row className=\"justify-content-md-center\">\n                      <div onClick={ () => handleUpdateDataType('cost') } className={styles.dashboardElement}>\n                        <DashboardElement value={ (getTotalValue().cost / getTotalValue().tray).toFixed(2) + ' €' } title={'Coût économique / convive'} legend={'coût complet du repas'} color={'#54b0e3'} />\n                      </div>\n                    </Row>\n                  </Col>\n                </Row>\n              </Col>\n\n              <Col md={{span: 6, offset: 0}} >\n                <Row className=\"justify-content-md-center\">\n                  <div className={styles.dashboardBarChartGlobal}>\n                    <Row>\n                      <Col md={{span: 8, offset: 0}}>\n                        <h2 className={styles.barChartTitle}> Histogramme du gaspillage alimentaire </h2>\n                      </Col>\n                      <Col md={{span: 3, offset: 1}}>\n                        {\n                          props.clientState.drillDownLevel == 'year' ?\n                            <> </>\n                          :\n                            <>\n                              <style type=\"text/css\">\n                                {`\n                                  .btn-custom-grey {\n                                    font-size: 20px;\n                                    background-color: #666666;\n                                    border-width: 0px;\n                                    color: white;\n                                  }\n\n                                  .btn-custom-grey:hover {\n                                    font-size: 20px;\n                                    background-color: #525252;\n                                    border-width: 0px;\n                                    color: white;\n                                  }\n                                `}\n                              </style>\n                              <Button variant='custom-grey' onClick={handleReturn}> Retour </Button>\n                            </>\n                        }\n                      </Col>\n                    </Row>\n                    <Row>\n                      <div className={styles.dashboardBarChart}>\n                        <Bar data={ getTotalValue().graph } keys={'value'} index={'index'} handleClick={ handleClickOnBar } customColor={getTotalValue().barColor} dataLegendLeftAxis={getTotalValue().legend}/>\n                      </div>\n                    </Row>\n                  </div>\n                </Row>\n              </Col>\n            </Row>\n\n            <Row>\n              <div className={styles.dividerDiv}>\n              </div>\n            </Row>\n\n            <Row>\n              <Col md={{span: 3, offset: 0}}>\n                <Row className=\"justify-content-md-center\">\n                  <div onClick={ () => handleUpdateDataType('co2')} className={styles.dashboardElement}>\n                    <DashboardElement value={ getTotalValue().co2.toFixed(2) } title={'Impact environnemental'} legend={'GES en kg de CO2'} color={'#f7d426'} className={styles.nivoBarStyle} />\n                  </div>\n                </Row>\n              </Col>\n\n              <Col md={{span: 3, offset: 0}}>\n                <Row className=\"justify-content-md-center\">\n                  <div onClick={ () => handleUpdateDataType('tray')} className={styles.dashboardElement}>\n                    <DashboardElement value={ getTotalValue().tray } title={'Nombre de couverts'} legend={'repas servis'} color={'#666666'} />\n                  </div>\n                </Row>\n              </Col>\n\n              <Col md={{span: 6, offset: 0}}>\n                <Row className=\"justify-content-md-center\">\n                  <div className={styles.dashboardPieChartGlobal}>\n                    <h2  className={styles.pieChartTitle}> Répartition des déchets </h2>\n                    <div className={styles.dashboardPieChart}>\n                      <Pie data={ getTotalValue().evitable } />\n                    </div>\n                    <p className={styles.percent}> {getPercentValue()} % </p>\n                  </div>\n                </Row>\n              </Col>\n            </Row>\n          </div>\n        :\n          <h1> Currently getting the data </h1>\n      }\n    </Col>\n  )\n}\n\nfunction mapStateToProps(state) {\n  //console.log('IN dashboard map to state : '+JSON.stringify(state.clientReducer, null, 2));\n  console.log('In dashboard state to map :'+state.adminReducer.fetched)\n  return {\n    clientState: state.clientReducer,\n    rawData: state.clientReducer.rawData,\n    adminState: state.adminReducer,\n  }\n}\n\nexport default connect(mapStateToProps)(ClientDashboard);\n","import React from 'react';          //REACT\n\nimport ErrorFormField from '../../Common/ErrorFormField/ErrorFormField';   //COMPONENTS\n\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\nimport { createClientStart, createClientSuccess, createClientError } from '../../../actions/admin.action';  //ACTIONS\n\nimport { createClient } from '../../../services/AdminAPI';           //API FUNCTIONS\n\nimport { Button, Form, Col, Row, Container } from 'react-bootstrap';  //BOOTSTRAP\n\nimport { Formik } from 'formik';    //FORMIK\nimport * as Yup from 'yup';         //YUP\n\nimport styles from './ClientDetails.module.css' //CSS\n\nfunction ClientForm() {\n\n  const dispatch = useDispatch();\n  const adminState = useSelector(state => state.adminReducer);\n                                                                                //VALIDATION SCHEMA\n  const validationSchema = Yup.object().shape({\n    NameClient: Yup.string().required('Ce champ est obligatoire'),\n    adressClient: Yup.string().required('Ce champ est obligatoire'),\n    emailClient: Yup.string().required('Ce champ est obligatoire'),\n    phoneClient: Yup.string().required('Ce champ est obligatoire'),\n    dateRegistrationClient: Yup.date().required('Ce champ est obligatoire')\n  });\n\n  const handleSubmit = async (values, {setSubmitting, resetForm}) => {          //HANDLE SUBMIT\n   setSubmitting(true);\n   console.log('IN SUBMIIIIIIIIIIIIIIT !!!!!!!!!!!!!!!!!!!!!!!!');\n   dispatch(createClientStart());\n   createClient(values)\n    .then( res => {\n      dispatch(createClientSuccess(adminState.clientList, res));\n    })\n    .catch( err => {\n      dispatch(createClientError(err));\n    })\n   resetForm();\n   setSubmitting(false);\n }\n\n  return(\n    <div className={ styles.detailsContainer }>\n      <h1>Create a new client </h1>\n\n      <Formik\n        initialValues={ { NameClient: '',\n                          adressClient: '',\n                          emailClient: '',\n                          phoneClient: '',\n                          dateRegistrationClient: Date.now() } }\n        validationSchema={ validationSchema }\n        onSubmit={ handleSubmit }\n      >\n        { ({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => (\n          <div>\n            <Form as={ Col } md='6' className={ styles.formContainer } onSubmit={ handleSubmit }>\n              <Form.Row>\n                <Form.Group as={ Col } md='6' controlId={ 'NameClientInput' }>                   { /*NAME*/ }\n                  <Form.Label> Nom </Form.Label>\n                  <Form.Control isValid = { touched.NameClient && !errors.NameClient }\n                                isInvalid = { touched.NameClient && errors.NameClient }\n                                name = 'NameClient'\n                                placeholder = 'Nom du client'\n                                onBlur = { handleBlur }\n                                value = { values.NameClient }\n                                onChange = { handleChange }>\n                  </Form.Control>\n                  <ErrorFormField touched = {touched.societe} message={errors.societe} />\n                </Form.Group>\n\n                <Form.Group as={ Col } md='6' controlId={ 'adressClientInput' }>                   { /*ADRESS*/ }\n                  <Form.Label> Adresse </Form.Label>\n                  <Form.Control isValid = { touched.adressClient && !errors.adressClient }\n                                isInvalid = { touched.adressClient && errors.adressClient }\n                                name = 'adressClient'\n                                placeholder = 'Adresse du client'\n                                onBlur = { handleBlur }\n                                value = { values.adressClient }\n                                onChange = { handleChange }>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group as={ Col } md='6' controlId={ 'emailClientInput' }>                  { /*EMAIL*/ }\n                  <Form.Label> Email </Form.Label>\n                  <Form.Control isValid={ touched.emailClient && !errors.emailClient }\n                                isInvalid={ touched.emailClient && errors.emailClient }\n                                name = 'emailClient'\n                                placeholder='Email du client'\n                                onBlur={ handleBlur }\n                                value={ values.emailClient }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={ Col } md='6' controlId={ 'phoneClientInput' }>                  { /*PHONE*/ }\n                  <Form.Label> Téléphone </Form.Label>\n                  <Form.Control isValid={ touched.phoneClient && !errors.phoneClient }\n                                isInvalid={ touched.phoneClient && errors.phoneClient }\n                                name = 'phoneClient'\n                                placeholder='Téléphone du client'\n                                onBlur={ handleBlur }\n                                value={ values.phoneClient }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group as={ Col } md='6' controlId={ 'dateRegistrationClientInput' }>                 { /*DATE REGISTRATION*/ }\n                  <Form.Label> Date d'enregistrement </Form.Label>\n                  <Form.Control type='date'\n                                isValid={ touched.dateRegistrationClient && !errors.dateRegistrationClient }\n                                isInvalid={ touched.dateRegistrationClient && errors.dateRegistrationClient }\n                                name = 'dateRegistrationClient'\n                                placeholder=''\n                                onBlur={ handleBlur }\n                                value={ values.dateRegistrationClient }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n\n              <Row className='row justify-content-center'>\n                <Button variant='primary' type='submit' onClick={handleSubmit} disabled={isSubmitting}> Valider </Button>\n              </Row>\n            </Form>\n          </div>\n        ) }\n      </Formik>\n    </div>\n  )\n}\n\nexport default ClientForm;\n","import React from 'react';          //REACT\n\nimport ErrorFormField from '../../Common/ErrorFormField/ErrorFormField';   //COMPONENTS\n\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\nimport { createContractSuccess, createContractError } from '../../../actions/admin.action';  //ACTIONS\n\nimport { createContract } from '../../../services/AdminAPI';           //API FUNCTIONS\n\nimport { Button, Form, Col, Row, Container } from 'react-bootstrap';  //BOOTSTRAP\n\nimport { Formik } from 'formik';    //FORMIK\nimport * as Yup from 'yup';         //YUP\n\nimport styles from './ContractForm.module.css';\n\nfunction ClientForm(props) {\n\n  const dispatch = useDispatch();\n  const adminState = useSelector(state => state.adminReducer);\n                                                                                //VALIDATION SCHEMA\n  const contratValidationSchema = Yup.object().shape({\n    nameContract: Yup.string().required('Ce champ est obligatoire'),\n    typeContract: Yup.string().required('Ce champ est obligatoire'),\n    startDateContract: Yup.date().required('Ce champ est obligatoire')\n  });\n\n  const handleAddContrat = async (values, {setSubmitting, resetForm}) => {          //HANDLE SUBMIT\n    setSubmitting(true);\n    const currentName = props.clientList[props.currentClient].NameClient;\n    values.clientName = currentName;\n    console.log('contract VALUES : '+JSON.stringify(values, null, 2));\n    createContract(currentName, values)\n      .then( res => {\n        dispatch(createContractSuccess(res, props.clientList, props.currentClient));\n      })\n      .catch( err => {\n        dispatch(createContractError(err));\n      })\n    setSubmitting(false);\n }\n\n  return(\n    <div as={Col} md='9' className={styles.newContractContainer}>\n      <Row>\n        <Col>\n          <h3> Créer un nouveau contrat </h3>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Formik\n            enableReinitialize\n            initialValues={ { nameContract: '',\n                              typeContract: '',\n                              startDateContract: '' } }\n            validationSchema={ contratValidationSchema }\n            onSubmit={ handleAddContrat }\n          >\n            { ({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => {\n            return(\n              <div>\n                <Form className={styles.newContractForm} onSubmit={ handleSubmit }>\n                  <Form.Row>\n                    <Form.Group as={ Col } md='4' controlId={ 'nameContract' }>                   { /*NAME*/ }\n                      <Form.Label> Nom </Form.Label>\n                      <Form.Control isValid={ touched.nameContract && !errors.nameContract }\n                                    isInvalid={ touched.nameContract && errors.nameContract }\n                                    placeholder='Nom du contrat'\n                                    onBlur={ handleBlur }\n                                    value={ values.nameContract }\n                                    onChange={ handleChange }>\n                      </Form.Control>\n                      <ErrorFormField touched={touched.societe} message={errors.societe} />\n                    </Form.Group>\n\n                    <Form.Group as={ Col } md='4' controlId={ 'typeContract' }>                   { /*TYPE*/ }\n                      <Form.Label> Type </Form.Label>\n                      <Form.Control isValid={ touched.typeContract && !errors.typeContract }\n                                    isInvalid={ touched.typeContract && errors.typeContract }\n                                    placeholder='Type du contrat'\n                                    onBlur={ handleBlur }\n                                    value={ values.typeContract }\n                                    onChange={ handleChange }>\n                      </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={ Col } md='4' controlId={ 'startDateContract' }>                 { /*START DATE*/ }\n                      <Form.Label> Date de début </Form.Label>\n                      <Form.Control type='date'\n                                    isValid={ touched.startDateContract && !errors.startDateContract }\n                                    isInvalid={ touched.startDateContract && errors.startDateContract }\n                                    placeholder='Date de début du contrat'\n                                    onBlur={ handleBlur }\n                                    value={ values.startDateContract }\n                                    onChange={ handleChange }>\n                      </Form.Control>\n                    </Form.Group>\n                  </Form.Row>\n\n                  <Row className='row justify-content-center'>\n                    <Button variant='primary' type='submit' disabled={isSubmitting}> Valider </Button>\n                  </Row>\n                </Form>\n              </div>\n            ) } }\n          </Formik>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    clientList: state.adminReducer.clientList,\n    currentClient: state.adminReducer.currentClient\n  }\n}\n\nexport default connect(mapStateToProps)(ClientForm);\n","import React from 'react';          //REACT\n\nimport ErrorFormField from '../../Common/ErrorFormField/ErrorFormField';   //COMPONENTS\n\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\nimport { createRestaurantSuccess, createRestaurantError } from '../../../actions/admin.action';  //ACTIONS\n\nimport { createRestaurant } from '../../../services/AdminAPI';           //API FUNCTIONS\n\nimport { Button, Form, Col, Row, Container } from 'react-bootstrap';  //BOOTSTRAP\n\nimport { Formik } from 'formik';    //FORMIK\nimport * as Yup from 'yup';         //YUP\n\nimport styles from './RestaurantForm.module.css';\n\nfunction RestaurantForm(props) {\n\n  const dispatch = useDispatch();\n                                                                                //VALIDATION SCHEMA\n  const restaurantValidationSchema = Yup.object().shape({\n    nameRestaurant: Yup.string().required('Ce champ est obligatoire'),\n    adressRestaurant: Yup.string().required('Ce champ est obligatoire'),\n  });\n\n  const handleAddRestaurant = async (values, {setSubmitting, resetForm}) => {          //HANDLE SUBMIT\n    setSubmitting(true);\n    console.log('IN SUBMIT NEW RESTAURANT')\n    const contractName = props.clientList[props.currentClient].contractList[props.contractIndex].nameContract;\n    values.contractName = contractName;\n    createRestaurant(contractName, values)\n      .then( res => {\n        dispatch(createRestaurantSuccess(res, props.clientList, props.currentClient));\n      })\n      .catch( err => {\n        dispatch(createRestaurantError(err));\n      })\n    setSubmitting(false);\n }\n\n  return(\n    <div className={ styles.newRestaurant }>\n      <Row className='justify-content-md-center'>\n        <h1>Création d'un nouveau restaurant :</h1>\n      </Row>\n\n      <Formik\n        enableReinitialize\n        initialValues={ { nameRestaurant: '',\n                          adressRestaurant: '' } }\n        validationSchema={ restaurantValidationSchema }\n        onSubmit={ handleAddRestaurant }\n      >\n        { ({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => {\n        return(\n          <div>\n            <Form onSubmit={ handleSubmit }>\n              <Form.Row className='justify-content-md-center'>\n                <Form.Group as={ Col } md='4' controlId={ 'nameRestaurant' }>                   { /*NAME*/ }\n                  <Form.Label> Nom </Form.Label>\n                  <Form.Control isValid={ touched.nameRestaurant && !errors.nameRestaurant }\n                                isInvalid={ touched.nameRestaurant && errors.nameRestaurant }\n                                placeholder='Nom du restaurant'\n                                onBlur={ handleBlur }\n                                value={ values.nameRestaurant }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                  <ErrorFormField touched={touched.nameRestaurant} message={errors.nameRestaurant} />\n                </Form.Group>\n\n                <Form.Group as={ Col } md='4' controlId={ 'adressRestaurant' }>                   { /*ADRESS*/ }\n                  <Form.Label> Adresse </Form.Label>\n                  <Form.Control isValid={ touched.adressRestaurant && !errors.adressRestaurant }\n                                isInvalid={ touched.adressRestaurant && errors.adressRestaurant }\n                                placeholder='Adresse du restaurant'\n                                onBlur={ handleBlur }\n                                value={ values.adressRestaurant }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n\n              <Row className='row justify-content-center'>\n                <Button variant='primary' type='submit' disabled={isSubmitting}> Valider </Button>\n              </Row>\n            </Form>\n          </div>\n        ) } }\n      </Formik>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    clientList: state.adminReducer.clientList,\n    currentClient: state.adminReducer.currentClient\n  }\n}\n\nexport default connect(mapStateToProps)(RestaurantForm);\n","import React, { useState } from 'react';                    //REACT\n\nimport { useSelector, connect, useDispatch } from 'react-redux';     //REDUX\nimport { changeCurrentRestaurant, changePageMode, updateRestaurant } from '../../../actions/admin.action';    //ACTIONS\n\nimport { createAccountForRestaurant, updateRestaurantAccountCreated } from '../../../services/AdminAPI';    //API\n\nimport RestaurantForm from './RestaurantForm';  //COMPONENTS\n\nimport { Formik } from 'formik';    //FORMIK\nimport * as Yup from 'yup';         //YUP\n\nimport Row from 'react-bootstrap/Row'       //BOOTSTRAP\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nimport styles from './RestaurantDetails.module.css';\n\nfunction RestaurantDetail(props) {\n\n  const dispatch = useDispatch();\n  const [createAccount, setCreateAccount] = useState(false);\n  const [emailValue, setEmailValue] = useState('');\n  const [passwordValue, setPasswordValue] = useState('');\n\n  const restaurant = props.clientList[props.currentClient].contractList[props.contractIndex].restaurantList[props.restaurantIndex];\n\n  const onClick = () => {\n    console.log('In onclik change current restaurant, fetched : '+props.adminState.fetched+' fetchinf : '+props.adminState.fetching);\n    dispatch(changeCurrentRestaurant(restaurant.nameRestaurant));\n    dispatch(changePageMode('dashboard'));\n  }\n\n  const handleCreateAccount = () => {\n    setCreateAccount(!createAccount);\n  }\n\n  const handleEmailChange = (event) => {\n    setEmailValue(event.target.value);\n  }\n\n  const handlePasswordChange = (event) => {\n    setPasswordValue(event.target.value);\n  }\n\n  const accountValidationSchema = Yup.object().shape({\n    email: Yup.string().required('Ce champ est obligatoire'),\n    password: Yup.string().required('Ce champ est obligatoire'),\n  });\n\n  const handleAddAccount = async (values, {setSubmitting, resetForm}) => {\n    setSubmitting(true);\n    console.log('In submit new account');\n    createAccountForRestaurant(values.email, values.password, restaurant.nameRestaurant)\n      .then( res => {\n        console.log('In then create account : '+JSON.stringify(res, null, 2));\n        updateRestaurantAccountCreated(restaurant.nameRestaurant)\n          .then( res => {\n            console.log('In then update restaurant : '+JSON.stringify(res, null, 2));\n            dispatch(updateRestaurant(props.currentClient, props.contractIndex, props.restaurantIndex, props.clientList))\n          })\n          .catch()\n      })\n      .catch( err => {\n        console.log('In create account catch error : '+JSON.stringify(err, null, 2));\n      })\n    setSubmitting(false);\n  }\n\n  return(\n    <div className={styles.restaurantDetails}>\n      <hr width=\"50%\" />\n      <Row>\n        <Col>\n          <h2> { restaurant.nameRestaurant } </h2>\n        </Col>\n        <Col>\n          <h2> { restaurant.adressRestaurant } </h2>\n        </Col>\n        <Col>\n          <Button onClick={onClick}> Voir le gaspillage </Button>\n        </Col>\n        <Col>\n        </Col>\n        {\n          restaurant.accountCreated == false ?\n            <Button onClick={handleCreateAccount}> Créer un compte </Button>\n          :\n            <Button disabled> Compte déjà créé </Button>\n        }\n      </Row>\n\n      {\n        createAccount ?\n          <Row>\n            <Formik\n              enableReinitialize\n              initialValues={ { email: '',\n                                password: '' } }\n              validationSchema={ accountValidationSchema }\n              onSubmit={ handleAddAccount }\n            >\n              { ({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => {\n              return(\n                <div>\n                  <Form onSubmit={ handleSubmit }>\n                    <Form.Row className='justify-content-md-center'>\n                      <Form.Group as={ Col } md='4' controlId={ 'email' }>                   { /*NAME*/ }\n                        <Form.Label> Email </Form.Label>\n                        <Form.Control isValid={ touched.email && !errors.email }\n                                      isInvalid={ touched.email && errors.email }\n                                      placeholder='email'\n                                      onBlur={ handleBlur }\n                                      value={ values.email }\n                                      onChange={ handleChange }>\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group as={ Col } md='4' controlId={ 'password' }>                   { /*ADRESS*/ }\n                        <Form.Label> Mot de passe </Form.Label>\n                        <Form.Control isValid={ touched.password && !errors.password }\n                                      isInvalid={ touched.password && errors.adresspasswordRestaurant }\n                                      placeholder='password'\n                                      onBlur={ handleBlur }\n                                      value={ values.password }\n                                      onChange={ handleChange }>\n                        </Form.Control>\n                      </Form.Group>\n                    </Form.Row>\n\n                    <Row className='row justify-content-center'>\n                      <Button variant='primary' type='submit' disabled={isSubmitting}> Valider </Button>\n                    </Row>\n                  </Form>\n                </div>\n              ) } }\n            </Formik>\n          </Row>\n        :\n          <> </>\n      }\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  console.log('IN STATEMAP restaurant detail');\n  return {\n    clientList: state.adminReducer.clientList,\n    currentClient: state.adminReducer.currentClient,\n    adminState: state.adminReducer,\n  }\n}\n\nexport default connect(mapStateToProps)(RestaurantDetail);\n","import React, { useState, useEffect } from 'react';                  //REACT\nimport { withRouter } from \"react-router-dom\";                       //ROUTER\nimport { useSelector, useDispatch, connect } from 'react-redux';     //REDUX\n\nimport { getRestaurantsSuccess, getRestaurantsError } from '../../../actions/admin.action';    //ACTIONS\n\nimport { getAllRestaurants } from '../../../services/AdminAPI';          //API FUNCTIONS\n\nimport RestaurantForm from './RestaurantForm';  //COMPONENTS\nimport RestaurantDetail from './RestaurantDetail';\n\nimport Row from 'react-bootstrap/Row';       //BOOTSTRAP\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nimport styles from './ContractDetails.module.css';\n\nfunction ContractDetail(props) {\n\n  const dispatch = useDispatch();\n\n  const contract = props.clientList[props.currentClient].contractList[props.contractIndex];\n\n  const [addRestaurant, setAddRestaurant] = useState(false);\n\n  useEffect( () => {\n    console.log('USE EFFECT CONTRACT DETAILS');\n    if (contract.restaurantList == null) {\n      getAllRestaurants(contract.nameContract)\n        .then( res => {\n          dispatch(getRestaurantsSuccess(res, props.clientList, props.currentClient, props.contractIndex));\n        })\n        .catch( err => {\n          dispatch(getRestaurantsError(err));\n        })\n    }\n  });\n\n  console.log('contract detail before rendering : '+JSON.stringify(props.clientList[props.currentClient].contractList[props.contractIndex].restaurantList, null, 2));\n\n  return(\n    <div className={styles.ContractDetails}>\n      <Row>\n        <Col md={{ offset: 1 }}>\n          <h2> { contract.nameContract } </h2>\n        </Col>\n        <Col md={{ offset: 1 }}>\n          <h2> { contract.typeContract } </h2>\n        </Col>\n        <Col md={{ offset: 1 }}>\n          <h2> { contract.startDateContract } </h2>\n        </Col>\n      </Row>\n\n      <br/>\n\n      <Row className='justify-content-md-center'>\n        <Col md='2'>\n          <Button onClick={ () => setAddRestaurant(true) }> Ajouter un restaurant </Button>\n        </Col>\n      </Row>\n\n      {\n        addRestaurant ?\n        <Row>\n          <Col md='12'>\n            <RestaurantForm contractIndex={props.contractIndex}/>\n          </Col>\n        </Row>\n        : <> </>\n      }\n\n      {\n        props.clientList[props.currentClient].contractList[props.contractIndex].restaurantList != undefined ?\n        props.clientList[props.currentClient].contractList[props.contractIndex].restaurantList.map( (item, index) => {\n          return (\n            <div>\n              <RestaurantDetail restaurantIndex={index} contractIndex={props.contractIndex}/>\n            </div>\n          )\n        })\n        : <> RESTAURANT LIST IS UNDEFINED </>\n      }\n    </div>\n  )\n}\n\nfunction mapStateToProps(state, ownProps) {\n  console.log('IN STATEMAP contract detail');\n  return {\n    clientList: state.adminReducer.clientList,\n    currentClient: state.adminReducer.currentClient,\n    restaurants: state.adminReducer.clientList[state.adminReducer.currentClient].contractList[ownProps.contractIndex].restaurantList\n  }\n}\n\nexport default connect(mapStateToProps)(ContractDetail);\n","import React, { useState, useEffect } from 'react';                 //REACT\n\nimport { useSelector, useDispatch, connect } from 'react-redux';    //REDUX\nimport { getContractsSuccess, getContractsError } from '../../../actions/admin.action';    //ACTIONS\n\nimport { getAllContracts } from '../../../services/AdminAPI';          //API FUNCTIONS\n\nimport ErrorFormField from '../../Common/ErrorFormField/ErrorFormField';   //COMPONENTS\nimport ContractForm from './ContractForm';\nimport ContractDetail from './ContractDetail';\n\nimport { Button, Form, Col, Row } from 'react-bootstrap';  //BOOTSTRAP\n\nimport { Formik } from 'formik';    //FORMIK\nimport * as Yup from 'yup';         //YUP\n\nimport styles from './ClientDetails.module.css'\n\nfunction ClientDetails(props) {\n\n  const dispatch = useDispatch();\n\n  const [addContrat, setAddContrat] = useState(false);\n\n  const client = props.clientList[props.currentClient];\n\n  const validationSchema = Yup.object().shape({\n    NameClient: Yup.string().required('Ce champ est obligatoire'),\n    adressClient: Yup.string().required('Ce champ est obligatoire'),\n    emailClient: Yup.string().required('Ce champ est obligatoire'),\n    phoneClient: Yup.string().required('Ce champ est obligatoire'),\n    dateRegistrationClient: Yup.date().required('Ce champ est obligatoire')\n  });\n\n  const handleSubmit = async (values, {setSubmitting, resetForm}) => {          //HANDLE SUBMIT\n   console.log('IN submit');\n }\n\n  useEffect( () => {\n    console.log('USE EFFECT CLIENT DETAILS');\n    if (client.contractList == null) {\n      getAllContracts(client.NameClient)\n        .then( res => {\n          dispatch(getContractsSuccess(res, props.clientList, props.currentClient));\n        })\n        .catch( err => {\n          dispatch(getContractsError(err));\n        })\n    }\n  });\n\n  console.log('currentClient.contractList : '+JSON.stringify(props.clientList[props.currentClient].contractList, null, 2));\n\n  return(\n    <div className={ styles.detailsContainer }>\n      <h1>Details : { client.NameClient } </h1>\n\n      <Formik\n        enableReinitialize\n        initialValues={ { NameClient: client.NameClient,\n                          adressClient: client.adressClient,\n                          emailClient: client.emailClient,\n                          phoneClient: client.phoneClient,\n                          dateRegistrationClient: client.dateRegistrationClient } }\n        validationSchema={ validationSchema }\n        onSubmit={ handleSubmit }\n      >\n        { ({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) =>{\n        return(\n          <div>\n            <Form as={Col} md='6' className={ styles.formContainer } onSubmit={ handleSubmit }>\n              <Form.Row>\n                <Form.Group as={ Col } md='6' controlId={ 'NameClientInput' }>                   { /*NAME*/ }\n                  <Form.Label> Nom </Form.Label>\n                  <Form.Control disabled\n                                isValid={ touched.NameClient && !errors.NameClient }\n                                isInvalid={ touched.NameClient && errors.NameClient }\n                                placeholder='Nom du client'\n                                onBlur={ handleBlur }\n                                value={ values.NameClient }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                  <ErrorFormField touched={touched.societe} message={errors.societe} />\n                </Form.Group>\n\n                <Form.Group as={ Col } md='6' controlId={ 'adressClientInput' }>                   { /*ADRESS*/ }\n                  <Form.Label> Adresse </Form.Label>\n                  <Form.Control disabled\n                                isValid={ touched.adressClient && !errors.adressClient }\n                                isInvalid={ touched.adressClient && errors.adressClient }\n                                placeholder='Adresse du client'\n                                onBlur={ handleBlur }\n                                value={ values.adressClient }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group as={ Col } md='6' controlId={ 'emailClientInput' }>                  { /*EMAIL*/ }\n                  <Form.Label> Email </Form.Label>\n                  <Form.Control disabled\n                                isValid={ touched.emailClient && !errors.emailClient }\n                                isInvalid={ touched.emailClient && errors.emailClient }\n                                placeholder='Email du client'\n                                onBlur={ handleBlur }\n                                value={ values.emailClient }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={ Col } md='6' controlId={ 'phoneClientInput' }>                  { /*PHONE*/ }\n                  <Form.Label> Téléphone </Form.Label>\n                  <Form.Control disabled\n                                isValid={ touched.phoneClient && !errors.phoneClient }\n                                isInvalid={ touched.phoneClient && errors.phoneClient }\n                                placeholder='Email du client'\n                                onBlur={ handleBlur }\n                                value={ values.phoneClient }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row >\n                <Form.Group as={ Col } md='4' controlId={ 'dateRegistrationClientInput' }>                 { /*DATE REGISTRATION*/ }\n                  <Form.Label> Date d'enregistrement </Form.Label>\n                  <Form.Control disabled\n                                type='date'\n                                isValid={ touched.dateRegistrationClient && !errors.dateRegistrationClient }\n                                isInvalid={ touched.dateRegistrationClient && errors.dateRegistrationClient }\n                                placeholder='Email du client'\n                                onBlur={ handleBlur }\n                                value={ values.dateRegistrationClient }\n                                onChange={ handleChange }>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n            </Form>\n          </div>\n        ) } }\n      </Formik>\n\n      <br/>\n\n      <Row className='justify-content-md-center'>\n        <Col md='2'>\n          <h1> Contrats </h1>\n        </Col>\n      </Row>\n      <Row>\n        <Col md={{ offset: 8 }}>\n          <Button onClick={ () => setAddContrat(!addContrat) }> Ajouter un contrat </Button>\n        </Col>\n      </Row>\n\n      <Row>\n        {\n          addContrat ?\n          <div>\n            <ContractForm />\n          </div>\n          : <> </>\n        }\n      </Row>\n\n      {\n        props.clientList[props.currentClient].contractList != undefined ?\n        //console.log(\"the client ocntract list\")\n        props.clientList[props.currentClient].contractList.map( (item, index) => {\n          return (\n            <>\n              <ContractDetail contractIndex={index}/>\n            </>\n          )\n        })\n        : <> CONTRAT IS UNDEFINED </>\n      }\n\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  console.log('IN STATEMAP CLIENT DETAILS, currentClient.contractList : '+state.adminReducer.clientList[state.adminReducer.currentClient].contractList);\n  return {\n    clientList: state.adminReducer.clientList,\n    currentClient: state.adminReducer.currentClient,\n    contractList: state.adminReducer.clientList[state.adminReducer.currentClient].contractList\n  }\n}\n\nexport default connect(mapStateToProps)(ClientDetails);\n","import React, { useEffect }  from 'react';\n\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\nimport { getAllClientsSuccess, getAllClientsError, getAllClientStart } from '../../../actions/admin.action';  //ACTIONS\n\nimport { getAllClients } from '../../../services/AdminAPI';           //API FUNCTIONS\n\nimport Row from 'react-bootstrap/Row'   //BOOTSTRAP\nimport Col from 'react-bootstrap/Col'\n\nimport AdminSideBar from '../topBar/AdminSideBar';    //COMPONENTS\nimport AdminGaspi from '../gaspillage/AdminGaspi';\nimport ClientDashboard from '../../client/dashboard/ClientDashboard';\nimport NewClientForm from '../home/NewClientForm';\nimport ClientDetails from '../home/ClientDetails';\n\nfunction AdminContainer(props) {\n\n  const dispatch = useDispatch();\n\n  useEffect( () => {\n    console.log('Use effect admin container, fetched : '+props.adminState.fetched+' fetching : '+props.adminState.fetching);\n    if (!props.adminState.fetched && !props.adminState.fetching) {\n      dispatch(getAllClientStart());\n      getAllClients()\n        .then(res => {\n          dispatch(getAllClientsSuccess(res.result));\n        })\n        .catch(err => {\n          dispatch(getAllClientsError(err));\n        })\n    }\n  });\n\n  const displayPage = (pageMode) => {\n    console.log('IN admin display page function = '+pageMode + ' fetched : '+props.adminState.fetched);\n    switch (pageMode) {\n      case 'displayClient':\n        console.log('IN client');\n        return <ClientDetails client={ props.adminState.currentClient } />;\n        break;\n      case 'createClient':\n        console.log('IN client');\n        return <NewClientForm />;\n        break;\n      case 'dashboard':\n        console.log('IN DASHBOARD, fetched : '+props.adminState.fetched);\n        return <ClientDashboard restaurantName={props.adminState.currentRestaurant}/>;\n        break;\n      case 'stat':\n        console.log('IN STAT');\n        return <AdminGaspi restaurantName={props.adminState.currentRestaurant} />;\n        break;\n      case 'advice':\n        console.log('IN advice');\n        return <h1>NOT READY YET</h1>;\n        break;\n      case 'restaurant':\n        return (<h1>NOT READY YET</h1>);\n        break;\n      default:\n        return <NewClientForm />;\n    }\n  }\n\n  return(\n    <>\n      <Row style={{ height:'100vh', margin: 0, padding: 0}}>\n\n        <Col md='2' className='fixed-top' style={{ margin: 0, padding: 0}}>\n          <AdminSideBar />\n        </Col>\n\n        <Col md={{span: 10, offset: 2}} style={{padding: '0px' }}>\n          {\n            displayPage(props.pageMode)\n          }\n        </Col>\n\n      </Row>\n    </>\n  )\n}\n\n\nfunction mapStateToProps(state) {\n  //console.log('WTF : '+JSON.stringify(state, null, 2));\n  console.log('IN admin container map to state : '+state.adminReducer.pageMode +' fetched : '+state.adminReducer.fetched + ' pageMode : '+state.adminReducer.pageMode);\n  return {\n    pageMode: state.adminReducer.pageMode,\n    adminState: state.adminReducer,\n  }\n}\n\nexport default connect(mapStateToProps)(AdminContainer);\n","import React, { useState} from 'react';              //REACT\nimport { useSelector, useDispatch, connect } from 'react-redux';    //REDUX\nimport { changePageAction } from '../../../actions/client.action';  //ACTIONS\n\nimport { updateUserPassword } from '../../../services/AdminAPI';  //API\n\nimport { Formik } from 'formik';    //FORMIK\nimport * as Yup from 'yup';         //YUP\n\nimport Row from 'react-bootstrap/Row';   //BOOTSTRAP\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\n\nimport styles from './ClientSideBar.module.css'; //CSS\n\nimport topSideBar from '../../../publics/TopSideBar.png';\n\nfunction ClientSideBar(props) {\n\n  const dispatch = useDispatch();\n\n  const changePage = (newPage) => {             //change the current page ( dashboard / stats / my restaurant / etc )\n    dispatch(changePageAction(newPage));\n  }\n\n  const Home = () => {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"20\" viewBox=\"0 0 16 20\">\n        <g id=\"house\" transform=\"translate(0)\">\n          <path id=\"Tracé_99\" data-name=\"Tracé 99\" d=\"M15.581,5.186l-7-5a1,1,0,0,0-1.162,0l-7,5A1,1,0,0,0,1.581,6.814L2,6.515V15a1,1,0,0,0,1,1H13a1,1,0,0,0,1-1V6.515A1.7,1.7,0,0,0,15,7a1,1,0,0,0,.582-1.814ZM12,14H10V11a2,2,0,0,0-4,0v3H4V5.086L8,2.229l4,2.857Z\" fill=\"#fff\"/>\n        </g>\n      </svg>\n    )\n  }\n\n  const Single = () => {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"20\" viewBox=\"0 0 16 20\">\n        <g id=\"single-02\" transform=\"translate(-1 0)\">\n          <path id=\"Union_10\" data-name=\"Union 10\" d=\"M-4-310a6.018,6.018,0,0,1,6-6H4a6.018,6.018,0,0,1,6,6Zm2.6-2H7.5A4.033,4.033,0,0,0,4-314H2.1A4.035,4.035,0,0,0-1.4-312Zm.4-9v-1a4.012,4.012,0,0,1,4-4,4.012,4.012,0,0,1,4,4v1a4.012,4.012,0,0,1-4,4A4.012,4.012,0,0,1-1-321Zm2-1v1a2.006,2.006,0,0,0,2,2,2.006,2.006,0,0,0,2-2v-1a2.006,2.006,0,0,0-2-2A2.006,2.006,0,0,0,1-322Z\" transform=\"translate(5 326)\" fill=\"#fff\"/>\n        </g>\n      </svg>\n    )\n  }\n\n  const Receipt_list = () => {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"16\" viewBox=\"0 0 14 16\">\n        <g id=\"receipt-list-42\" transform=\"translate(-1)\">\n          <path id=\"Tracé_102\" data-name=\"Tracé 102\" d=\"M14,0H2A.945.945,0,0,0,1,1V16l3-2,2,2,2-2,2,2,2-2,3,2V1A.945.945,0,0,0,14,0ZM12,10H4V8h8Zm0-4H4V4h8Z\" fill=\"#fff\"/>\n        </g>\n      </svg>\n    )\n  }\n  const Chart_Bar = () => {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n        <g id=\"chart-bar-32\" transform=\"translate(0 0)\">\n          <path id=\"Union_8\" data-name=\"Union 8\" d=\"M-481-8a.945.945,0,0,1-1-1v-9a.945.945,0,0,1,1-1h2a.945.945,0,0,1,1,1v9a.945.945,0,0,1-1,1Zm-6,0a.944.944,0,0,1-1-1V-23a.945.945,0,0,1,1-1h2a.945.945,0,0,1,1,1V-9a.944.944,0,0,1-1,1Zm-6,0a.945.945,0,0,1-1-1v-4a.945.945,0,0,1,1-1h2a.946.946,0,0,1,1,1v4a.945.945,0,0,1-1,1Z\" transform=\"translate(494 24)\" fill=\"#fff\"/>\n        </g>\n      </svg>\n    )\n  }\n  const Calendar = () => {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n        <g id=\"Calendar\" transform=\"translate(-24 -242)\">\n          <rect id=\"Rectangle_557\" data-name=\"Rectangle 557\" width=\"16\" height=\"16\" transform=\"translate(24 242)\" fill=\"none\"/>\n          <path id=\"Tracé_149\" data-name=\"Tracé 149\" d=\"M2,5v9H14V5ZM13,2h2a.945.945,0,0,1,1,1V15a.945.945,0,0,1-1,1H1a.945.945,0,0,1-1-1V3A.945.945,0,0,1,1,2H3V1A.945.945,0,0,1,4,0,.945.945,0,0,1,5,1V2h6V1a1,1,0,0,1,2,0ZM12,12H10V10h2ZM9,12H7V10H9Zm3-3H10V7h2ZM9,9H7V7H9ZM6,12H4V10H6Z\" transform=\"translate(24 242)\" fill=\"#fff\" fill-rule=\"evenodd\"/>\n        </g>\n      </svg>\n    )\n  }\n\n\n\n  const ReturnElement = (propElem) => {\n    if (props.pageMode == propElem.item) {\n      return (\n        <Container>\n          <Row>\n            <div className={styles.whiteSelectedMark}>\n            </div>\n\n            <div className={ styles.SelectedClientSideBarElement }>\n              <span className={styles.iconDivWhenSelected}>\n                {propElem.children}\n              </span>\n              <span className={styles.textElement}>\n                { propElem.title }\n              </span>\n            </div>\n          </Row>\n        </Container>\n      );\n    }\n    else {\n      return (\n        <Container>\n          <Row>\n            <div className={ styles.ClientSideBarElement } onClick={ () => changePage(propElem.item) }>\n              <span className={styles.sameColorMark}>\n              </span>\n\n\n              <span className={styles.iconDiv}>\n                {propElem.children}\n              </span>\n              <span className={styles.textElement}>\n                { propElem.title }\n              </span>\n            </div>\n          </Row>\n        </Container>\n      );\n    }\n  }\n\n  return(\n    <div>\n    <Col md={{span: 12, offset: 0}} className={styles.ClientSideBarContainer} style={{padding: '0px'}}>\n\n        <Container>\n        <Row>\n          <div className={styles.imageDiv}>\n            <img className={styles.image} src={topSideBar} alt=\"Logo\" />\n          </div>\n        </Row>\n        </Container>\n\n        <ReturnElement item={'dashboard'} title={'Mon tableau de bord'} > <Home /> </ReturnElement>\n        <ReturnElement item={'stat'} title={'Mes statistiques'} > <Chart_Bar /> </ReturnElement>\n        <ReturnElement item={'advice'} title={'Mon espace conseil'} > <Receipt_list /> </ReturnElement>\n        <ReturnElement item={'restaurant'} title={'Mes restaurants'} > <Calendar /> </ReturnElement>\n        <ReturnElement item={'account'} title={'Mon compte'} > <Single /> </ReturnElement>\n\n    </Col>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    pageMode: state.clientReducer.page,\n    userEmail: state.userReducer.login,\n  }\n}\n\nexport default connect(mapStateToProps)(ClientSideBar);\n\n/*  <Row style={{backgroundColor: 'orange'}}>\n    <Col style={{backgroundColor: 'blue'}} md={{span: 1, offset: 0}}>\n      <div className={styles.whiteSelectedMark}>\n      </div>\n    </Col>\n\n    <Col style={{backgroundColor: 'red'}} md={{span: 11, offset: 0}} onClick={ () => changePage(item) }>\n      <div className={ styles.SelectedClientSideBarElement }>\n        { title }\n      </div>\n    </Col>\n  </Row>\n  */\n","import React, { useState} from 'react';              //REACT\nimport { useSelector, useDispatch, connect } from 'react-redux';    //REDUX\nimport { changePageAction } from '../../../actions/client.action';  //ACTIONS\nimport { disconnectAction } from '../../../actions/connexion.action';  //ACTIONS\n\nimport { updateUserPassword } from '../../../services/AdminAPI';\n\nimport chef from '../../../publics/image.png';\nimport topSideBar from '../../../publics/TopSideBar.png';\n\nimport Row from 'react-bootstrap/Row';   //BOOTSTRAP\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Image from 'react-bootstrap/Image';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n\n\nimport SearchIcon from '@material-ui/icons/Search'; //Material-ui\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Divider from '@material-ui/core/Divider';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Grid from '@material-ui/core/Grid';\n\nimport styles from './ClientTopBar.module.css' //CSS\n\nfunction ClientTopBar(props) {\n\n  const dispatch = useDispatch();\n\n  const [updatePassword, setUpdatePassword] = useState(false);\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n\n\n\n  const changePage = (newPage) => {             //change the current page ( dashboard / stats / my restaurant / etc )\n    dispatch(changePageAction(newPage));\n  }\n\n  const disconnect = () => {\n    dispatch(disconnectAction());\n  }\n\n\n\n  return(\n    <Navbar className={styles.ClientTopBarContainer+\" justify-content-between\"}>\n      <div style={{visibility: 'hidden'}}>\n      <Form inline >\n       <InputGroup>\n         <InputGroup.Prepend>\n           <InputGroup.Text id=\"basic-addon1\">@</InputGroup.Text>\n         </InputGroup.Prepend>\n         <FormControl\n           placeholder=\"Username\"\n           aria-label=\"Username\"\n           aria-describedby=\"basic-addon1\"\n         />\n       </InputGroup>\n      </Form>\n      </div>\n\n      <Navbar.Collapse className=\"justify-content-end\">\n        <Navbar.Text className>{props.userState.login}</Navbar.Text>\n        <NavDropdown title={<img className={styles.image} src={chef} alt=\"Logo\" />} id=\"collasible-nav-dropdown\" drop='left'>\n          <NavDropdown.Item onClick={ () => changePage('account') }> Voir le profil </NavDropdown.Item>\n          <NavDropdown.Divider />\n          <NavDropdown.Item onClick={ () => disconnect() }> Déconnexion </NavDropdown.Item>\n        </NavDropdown>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userState: state.userReducer,\n  }\n}\n\nexport default connect(mapStateToProps)(ClientTopBar);\n\n\n/*\n\n<Col md={{span: 6}} className={styles.barElement}>\n{\n  /*\n    <div className={styles.leftTopBar} >\n      <SearchIcon />\n      Rechercher sur la plateforme\n    </div>\n\n}\n</Col>\n<Col md={{ span: 6}} className={styles.barElement}>\n  <div className={styles.rightElements}>\n    <Grid container >\n      <QuestionAnswerIcon />\n      <NotificationsIcon />\n      <Divider orientation=\"vertical\" flexItem />\n      {props.userState.login}\n      <Dropdown>\n        <Dropdown.Toggle id=\"dropdown-custom-components\" >\n          <Image className={styles.image} src={chef} alt=\"chefIcon\" />\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <Dropdown.Item eventKey=\"1\"> Se déconnecter</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </Grid>\n  </div>\n</Col>\n\n*/\n","import React, { useState} from 'react';              //REACT\nimport { useSelector, useDispatch, connect } from 'react-redux';    //REDUX\nimport { changePageAction } from '../../../actions/client.action';  //ACTIONS\n\nimport { updateUserPassword } from '../../../services/AdminAPI';  //API\n\nimport { Formik } from 'formik';    //FORMIK\nimport * as Yup from 'yup';         //YUP\n\nimport Row from 'react-bootstrap/Row';   //BOOTSTRAP\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nimport styles from './Account.module.css'   // CSS\n\nfunction ClientAccount(props) {\n\n  const dispatch = useDispatch();\n\n  const [updatePassword, setUpdatePassword] = useState(false);    //to know when to display the form\n\n  const updatePasswordValidationSchema = Yup.object().shape({\n    oldPassword: Yup.string().required('Ce champ est obligatoire'),\n    newPassword: Yup.string().required('Ce champ est obligatoire'),\n  });\n\n  const changePage = (newPage) => {             //change the current page ( dashboard / stats / my restaurant / etc )\n    dispatch(changePageAction(newPage));\n  }\n\n  const displayUpdatePassword = () => {          //display or hide the update password form\n    setUpdatePassword(!updatePassword);\n  };\n\n  const handlePassword = async (values) => {\n    console.log('In handle submit');\n    //setSubmitting(true);\n    updateUserPassword(values.oldPassword, values.newPassword, props.userState.login)\n      .then( res => {\n        console.log('In then update password : '+JSON.stringify(res, null, 2));\n        //dispatch(updatePassword());\n      })\n      .catch( err => {\n        console.log('ERROR ERROR : '+JSON.stringify(err, null, 2));\n      })\n    //setSubmitting(false);\n  }\n\n  return(\n    <Col className={styles.globalContainer}>\n      <Row>\n        <Col md={{span: 12}}>\n          <Row className=\"justify-content-md-center\">\n            <h1 className={styles.pageTitle}> Compte de {props.userState.login} </h1>\n          </Row>\n        </Col>\n      </Row>\n\n      <Formik\n        enableReinitialize\n        initialValues={ { oldPassword: '',\n                          newPassword: '' } }\n        validationSchema={ updatePasswordValidationSchema }\n        onSubmit={ handlePassword }\n      >\n      { ({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => {\n      return(\n        <div>\n          <Form onSubmit={ handleSubmit }>\n            <Form.Row>\n              <Form.Group as={ Col } md='4' controlId={ 'oldPassword' }>                   { /*OLD PASSWORD*/ }\n                <Form.Label> Mot de passe actuel {errors.oldPassword} </Form.Label>\n                <Form.Control isValid={ touched.oldPassword && !errors.oldPassword }\n                              isInvalid={ touched.oldPassword && errors.oldPassword }\n                              placeholder=''\n                              onBlur={ handleBlur }\n                              value={ values.oldPassword }\n                              onChange={ handleChange }>\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group as={ Col } md='4' controlId={ 'newPassword' }>                   { /*NEW PASSWORD*/ }\n                <Form.Label> Nouveau mot de passe {errors.newPassword} </Form.Label>\n                <Form.Control isValid={ touched.newPassword && !errors.newPassword }\n                              isInvalid={ touched.newPassword && errors.newPassword }\n                              placeholder=''\n                              onBlur={ handleBlur }\n                              value={ values.newPassword }\n                              onChange={ handleChange }>\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n\n            <Row className='row justify-content-center'>\n              <Col md='8'>\n                <Button variant='primary' type='submit' disabled={isSubmitting}> Valider </Button>\n              </Col>\n            </Row>\n          </Form>\n        </div>\n      ) } }\n      </Formik>\n    </Col>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userState: state.userReducer,\n  }\n}\n\nexport default connect(mapStateToProps)(ClientAccount);\n","import React, { useEffect } from 'react';\nimport { Switch, Route, withRouter } from \"react-router-dom\";   //ROUTER\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\n\nimport Row from 'react-bootstrap/Row'   //BOOTSTRAP\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\n\nimport ClientSideBar from '../topBar/ClientSideBar';    //COMPONENTS\nimport ClientTopBar from '../topBar/ClientTopBar';\nimport ClientDashboard from '../dashboard/ClientDashboard';\nimport AdminGaspi from '../../administration/gaspillage/AdminGaspi';\nimport ClientAccount from '../account/ClientAccount';\n\nimport styles from './ClientContainer.module.css'; //CSS\n\nfunction ClientContainer(props) {\n\n  useEffect( () => {\n\n  });\n\n  const displayPage = (pageMode) => {\n    console.log('IN DISPLAY PAGE');\n    switch (pageMode) {\n      case 'dashboard':\n        console.log('IN dashboard');\n        return <ClientDashboard restaurantName={props.currentRestaurantName}/>;\n        break;\n      case 'stat':\n        console.log('IN STAT');\n        return <AdminGaspi restaurantName={props.currentRestaurantName} />;\n        break;\n      case 'advice':\n        console.log('IN advice');\n        return <h1>NOT READY YET</h1>;\n        break;\n      case 'restaurant':\n        return (<h1>NOT READY YET</h1>);\n        break;\n      case 'account':\n        return <ClientAccount />;\n        break;\n      default:\n        return (<ClientDashboard />);\n    }\n  }\n\n  console.log('BEFORE RENDERING !');\n\n  return(\n    <>\n      <Row style={{ height:'100vh', margin: 0, padding: 0}}>\n        <Col md={{span: 2, offset: 0}} className='fixed-top' style={{ padding: 0}}>\n          <ClientSideBar />\n        </Col>\n\n        <Col md={{span: 10, offset: 2}}>\n          <Row>\n            <Col style={{ margin: 0, padding: 0}}>\n              <ClientTopBar />\n            </Col>\n          </Row>\n          <Row className={styles.ContentBigRow}>\n            <Col>\n              <div className={styles.ClientTop}>\n              </div>\n              <Row className={styles.ContentDiv + \"justify-content-md-center\"}>\n                {\n                  displayPage(props.pageMode)\n                }\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nfunction mapStateToProps(state) {\n  console.log('IN container map to state : '+state.clientReducer.page);\n  return {\n    pageMode: state.clientReducer.page,\n    currentRestaurantName: state.navigationReducer.currentRestaurantName,\n  }\n}\n\nexport default connect(mapStateToProps)(ClientContainer);\n","import React from 'react';\n\nimport { LoginRoute } from './helper/routeHelper'; //HELPERS\nimport PrivateClientRoute from './helper/PrivateClientRoute';\nimport PrivateAdminRoute from './helper/PrivateAdminRoute';\n\nimport Display from './components/Display';                                 //COMPONENTS\nimport ConnexionContainer from './components/connexion/Connexion';\nimport AdminContainer from './components/administration/container/AdminContainer';\nimport ClientContainer from './components/client/container/ClientContainer';\n\nimport { Switch, Route, withRouter } from \"react-router-dom\";   //ROUTER\nimport { useSelector, useDispatch } from 'react-redux';         //REDUX\n\nimport { increment } from './actions/admin.action';             //ACTIONS\n\nfunction App() {\n\n  return (\n    <>\n      <Switch>\n        <Route exact path='/connexion/admin'>\n          <LoginRoute component={ <ConnexionContainer connexionRedirectPath='/adminConsole' /> } />\n        </Route>\n        <Route exact path='/connexion/client'>\n           <LoginRoute component={ <ConnexionContainer connexionRedirectPath='/clientConsole' /> } />\n        </Route>\n\n        <Route exact path='/adminConsole'>\n           <PrivateAdminRoute component={ <AdminContainer /> } />\n        </Route>\n        <Route exact path='/clientConsole'>\n           <PrivateClientRoute component={ <ClientContainer /> } />\n        </Route>\n\n        <Route path=\"/\">\n          <LoginRoute component={ <ConnexionContainer connexionRedirectPath='/clientConsole' /> } />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';                          //REACT\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';             //REDUX\nimport applicationStore from './store/store';\n\nimport { BrowserRouter } from 'react-router-dom';   //ROUTER\n\nimport 'bootstrap/dist/css/bootstrap.min.css';      //BOOTSTRAP\nimport Container from 'react-bootstrap/Container'\n\nReactDOM.render(\n  <Provider store={applicationStore}>\n    <BrowserRouter>\n      <Container fluid style={{padding: 0, margin: 0, height:'100%'}}>\n        <App />\n      </Container>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clientList\":\"ClientList_clientList__fRn1R\",\"clientElement\":\"ClientList_clientElement__1ESdj\",\"accordion\":\"ClientList_accordion__WbYmQ\",\"toggleElement\":\"ClientList_toggleElement__3_3Pw\",\"active\":\"ClientList_active__22h3S\",\"unactive\":\"ClientList_unactive__1bq3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formCheck\":\"Form_formCheck__1C02l\",\"formLabel\":\"Form_formLabel__3HHNS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsContainer\":\"ClientDetails_detailsContainer__sgPXq\",\"formContainer\":\"ClientDetails_formContainer__1b-EO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"global\":\"DashboardElement_global__3DIAH\",\"value\":\"DashboardElement_value__2ry9i\",\"title\":\"DashboardElement_title__2vzes\",\"legend\":\"DashboardElement_legend__OIdNK\",\"centerComponent\":\"DashboardElement_centerComponent__3HGsd\"};","import React from 'react';                    // REACT\nimport styles from './Form.module.css';       //CSS\n\nimport Form from 'react-bootstrap/Form';       //BOOTSTRAP\n\nfunction FormRadioElement(props) {\n\n  return(\n    <Form.Check type='radio'\n                className={styles.formCheck}\n                id='line'\n\n    >\n      <Form.Check.Input type='radio'\n                        name={props.name}\n                        checked={ props.currentValue == props.value }\n                        onChange={ props.onChange }\n                        onClick= { props.onClick }\n      />\n      <Form.Check.Label className={styles.formLabel}> {props.label} </Form.Check.Label>\n    </Form.Check>\n  )\n}\n\nexport default FormRadioElement;\n","import React, { useState } from 'react';\n\nimport { useParams } from \"react-router-dom\";\n\nimport ErrorFormField from '../../Common/ErrorFormField/ErrorFormField';   //COMPONENTS\nimport Line from './Line';\nimport Bar from './Bar';\nimport FormRadioElement from './FormRadioElement';\nimport FormCheckboxElement from './FormCheckboxElement';\n\nimport { useSelector, useDispatch, connect } from 'react-redux';           //REDUX\n//import { getGaspillageDataSuccess, getGaspillageDataError } from '../../../actions/admin.action';  //ACTIONS\n\nimport { getGaspillageData, getFood, getFoodsOfCategories } from '../../../services/AdminAPI';           //API FUNCTIONS\n\nimport { Button, Form, Col, Row, Container, Dropdown, DropdownButton, ButtonGroup, SplitButton } from 'react-bootstrap';  //BOOTSTRAP\n\nimport { Formik } from 'formik';    //FORMIK\nimport * as Yup from 'yup';         //YUP\n\nimport styles from './AdminGaspi.module.css'; //CSS\n\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nconst moment = require('moment');   //MOMENT\n\nfunction AdminGaspi(props) {\n\n  let [ready, setReady] = useState(false);\n  let [rangeDataTitle, setRangeDataTitle] = useState('');\n  let [type, setType] = useState('line');\n  let [legendType, setLegendType] = useState('');\n  let [finalFoodData, setFinalFoodData] = useState();\n  let [finalData, setFinalData] = useState({});\n  let [displayedData, setDisplayedData] = useState({});\n  let [displayedBarData, setDisplayedBarData] = useState({});\n\n  const gaspillageValidationSchema = Yup.object().shape({\n    dateStart: Yup.date().required('Ce champ est obligatoire'),\n    dateEnd: Yup.date().min(Yup.ref('dateStart')).required('Ce champ est obligatoire'),\n  });\n\n  console.log('BEFORE RENDERIIIIIIIIIIIIIIIIIIIIIIIIIING !'); //---------------------------------------------------------------------------------------------------------------------------------------------------------\n\n  const getAllDates = (startDate, endDate) => {\n    console.log('Begin get all dates');\n    const startDay = moment(startDate);                        //BEGIN GET ALL DATES\n    const endDay = moment(endDate);\n    const allDates = [];\n    allDates.push(startDay.clone());\n    while( (startDay.add(1, 'days')).isBefore(endDay) ){\n      allDates.push( startDay.clone() );\n    }\n    allDates.push( endDay.clone() );\n    console.log('ALL dates : '+JSON.stringify(allDates, null, 2));\n    return allDates;\n  }\n\n  const getFoodsFromCategories = async (categoryList) => {\n    console.log('Begin get food from categories');\n    const categoriesFoods = [];\n    for (const category of categoryList) {\n      await getFoodsOfCategories(category)\n        .then( res => categoriesFoods.push(res.Items))\n        .catch( err => console.log('ERROR when getting foods of category' + err))\n    }\n    console.log('the food categories : '+JSON.stringify(categoriesFoods, null, 2));\n    return categoriesFoods;\n  }\n\n  const getFoods = async (foodList) => {\n    console.log('Begin get foods');\n    const foods = [];\n    for (const food of foodList) {\n      await getFood(food)\n        .then( res => foods.push(res.Items[0]))\n        .catch( err => console.log('ERROR when getting food: ' + err))\n    }\n    console.log('the foods :'+ JSON.stringify(foods, null, 2));\n    return foods;\n  }\n\n  const storeFoodData = async (foodList, foodOfCategoriesLits) => {\n    console.log('Begin store food data');\n    var foodData = new Map();\n    for (const food of foodList) {\n      foodData.set(food.nameFood, food);\n    }\n    for (const foodsOfCategories of foodOfCategoriesLits) {\n      for (const food of foodsOfCategories) {\n        foodData.set(food.nameFood, food);\n      }\n    }\n    /*\n    for (const [categoryIndex, categoryItems] of foodOfCategoriesLits.entries()) {\n\n      var totalDensity = 0;\n      var totalPrice = 0;\n      var totalCo2 = 0;\n      for (const food of categoryItems) {\n        totalDensity = totalDensity + food.densityFood;\n        totalPrice = totalPrice + food.priceFood;\n        totalCo2 = totalCo2 + food.co2Food;\n      }\n      const categoryFood = {\n        nameFood: categoryItems[0].categoryFood,\n        densityFood: totalDensity/(categoryItems.length),\n        priceFood: totalPrice/(categoryItems.length),\n        co2Food: totalCo2/(categoryItems.length),\n      };\n      foodData.set(categoryItems[0].categoryFood, categoryFood);\n      //console.log('the food of CATEGORY : '+JSON.stringify())\n    }\n    */\n    console.log('Stored food data : '+foodData);\n    await setFinalFoodData(foodData);\n    return foodData;\n  }\n\n  const getSamplesForCategories = async (foodsOfCategories, allDates) => {\n    console.log('Begin getsamples for categories');\n    const samplesForCategories = [];\n    for (const foodsOfCategory of foodsOfCategories) {\n      //const foodsNameOfCategory = foodsOfCategory.map( food => food.nameFood)\n      const samples = await getSamplesForFoods(foodsOfCategory, allDates);\n      samplesForCategories.push(samples);\n    }\n    console.log('The sample for the categories : '+JSON.stringify(samplesForCategories, null, 2));\n    return samplesForCategories;\n  }\n\n  const getSamplesForFoods = async (foods, allDates) => {\n    console.log('Begin get samples for foods');\n    const samplesForFoods = [];\n    for (const food of foods) {\n      const samplesForFood = await getSamplesForFood(food, allDates);\n      samplesForFoods.push(samplesForFood);\n    }\n    console.log('The samples for foodS : '+JSON.stringify(samplesForFoods,null, 2));\n    return samplesForFoods;\n  }\n\n  const getSamplesForFood = async (food, allDates) => {\n    console.log('Begin get samples for food : '+ JSON.stringify(food, null, 2));\n    const samplesForFood = [];\n    for (const date of allDates) {\n      const stringDate = moment(date).format('YYYY-MM-DD');\n      await getGaspillageData(props.restaurantName, food.nameFood, stringDate)\n        .then( res => {\n          console.log('Value of sample: '+JSON.stringify(res.Items, null, 2));\n\n          for (let indexSample = 0; indexSample < res.Items.length; indexSample++) {\n            console.log('sample item : '+JSON.stringify(res.Items[indexSample], null, 2));\n            res.Items[indexSample].mass = (res.Items[indexSample].volumeSample * food.densityFood);\n            res.Items[indexSample].co2 = ((res.Items[indexSample].volumeSample * food.densityFood) * (food.co2Food + (204.97/1000000)));\n            res.Items[indexSample].cost = (((res.Items[indexSample].volumeSample * food.densityFood) * (food.priceFood/1000))*2.5);\n          }\n          console.log('AAAAAAAAAAAAAAAAAAAAAAAAAAA : '+JSON.stringify(res.Items, null, 2));\n          samplesForFood.push(res.Items);\n        })\n        .catch( err => console.log('ERROR when getting samples for a date : '+err))\n    }\n    console.log('The samples for a food : '+ JSON.stringify(samplesForFood, null, 2));\n    return samplesForFood;\n  }\n\n  const createDataFromFoodsSamples = (foodsName, foodsSamples, allDates) => {\n    console.log('Begin create data from foods samples');\n    const foodsData = [];\n    for (const [foodIndex, foodItem] of foodsSamples.entries()) {\n      const itemColor = 'hsl('+foodIndex*30+', 70%, 50%)';\n      const foodData = {\n        id: foodsName[foodIndex],\n        color: itemColor,\n        data: []\n      }\n      for (const [dateIndex, dateItem] of foodsSamples[foodIndex].entries()) {\n        var totalVolume = 0;\n        var totalMass = 0;\n        var totalCost = 0;\n        var totalCo2 = 0;\n        var numberOfTray = 0;\n        for (const sample of foodsSamples[foodIndex][dateIndex]) {\n          console.log('SAMPLE COOOOOOST : '+sample.cost);\n          totalVolume = totalVolume + sample.volumeSample;\n          totalMass += sample.mass;\n          totalCost += sample.cost;\n          totalCo2 += sample.co2;\n          numberOfTray = numberOfTray + 1;\n          console.log('TOTAAAAAL COOOOOOST : '+totalCost);\n        }\n\n        const dataDay = {\n          x: moment(allDates[dateIndex]).format('YYYY-MM-DD'),\n          volume: totalVolume,\n          mass: totalMass,\n          cost: totalCost,\n          co2: totalCo2,\n          tray: numberOfTray\n        }\n        console.log(\"DAYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY : \"+JSON.stringify(dataDay, null, 2));\n        foodData.data.push(dataDay);\n      }\n      foodsData.push(foodData);\n    }\n    console.log('The FOODS DATAS : '+JSON.stringify(foodsData, null, 2));\n    return foodsData;\n  }\n\n  const createDataFromCategoriesSamples = (categoriesName, categoriesSamples, allDates) => {\n    console.log('Begin create data from categories samples : '+JSON.stringify(categoriesSamples, null, 2));\n    const categoriesData = [];\n    for (const [categoryIndex, categoryItem] of categoriesSamples.entries()) {    //pour chaque category\n      const itemColor = 'hsl('+(330-(categoryIndex*30))+', 70%, 50%)';\n      const categoryData = {\n        id: categoriesName[categoryIndex],\n        color: itemColor,\n        data: []\n      }\n      var data = [];\n      for (const [foodIndex, foodItem] of categoriesSamples[categoryIndex].entries()) {                   //pour chaque food de la category\n        for (const [dateIndex, dateItem] of categoriesSamples[categoryIndex][foodIndex].entries()) {      //pour chaque date de la food\n          console.log('Date Item : '+JSON.stringify(dateItem, null, 2));\n          var totalVolume = 0;\n          var numberOfTray = 0;\n          var totalMass = 0;\n          var totalCost = 0;\n          var totalCo2 = 0;\n          for (const sample of categoriesSamples[categoryIndex][foodIndex][dateIndex]) {\n              totalVolume = totalVolume + sample.volumeSample;\n              totalMass += sample.mass;\n              totalCost += sample.cost;\n              totalCo2 += sample.co2;\n              numberOfTray = numberOfTray + 1;\n          }\n          if (data[dateIndex] == undefined){\n            data[dateIndex] = {x: '', volume: 0, mass: 0, cost: 0, co2: 0, tray: 0};\n          }\n          data[dateIndex].x = moment(allDates[dateIndex]).format('YYYY-MM-DD');\n          data[dateIndex].volume = data[dateIndex].volume + totalVolume;\n          data[dateIndex].mass = data[dateIndex].mass + totalMass;\n          data[dateIndex].cost = data[dateIndex].cost + totalCost;\n          data[dateIndex].co2 = data[dateIndex].co2 + totalCo2;\n          data[dateIndex].tray = data[dateIndex].tray + numberOfTray;\n        }\n      }\n      categoryData.data = data;\n      categoriesData.push(categoryData);\n    }\n    return categoriesData;\n  }\n\n  const aggregateData = (data, timeScale) => {\n    console.log('Begin aggregate data : '+JSON.stringify(data, null, 2));\n    const aggregatedData = [];\n    for (const [indexLine, itemLine] of data.entries()) {     //pour chaque 'ligne' (food ou category)\n      switch (timeScale) {\n        case 'jour':\n          console.log('In jour');\n          aggregatedData.push(itemLine);\n          break;\n        case 'semaine':\n          console.log('In semaine');\n          var currentWeek = moment(itemLine.data[0].x).week();\n          const weekData = [ {                    //on créé une nouvelle donnée\n                              x: itemLine.data[0].x,\n                              volume: 0,\n                              mass: 0,\n                              cost: 0,\n                              co2: 0,\n                              tray: 0\n                             } ];\n          var indexData = 0;\n          for (const [indexDay, itemDay] of itemLine.data.entries()) {\n            if (currentWeek == moment(itemDay.x).week()) {\n              weekData[indexData].volume += itemDay.volume ;\n              weekData[indexData].mass += itemDay.mass ;\n              weekData[indexData].cost += itemDay.cost ;\n              weekData[indexData].co2 += itemDay.co2 ;\n              weekData[indexData].tray = weekData[indexData].tray + itemDay.tray ;\n            }\n            else {\n              indexData = indexData +1;\n              currentWeek = moment(itemDay.x).week();\n              weekData[indexData] = itemDay;\n            }\n          }\n\n          const newLineDataWeek = {\n            id: data[indexLine].id,\n            color: data[indexLine].color,\n            data: weekData\n          };\n          aggregatedData.push(newLineDataWeek);\n          break;\n        case 'mois':\n          console.log('In month');\n          var currentMonth = moment(itemLine.data[0].x).month();\n          const monthData = [ {                    //on créé une nouvelle donnée\n                              x: data[0].x,\n                              volume: 0,\n                              mass: 0,\n                              cost: 0,\n                              co2: 0,\n                              tray: 0\n                             } ];\n          var indexData = 0;\n          for (const [indexDay, itemDay] of itemLine.data.entries()) {\n            if (currentMonth == moment(itemDay.x).month()) {\n              monthData[indexData].volume += itemDay.volume ;\n              monthData[indexData].mass += itemDay.mass ;\n              monthData[indexData].cost += itemDay.cost ;\n              monthData[indexData].co2 += itemDay.co2 ;\n              monthData[indexData].tray = monthData[indexData].tray + itemDay.tray ;\n            }\n            else {\n              indexData = indexData +1;\n              currentMonth = moment(itemDay.x).month();\n              monthData[indexData] = itemDay;\n            }\n          }\n          const newLineDataMonth = {\n            id: data[indexLine].id,\n            color: data[indexLine].color,\n            data: monthData\n          };\n          aggregatedData.push(newLineDataMonth);\n          break;\n        default:\n          console.log('In default');\n          aggregatedData.push(itemLine);\n          break;\n      }\n    }\n    console.log('The aggregated Datas : '+JSON.stringify(aggregatedData, null, 2));\n    return aggregatedData;\n  }\n\n  const createDisplayedData = async (dataTypeToDisplay, dataFinal, foodData) => {\n    console.log('Begin create displayed data, the final data is : '+JSON.stringify(dataFinal, null, 2));\n    console.log('The foods data are : '+foodData);\n    switch(dataTypeToDisplay) {\n      case 'mass':\n        setLegendType('Masse en Kg');\n        const massData = dataFinal.map( item => { return {  id: item.id,\n                                                            color: item.color,\n                                                            data: item.data.map( dataItem => { return { x: dataItem.x,\n                                                                                                        y: dataItem.mass\n                                                                                                      };\n                                                                                             })\n                                                         };\n                                                } );\n        console.log('Mass Data : '+JSON.stringify(massData, null, 2));\n        await createBarData(massData);\n        setDisplayedData(massData);\n        break;\n\n      case 'co2':\n        setLegendType('Quantité de Co2 en Kg');\n        const co2Data = dataFinal.map( item => { return {  id: item.id,\n                                                            color: item.color,\n                                                            data: item.data.map( dataItem => { return { x: dataItem.x,\n                                                                                                        y: dataItem.co2,\n                                                                                                      }; // (   ml    *        g/ml)                      * (       gCo2/g                 + (gCo2/T) / 1M\n                                                                                             })\n                                                         };\n                                                } );\n        console.log('CO2 Data : '+JSON.stringify(co2Data, null, 2));\n        await createBarData(co2Data);\n        setDisplayedData(co2Data);\n        break;\n\n      case 'cost':\n        setLegendType('Coût en €');\n        const costData = dataFinal.map( item => { return {  id: item.id,\n                                                            color: item.color,\n                                                            data: item.data.map( dataItem => { return { x: dataItem.x,\n                                                                                                        y: dataItem.cost,\n                                                                                                      };   //     ml    *    g/ml                          *              (€/Kg)            /1000\n                                                                                             })\n                                                         };\n                                                } );\n        console.log('Cost Data : '+JSON.stringify(costData, null, 2));\n        await createBarData(costData);\n        setDisplayedData(costData);\n        break;\n\n      case 'tray':\n        setLegendType('Nombre de plateau');\n        const trayData = dataFinal.map( item => {\n          return {  id: item.id,\n                    color: item.color,\n                    data: item.data.map( dataItem => { return { x: dataItem.x,\n                                                                y: dataItem.tray\n                                                              };\n                                                     })\n                 }\n        } );\n        console.log('Tray Data : '+JSON.stringify(trayData, null, 2));\n        await createBarData(trayData);\n        setDisplayedData(trayData);\n        break;\n\n      default:\n\n        break;\n    }\n    setReady(true);\n  }\n\n  const createBarData = (data) => {\n    console.log('In create bar data');\n    const barData = [];\n    for (const line of data) {\n      for (const [dataIndex, dataItem] of line.data.entries()) {\n        if (barData[dataIndex] == undefined) {\n          barData[dataIndex] = { date: dataItem.x }\n        }\n        eval(\"barData[\"+dataIndex+\"].\" + line.id + \" = \" + dataItem.y + \";\");\n      }\n    }\n    console.log('The BAR DATA : '+JSON.stringify(barData, null, 2));\n    setDisplayedBarData(barData);\n  }\n\n  const handleSubmit = async (values, {setSubmitting, resetForm}) => {\n    setSubmitting(true);\n    console.log('IN HANDLE SEARCH GASPI !');\n    setRangeDataTitle('du '+values.dateStart+' au '+values.dateEnd);\n    const allDates = await getAllDates(values.dateStart, values.dateEnd);\n\n    const allFoodsOfCategories = await getFoodsFromCategories(values.categoryCheck);\n    const allFoods = await getFoods(values.foodCheck);\n    const foodData = await storeFoodData(allFoods, allFoodsOfCategories);\n\n    const categoriesSamples = await getSamplesForCategories(allFoodsOfCategories, allDates, foodData);\n    const foodsSamples = await getSamplesForFoods(allFoods, allDates, foodData);\n\n    const foodsData = await createDataFromFoodsSamples(values.foodCheck, foodsSamples, allDates);\n    const categoriesData = await createDataFromCategoriesSamples(values.categoryCheck, categoriesSamples, allDates);\n\n    const allData = foodsData.concat(categoriesData);\n    const aggregatedData = await aggregateData(allData, values.timeScale);\n    await setFinalData(aggregatedData);\n\n    createDisplayedData('mass', aggregatedData, foodData);\n  }\n\n  const [displayDatePickers, setDisplayDatePickers] = useState(false);\n\n  const CalendarIcon = () => {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"39.653\" height=\"39.658\" viewBox=\"0 0 39.653 39.658\">\n        <g id=\"Calendar\" transform=\"translate(-30 -241)\">\n          <path id=\"Tracé_149\" data-name=\"Tracé 149\" d=\"M4.957,12.393V34.7H34.7V12.393ZM32.218,4.957h4.957a2.342,2.342,0,0,1,2.478,2.479V37.179a2.342,2.342,0,0,1-2.478,2.479H2.478A2.342,2.342,0,0,1,0,37.179V7.436A2.342,2.342,0,0,1,2.478,4.957H7.435V2.479A2.342,2.342,0,0,1,9.913,0a2.342,2.342,0,0,1,2.478,2.479V4.957h14.87V2.479a2.478,2.478,0,1,1,4.957,0ZM29.74,29.743H24.783V24.786H29.74Zm-7.435,0H17.348V24.786H22.3Zm7.435-7.436H24.783V17.35H29.74Zm-7.435,0H17.348V17.35H22.3ZM14.87,29.743H9.913V24.786H14.87Z\" transform=\"translate(30 241)\" fill=\"#90c261\" fill-rule=\"evenodd\"/>\n        </g>\n      </svg>\n    )\n  }\n\n  const SearchIcon = () => {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40.007\" height=\"40.007\" viewBox=\"0 0 40.007 40.007\">\n        <path id=\"icon_search\" d=\"M31.755,28.079a16.944,16.944,0,0,0,3.5-10.437A17.552,17.552,0,0,0,17.753,0,17.766,17.766,0,0,0,0,17.643,17.766,17.766,0,0,0,17.753,35.285a16.67,16.67,0,0,0,10.5-3.479l7.5,7.455a2.427,2.427,0,0,0,3.5,0,2.392,2.392,0,0,0,0-3.479Zm-14,1.988A12.556,12.556,0,0,1,5,17.643a12.752,12.752,0,0,1,25.5,0A12.556,12.556,0,0,1,17.753,30.067Z\" fill=\"#90c261\"/>\n      </svg>\n    )\n  }\n\n  const KnifeForkIcon = () => {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"37.814\" viewBox=\"0 0 40 37.814\">\n        <g id=\"d030eae21143eec06e9d33401e787d27\" transform=\"translate(-9.925 -36.825)\">\n          <path id=\"Tracé_359\" data-name=\"Tracé 359\" d=\"M162.781,102.5a2.431,2.431,0,0,0-1.478-.7c-1.033-.1-3.861,1.551-5.453,2.547a52.3,52.3,0,0,0-9.131,7.253l-7.469,7.465a2.441,2.441,0,0,0,0,3.449l.037.033L129.038,132.79a2.439,2.439,0,0,0,3.449,3.449l30.294-30.294a2.451,2.451,0,0,0,.571-2.543,2.328,2.328,0,0,0-.571-.906Z\" transform=\"translate(-113.567 -62.313)\" fill=\"#90c261\"/>\n          <path id=\"Tracé_360\" data-name=\"Tracé 360\" d=\"M563.349,592.7l-3.449,3.449,10.71,10.71a2.437,2.437,0,1,0,3.445-3.449L563.349,592.7Z\" transform=\"translate(-527.527 -533.187)\" fill=\"#90c261\"/>\n          <path id=\"Tracé_361\" data-name=\"Tracé 361\" d=\"M22,52.514l2.678,2.678,3.4-3.4-2.547-2.547a4.7,4.7,0,0,0-1.18-4.653c-.012-.012-.029-.02-.041-.033s-.02-.029-.033-.041l-7.457-7.457A.8.8,0,0,0,15.683,38.2l6.926,6.922a.014.014,0,0,0,.008,0,.5.5,0,0,1-.706.706l0,0h0L14.977,38.9a.8.8,0,0,0-1.135,1.135l6.926,6.931a0,0,0,0,1,0,0,.5.5,0,0,1-.706.706,0,0,0,0,0,0,0h0l-6.926-6.931A.8.8,0,1,0,12,41.873L18.928,48.8l0,0a.5.5,0,1,1-.706.706,0,0,0,0,0,0,0v0L11.3,42.579a.8.8,0,1,0-1.135,1.135l7.461,7.461c.012.012.029.02.041.033s.02.029.033.041A4.7,4.7,0,0,0,22,52.514Z\" fill=\"#90c261\"/>\n          <path id=\"Tracé_362\" data-name=\"Tracé 362\" d=\"M585.788,614.592,576,604.8l-3.4,3.4,9.792,9.792a2.4,2.4,0,1,0,3.4-3.4Z\" transform=\"translate(-539.709 -544.793)\" fill=\"#90c261\"/>\n        </g>\n      </svg>\n    )\n  }\n\n  const BarChartIcon = () => {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51.872\" height=\"39.532\" viewBox=\"0 0 51.872 39.532\">\n        <path id=\"Bar_Chart\" data-name=\"Bar Chart\" d=\"M88,27.766V-11.766h6.873V27.766Zm-9,0v-13.4h8v13.4Zm-9,0V8.621h8V27.766Zm-9,0V.963h8v26.8Zm-9,0V8.621h8V27.766Zm-9,0V-5.99h8V27.766Z\" transform=\"translate(-43 11.766)\" fill=\"#90c261\"/>\n      </svg>\n    )\n  }\n\n  return(\n    <Col className={styles.globalContainer}>\n\n      <Formik\n        enableReinitialize\n        initialValues={ { dateStart: '',\n                          dateEnd: '',\n                          timeScale: 'jour',\n                          graphType: 'line',\n                          foodCheck: [],\n                          categoryCheck: [] } }\n        validationSchema={ gaspillageValidationSchema }\n        onSubmit={ handleSubmit }\n      >\n        { ({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting, setFieldValue }) => {\n        console.log('the VALUES : '+JSON.stringify(values, null, 2));\n        return(\n          <div>\n            <Form onSubmit={ handleSubmit }>\n              <Row>\n                <Col md={{span: 12, offset: 0}}>\n                  <Row className=\"justify-content-md-center\">\n                      <style type=\"text/css\">\n                      {`\n                       .btn-custom-refresh {\n                         color: #90c261;\n                        }\n                      `}\n                      </style>\n                      <h1 className={styles.pageTitle}> Mes statistiques <Button variant='custom-refresh' type='submit' disabled={isSubmitting}> <RefreshIcon fontSize='large' /> </Button> </h1>\n                  </Row>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col md={{span: 3, offset: 0}}>\n                  <Row className=\"justify-content-md-center\">\n                    <div className={styles.FormElement}>\n                      <Container>\n                        <Row>\n                          <Col md={{span: 7}}>\n                            <Row>\n                              <p className={styles.formItemTitle}>Période d'étude</p>\n                            </Row>\n                            <Row>\n                            <style type=\"text/css\">\n                              {`\n                                @import url('https://fonts.googleapis.com/css2?family=Muli:wght@200;700&display=swap');\n\n                                .btn-custom {\n                                  font-size: 15px;\n                                  border-color: #a0a0a0;\n                                  border-width: 1px;\n                                  font-family: 'Muli', sans-serif;\n                                }\n                              `}\n                            </style>\n\n                              <DropdownButton as={ButtonGroup} style={{fontSize: '5px'}} className={styles.dropdownElement} variant='outline-secondary' title=\"Dates début / fin\" >\n                                <div className={styles.dropdownDate}>\n                                  <Form.Row>\n                                    <Form.Group as={Col} md={{span: 5, offset: 0}} controlId={ 'dateStart' }>                   { /*Start*/ }\n                                      <Form.Label style={{color: '#666666'}} classname={styles.dateDropDownTitles}> Date de début </Form.Label>\n                                      <Form.Control type= 'date'\n                                                    isValid={ touched.dateStart && !errors.dateStart }\n                                                    isInvalid={ touched.dateStart && errors.dateStart }\n                                                    placeholder='Date de début'\n                                                    onBlur={ handleBlur }\n                                                    value={ values.dateStart }\n                                                    onChange={ handleChange }>\n                                      </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} md={{span: 5, offset: 1}} controlId={ 'dateEnd' }>                   { /*End*/ }\n                                      <Form.Label style={{color: '#666666'}} classname={styles.dateDropDownTitles}> Date de fin </Form.Label>\n                                      <Form.Control type= 'date'\n                                                    isValid={ touched.dateEnd && !errors.dateEnd }\n                                                    isInvalid={ touched.dateEnd && errors.dateEnd }\n                                                    placeholder='Date de fin'\n                                                    onBlur={ handleBlur }\n                                                    value={ values.dateEnd }\n                                                    onChange={ handleChange }>\n                                      </Form.Control>\n                                    </Form.Group>\n                                  </Form.Row>\n                                </div>\n                              </DropdownButton>\n                            </Row>\n                          </Col>\n                          <Col md={{span: 5, offset: 0}}>\n                            <div className={styles.iconStyle}>\n                              <Row className=\"justify-content-md-center\" >\n                                <div style={{display: 'flex', justifyContent: 'flex-end', width: '100%'}}>\n                                  <CalendarIcon className={'float-rigth'}/>\n                                </div>\n                              </Row>\n                            </div>\n                          </Col>\n                        </Row>\n                      </Container>\n                    </div>\n                  </Row>\n                </Col>\n\n                <Col md={{span: 3, offset: 0}}>\n                  <Row className=\"justify-content-md-center\">\n                    <div className={styles.FormElement}>\n                      <Container>\n                        <Row>\n                          <Col md={{span: 7}}>\n                            <Row>\n                              <p className={styles.formItemTitle}>Agrégation</p>\n                            </Row>\n                            <Row>\n                              <DropdownButton as={ButtonGroup} className={styles.dropdownElement} variant='outline-secondary' title='Période'>\n                                <Form.Group as={Col} tag={'fieldset'}>                            { /*aggregation period*/ }\n                                  <FormRadioElement name='timeScale'\n                                                    currentValue={values.timeScale}\n                                                    value='jour'\n                                                    label='Jour'\n                                                    onChange={ () => setFieldValue('timeScale', 'jour')  }\n                                                    onClick={ () => null}\n                                  />\n                                  <FormRadioElement name='timeScale'\n                                                    currentValue={values.timeScale}\n                                                    value='semaine'\n                                                    label='Semaine'\n                                                    onChange={ () => setFieldValue('timeScale', 'semaine')  }\n                                                    onClick={ () => null }\n                                  />\n                                  <FormRadioElement name='timeScale'\n                                                    currentValue={values.timeScale}\n                                                    value='mois'\n                                                    label='Mois'\n                                                    onChange={ () => setFieldValue('timeScale', 'mois')  }\n                                                    onClick={ () => null }\n                                  />\n                                  <FormRadioElement name='timeScale'\n                                                    currentValue={values.timeScale}\n                                                    value='annee'\n                                                    label='Année'\n                                                    onChange={ () => setFieldValue('timeScale', 'annee')  }\n                                                    onClick={ () => null }\n                                  />\n                                </Form.Group>\n                              </DropdownButton>\n                            </Row>\n                          </Col>\n                          <Col md={{span: 5}}>\n                            <div className={styles.iconStyle}>\n                              <Row className=\"justify-content-md-center\">\n                                <div style={{display: 'flex', justifyContent: 'flex-end', width: '100%'}}>\n                                  <SearchIcon/>\n                                </div>\n                              </Row>\n                            </div>\n                          </Col>\n                        </Row>\n                      </Container>\n                    </div>\n                  </Row>\n                </Col>\n\n                <Col md={{span: 3, offset: 0}}>\n                  <Row className=\"justify-content-md-center\">\n                    <div className={styles.FormElement}>\n                      <Container>\n                        <Row>\n                          <Col md={{span: 7}}>\n                            <Row>\n                              <p className={styles.formItemTitle}>Type de graphe</p>\n                            </Row>\n                            <Row>\n                              <DropdownButton as={ButtonGroup} variant='outline-secondary' title='Type de données'>\n                                <Dropdown.Item onClick={ () => {  setType('line');\n                                                                  setFieldValue('graphType', 'line') } }\n\n                                >\n                                  Ligne\n                                </Dropdown.Item>\n                                <Dropdown.Item onClick={ () => {  setType('bar');\n                                                                  setFieldValue('graphType', 'bar') } }\n\n                                >\n                                  Histogramme\n                                </Dropdown.Item>\n                              </DropdownButton>\n                              {\n                                /*\n                                <DropdownButton as={ButtonGroup} className={styles.dropdownElement} variant='outline-secondary' title='Graphe'>\n                                  <Form.Group as={Col} tag={'fieldset'}>\n                                    <FormRadioElement name='graphType'\n                                                      currentValue={values.graphType}\n                                                      value='line'\n                                                      label='Line'\n                                                      onChange={ () => setFieldValue('graphType', 'line')  }\n                                                      onClick={ () => setType('line') }\n                                    />\n                                    <FormRadioElement name='graphType'\n                                                      currentValue={values.graphType}\n                                                      value='bar'\n                                                      label='Histogramme'\n                                                      onChange={ () => setFieldValue('graphType', 'bar')  }\n                                                      onClick={ () => setType('bar') }\n                                    />\n                                  </Form.Group>\n                                </DropdownButton>\n                                */\n                              }\n                            </Row>\n                          </Col>\n                          <Col md={{span: 5}}>\n                            <div className={styles.iconStyle}>\n                              <Row className=\"justify-content-md-center\">\n                                <div style={{display: 'flex', justifyContent: 'flex-end', width: '100%'}}>\n                                  <BarChartIcon/>\n                                </div>\n                              </Row>\n                            </div>\n                          </Col>\n                        </Row>\n                      </Container>\n                    </div>\n                  </Row>\n                </Col>\n\n                <Col md={{span: 3, offset: 0}}>\n                  <Row className=\"justify-content-md-center\">\n                    <div className={styles.FormElement}>\n                      <Container>\n                        <style type=\"text/css\">\n                          {`\n                            .btn-split-custom {\n                              font-size: 25px;\n                              backgroundColor: white;\n                              border-width: 0px;\n                              color: #90c261;\n                            }\n                          `}\n                        </style>\n                        <Row>\n                          <Col md={{span: 7}}>\n                            <Row>\n                              <p className={styles.formItemTitle}>Aliments étudiés</p>\n                            </Row>\n                            <Row>\n                              <DropdownButton as={ButtonGroup} className={styles.dropdownElement} variant='outline-secondary' title=\"Classes\" >\n                                <Dropdown as={Col} drop='right'>\n                                  <Row>\n                                    <Col md={{span: 9, offset: 0}}>\n                                      <div className={styles.centerComponent}>\n                                        <FormCheckboxElement  name='categoryCheck'\n                                                              id='inevitable'\n                                                              onChange={ handleChange }\n                                                              value='Inevitable'\n                                                              label='Inévitable'\n                                        />\n                                      </div>\n                                    </Col>\n                                    <Col md={{span: 3, offset: 0}}>\n                                      <Dropdown.Toggle split variant=\"split-custom\" id=\"dropdown-split-basic\" />\n                                    </Col>\n\n                                    <Dropdown.Menu>\n                                      <Col>\n                                        <FormCheckboxElement  name='foodCheck'\n                                                              id='peauFruit'\n                                                              onChange={ handleChange }\n                                                              value='PeauFruit'\n                                                              label='Peau de fruit'\n                                        />\n                                        <FormCheckboxElement  name='foodCheck'\n                                                              id='os'\n                                                              onChange={ handleChange }\n                                                              value='Os'\n                                                              label='Os'\n                                        />\n                                      </Col>\n                                    </Dropdown.Menu>\n                                  </Row>\n                                </Dropdown>\n\n                                <Dropdown.Divider />\n\n                                <Dropdown as={Col} drop='right'>\n                                <Row>\n                                  <Col md={{span: 9, offset: 0}}>\n                                    <div className={styles.centerComponent}>\n                                      <FormCheckboxElement  name='categoryCheck'\n                                                            id='proteine'\n                                                            onChange={ handleChange }\n                                                            value='Proteine'\n                                                            label='Protéine'\n                                      />\n                                    </div>\n                                  </Col>\n\n                                  <Col md={{span: 3, offset: 0}}>\n                                    <Dropdown.Toggle split variant=\"split-custom\" id=\"dropdown-split-basic\" />\n                                  </Col>\n\n                                  <Dropdown.Menu>\n                                    <Col>\n                                      <FormCheckboxElement  name='foodCheck'\n                                                            id='jambon'\n                                                            onChange={ handleChange }\n                                                            value='Jambon'\n                                                            label='Jambon'\n                                      />\n                                      <FormCheckboxElement  name='foodCheck'\n                                                            id='poisson'\n                                                            onChange={ handleChange }\n                                                            value='Poisson'\n                                                            label='Poisson'\n                                      />\n                                      <FormCheckboxElement  name='foodCheck'\n                                                            id='saucisse'\n                                                            onChange={ handleChange }\n                                                            value='Saucisse'\n                                                            label='Saucisse'\n                                      />\n                                      <FormCheckboxElement  name='foodCheck'\n                                                            id='steak'\n                                                            onChange={ handleChange }\n                                                            value='Steak'\n                                                            label='Steak'\n                                      />\n                                    </Col>\n                                  </Dropdown.Menu>\n                                </Row>\n                                </Dropdown>\n\n                              <Dropdown.Divider />\n\n                                <Dropdown as={Col} drop='right'>\n                                <Row>\n                                  <Col md='9'>\n                                    <FormCheckboxElement  name='categoryCheck'\n                                                          id='fromage'\n                                                          onChange={ handleChange }\n                                                          value='Fromage'\n                                                          label='Fromage'\n                                    />\n                                  </Col>\n\n                                  <Col md={{span: 3, offset: 0}}>\n                                    <Dropdown.Toggle split variant=\"split-custom\" id=\"dropdown-split-basic\" />\n                                  </Col>\n\n                                  <Dropdown.Menu>\n                                    <Dropdown.Item> Pas d'aliments dans cette catégories pour le moment </Dropdown.Item>\n                                  </Dropdown.Menu>\n                                  </Row>\n                                </Dropdown>\n\n                              <Dropdown.Divider />\n\n                                <Dropdown as={Col} drop='right'>\n                                <Row>\n                                  <Col md='9'>\n                                    <FormCheckboxElement  name='categoryCheck'\n                                                          id='legume'\n                                                          onChange={ handleChange }\n                                                          value='Legume'\n                                                          label='Légume'\n                                    />\n                                  </Col>\n                                  <Col md={{span: 3, offset: 0}}>\n                                    <Dropdown.Toggle split variant=\"split-custom\" id=\"dropdown-split-basic\"/>\n                                  </Col>\n\n                                  <Dropdown.Menu>\n                                    <FormCheckboxElement  name='foodCheck'\n                                                          id='carotte'\n                                                          onChange={ handleChange }\n                                                          value='Carotte'\n                                                          label='Carotte'\n                                    />\n                                    <FormCheckboxElement  name='foodCheck'\n                                                          id='poivron'\n                                                          onChange={ handleChange }\n                                                          value='Poivron'\n                                                          label='Poivron'\n                                    />\n                                    <FormCheckboxElement  name='foodCheck'\n                                                          id='lentille'\n                                                          onChange={ handleChange }\n                                                          value='Lentille'\n                                                          label='Lentille'\n                                    />\n                                    <FormCheckboxElement  name='foodCheck'\n                                                          id='champignon'\n                                                          onChange={ handleChange }\n                                                          value='Champignon'\n                                                          label='Champignon'\n                                    />\n                                  </Dropdown.Menu>\n                                </Row>\n                                </Dropdown>\n                              </DropdownButton>\n                            </Row>\n                          </Col>\n                          <Col md={{span: 5}}>\n                            <div className={styles.iconStyle}>\n                              <Row className=\"justify-content-md-center\">\n                                <div style={{display: 'flex', justifyContent: 'flex-end', width: '100%'}}>\n                                  <KnifeForkIcon/>\n                                </div>\n                              </Row>\n                            </div>\n                          </Col>\n                        </Row>\n                      </Container>\n                    </div>\n                  </Row>\n                </Col>\n              </Row>\n              {\n                !ready ?\n                  <Row className=\"justify-content-md-center\">\n                    <Col>\n                      <style type=\"text/css\">\n                        {`\n                          .btn-custom-grey {\n                            font-size: 20px;\n                            background-color: #666666;\n                            border-width: 0px;\n                            color: white;\n                          }\n\n                          .btn-custom-grey:hover {\n                            font-size: 20px;\n                            background-color: #525252;\n                            border-width: 0px;\n                            color: white;\n                          }\n                        `}\n                      </style>\n                      <div style={{display: 'flex', justifyContent: 'center', width: '100%', marginTop: '30px'}}>\n                        <Button variant='custom-grey' type='submit' disabled={isSubmitting}> Lancer la recherche </Button>\n                      </div>\n                    </Col>\n                  </Row>\n                :\n                  <></>\n              }\n            </Form>\n          </div>\n\n        ) } }\n      </Formik>\n\n      <br/>\n      <br/>\n\n      {\n        ready ?\n          type == 'line' ?\n            <Row>\n              <div className={styles.graphElement}>\n                <Row>\n                  <Col md={{span: 9, offset: 0}}>\n                    Données {rangeDataTitle}\n                  </Col>\n                  <Col md={{span: 1, offset: 1}} className={styles.dropdownElement}>\n                    <DropdownButton as={ButtonGroup} variant='outline-secondary' title='Type de données'>\n                      <Dropdown.Item onClick={ () => { createDisplayedData('mass', finalData, finalFoodData) } }>Masse (Kg) </Dropdown.Item>\n                      <Dropdown.Item onClick={ () => { createDisplayedData('cost', finalData, finalFoodData) } }>Coût (€) </Dropdown.Item>\n                      <Dropdown.Item onClick={ () => { createDisplayedData('co2', finalData, finalFoodData) } }>Consommation CO2 </Dropdown.Item>\n                      <Dropdown.Item onClick={ () => { createDisplayedData('tray', finalData, finalFoodData) } }> Nombre de plateau </Dropdown.Item>\n                    </DropdownButton>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col md={{span: 12}}>\n                    <div className={styles.divGraph}>\n                      <Line data={ displayedData }  allData={ finalData } dataType={ legendType } />\n                    </div>\n                  </Col>\n                </Row>\n              </div>\n            </Row>\n          :\n            <Row>\n              <div className={styles.graphElement}>\n                <Row>\n                  <Col md={{span: 9, offset: 0}}>\n                    Données {rangeDataTitle}\n                  </Col>\n                  <Col md={{span: 1, offset: 1}} className={styles.dropdownElement}>\n                    <DropdownButton as={ButtonGroup} variant='outline-secondary' title='Type de données'>\n                      <Dropdown.Item onClick={ () => { createDisplayedData('mass', finalData, finalFoodData) } }>Masse (Kg) </Dropdown.Item>\n                      <Dropdown.Item onClick={ () => { createDisplayedData('cost', finalData, finalFoodData) } }>Coût (€) </Dropdown.Item>\n                      <Dropdown.Item onClick={ () => { createDisplayedData('co2', finalData, finalFoodData) } }>Consommation CO2 </Dropdown.Item>\n                      <Dropdown.Item onClick={ () => { createDisplayedData('tray', finalData, finalFoodData) } }> Nombre de plateau </Dropdown.Item>\n                    </DropdownButton>\n                  </Col>\n               </Row>\n               <Row>\n                 <Col md={{span: 12}}>\n                   <div className={styles.divGraph}>\n                     <Bar data={ displayedBarData } keys={ finalData } allData={ finalData } dataType={ legendType } />\n                   </div>\n                 </Col>\n               </Row>\n              </div>\n            </Row>\n        :\n          <>\n          </>\n      }\n\n    </Col>\n  )\n}\n\nexport default AdminGaspi;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContentDiv\":\"ClientContainer_ContentDiv__eXWHo\",\"ClientTop\":\"ClientContainer_ClientTop__1NC7t\",\"ContentBigRow\":\"ClientContainer_ContentBigRow__iL3e0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"Graph_tooltip__1QyOO\"};","module.exports = __webpack_public_path__ + \"static/media/TopSideBar.bd95e180.png\";","import axios from 'axios';\nconst back_url = 'http://localhost:8081';\n\nconst AWS = require('aws-sdk');\n//const awsConfig = require('aws-config');\nconst awsConfig =  {\n  'region': 'eu-west-3',\n  'endpoint': 'http://localhost:8000',\n  'accessKeyId': 'BLBLBLBLBLBLB',\n  'secretAccessKey': 'BLBLBLBLBLLBLBLBLB'\n};\nAWS.config.update(awsConfig);\n\n//-------------------------------------------------- CLIENT -----------------------------------------------\n\nexport async function getChefAccount (login, password) {\n  console.log('In chef get account');\n  const url = back_url+'/account';\n  const res = await axios.get(url, { params: { login: login, password: password, type: 'chef' } } )\n    .then (res => {\n      //console.log('In then getChefAccount : '+JSON.stringify(res, null, 2));\n      return res.data.result;\n    })\n    .catch ( err => {\n      console.log('In catch getChefAccount : '+err);\n    })\n  console.log('Result : '+JSON.stringify(res, null, 2));\n  return res;\n}\n\n/**\n *\n *\n */\n export function createAccountForRestaurant (email, password, restaurantName) {\n   const data = { email: email, password: password, nameRestaurant: restaurantName, accountType: 'chef' };\n   const url = back_url+'/account';\n   return new Promise((resolve, reject) => {\n    axios.post(url, data)\n      .then(response => {\n        console.log('IN THEN IN API : '+JSON.stringify(response, null, 2));\n        resolve(response.data)\n      })\n      .catch(err => {\n        console.log('In catch in api : '+err)\n        reject(err)\n      })\n  })\n}\n\n/**\n *\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function updateUserPassword (old, newPassword, email) {\n   const data = { old: old, new: newPassword, email: email };\n   const url = back_url+'/account';\n   return new Promise((resolve, reject) => {\n    axios.put(url, data)\n      .then(response => {\n        console.log('IN THEN IN API : '+JSON.stringify(response, null, 2));\n        sleep(5000);\n        resolve(response.data)\n      })\n      .catch(err => {\n        console.log('In catch in api : '+err)\n        sleep(5000);\n        reject(err)\n      })\n  })\n}\nfunction sleep(milliseconds) {\n  const date = Date.now();\n  let currentDate = null;\n  do {\n    currentDate = Date.now();\n  } while (currentDate - date < milliseconds);\n}\n\n/**\n *\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n/* export function updateUserPassword (old, newPassword, email) {\n   console.log('IN update account');\n   return new Promise((resolve, reject) => {\n     console.log('In promise update account');\n     sleep(5000);\n     const docClient = new AWS.DynamoDB.DocumentClient();\n     const params = {\n       TableName: 'Account',\n       Key: {\n           emailAccount: email,\n       },\n       ConditionExpression: 'passwordAccount = :valPassword',\n       UpdateExpression: 'set passwordAccount = :value',\n       ExpressionAttributeValues: { // a map of substitutions for all attribute values\n           ':value': newPassword,\n           \":valPassword\": old,\n       },\n       ReturnValues: 'ALL_NEW',\n     };\n     console.log('Before the request');\n     sleep(5000);\n     docClient.update(params, function(error, data) {\n       if (error) {\n         console.log('ERROR DURING update account : '+error);\n         sleep(5000);\n         reject(error);\n       }\n       else {\n         console.log('SUCCESS update account : '+ JSON.stringify(data, null, 2) );\n         sleep(5000);\n         resolve({ result: data });\n       }\n     });\n   })\n}\n*/\n\n/**\n *  GET all the clients in the database\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function getAllClients () {\n  return new Promise((resolve, reject) => {\n    axios.get(back_url+'/clients')\n      .then(response => resolve(response.data))\n      .catch(err => reject(err))\n  })\n}\n\n/**\n *  POST create a new client in the database\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function createClient (newClient) {\n  return new Promise((resolve, reject) => {\n    axios.post(back_url+'/client', newClient )\n      .then(response => resolve(response.data.result))\n      .catch(err => reject(err))\n  })\n}\n\n//-------------------------------------------------- CONTRACT -----------------------------------------------\n\n/**\n *  GET all the contracts for a client\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function getAllContracts (nameClient) {\n  return new Promise((resolve, reject) => {\n    axios.get(back_url+'/client/'+nameClient+'/contracts')\n      .then(response => resolve(response.data))\n      .catch(err => reject(err))\n  })\n}\n\n/**\n *  POST create a new contract for a client\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function createContract (nameClient, newContract) {\n  const url = back_url+'/client/'+nameClient+'/contract';\n  return new Promise((resolve, reject) => {\n    axios.post(url, newContract )\n      .then(response => resolve(response.data.result))\n      .catch(err => reject(err))\n  })\n}\n\n//------------------------------------------------ RESTAURANT -----------------------------------------------\n\n/**\n *  GET all the contracts for a client\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function getAllRestaurants (nameContract) {\n  return new Promise((resolve, reject) => {\n    axios.get(back_url+'/contract/'+nameContract+'/restaurants')\n      .then(response => resolve(response.data))\n      .catch(err => reject(err))\n  })\n}\n\n/**\n *  POST create a new contract for a client\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function createRestaurant (nameContract, newRestaurant) {\n  newRestaurant.accountCreated = false;\n  const url = back_url+'/contract/'+nameContract+'/restaurant';\n  return new Promise((resolve, reject) => {\n    axios.post(url, newRestaurant)\n      .then(response => resolve(response.data.result))\n      .catch(err => reject(err))\n  })\n}\n\n// ------------------------------------------------ FOOD ----------------------------------------------------\n\n/**\n *  GET all the contracts for a client\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function getFood (nameFood) {\n  console.log('IN get food api : ' + nameFood);\n  return new Promise((resolve, reject) => {\n    axios.get( back_url+'/food/'+nameFood )\n      .then(response => {\n        resolve(response.data)\n      })\n      .catch(err => {\n        console.log('ERROR in get food API : '+err)\n        reject(err)\n      })\n  })\n}\n\n/**\n *  GET all the contracts for a client\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function getFoodsOfCategories (nameCategory) {\n  console.log('IN get foodOfCategories api : ' + nameCategory);\n  return new Promise((resolve, reject) => {\n    axios.get( back_url+'/category/'+nameCategory+'/foods' )\n      .then(response => resolve(response.data))\n      .catch(err => reject(err))\n  })\n}\n\n\n// ---------------------------------------------- GASPILLAGE -------------------------------------------------\n\n/**\n *  GET all the samples for a restaurant, date and food\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function getGaspillageData (restaurantName, foodName, dateValue) {\n   console.log('in get gaspi API : '+foodName+' - '+dateValue);\n   return new Promise((resolve, reject) => {\n    axios.get(back_url+'/gaspillage/'+restaurantName, { params: { food: foodName, date: dateValue } })\n      .then(response => resolve(response.data))\n      .catch(err => reject(err))\n  })\n}\n\n\n/**\n *  GET all the samples for a restaurant and date\n * @returns {Promise<unknown>} a Promise which contains a JSON\n */\n export function getAllSamplesForRestaurantAndDay (restaurantName, dateValue) {\n   //console.log('in get all samples API : '+dateValue);\n   return new Promise((resolve, reject) => {\n    axios.get(back_url+'/gaspillage/'+restaurantName, { params: { date: dateValue } })\n      .then(response => resolve(response.data))\n      .catch(err => reject(err))\n  })\n}\n\n\n/**\n *\n *\n */\n export function updateRestaurantAccountCreated (restaurantName) {\n   //console.log('in get all samples API : '+dateValue);\n   return new Promise((resolve, reject) => {\n    axios.put(back_url+'/restaurant/', { params: { name: restaurantName } })\n      .then(response => resolve(response.data))\n      .catch(err => reject(err))\n  })\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newContractContainer\":\"ContractForm_newContractContainer__2lDDj\",\"newContractForm\":\"ContractForm_newContractForm__8EdCL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ClientTopBarContainer\":\"ClientTopBar_ClientTopBarContainer__JJzKe\",\"bootstrapNavbar\":\"ClientTopBar_bootstrapNavbar__cX9s0\",\"barElement\":\"ClientTopBar_barElement__3Y8QI\",\"rightElements\":\"ClientTopBar_rightElements__3xeyv\",\"leftTopBar\":\"ClientTopBar_leftTopBar__3VqeH\",\"customNavLink\":\"ClientTopBar_customNavLink__2Hhfe\",\"image\":\"ClientTopBar_image__P6mWJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"globalContainer\":\"Account_globalContainer__2z0jB\",\"pageTitle\":\"Account_pageTitle__2K3K6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"globalContainer\":\"AdminGaspi_globalContainer__2SB6M\",\"btn-custom\":\"AdminGaspi_btn-custom__D3hl0\",\"FormElement\":\"AdminGaspi_FormElement__2mYhI\",\"formLabel\":\"AdminGaspi_formLabel__1LMIB\",\"graphElement\":\"AdminGaspi_graphElement__kD01u\",\"divGraph\":\"AdminGaspi_divGraph__Vg_Un\",\"dateDropDownTitles\":\"AdminGaspi_dateDropDownTitles__qHLZa\",\"formCheck\":\"AdminGaspi_formCheck__D3LVP\",\"dropdownDate\":\"AdminGaspi_dropdownDate__ZwFHq\",\"dropdownElement\":\"AdminGaspi_dropdownElement__IvydT\",\"iconStyle\":\"AdminGaspi_iconStyle__3snL6\",\"formItemTitle\":\"AdminGaspi_formItemTitle__3nkC6\",\"pageTitle\":\"AdminGaspi_pageTitle__mm8eQ\",\"centerRefresh\":\"AdminGaspi_centerRefresh__2WAA2\",\"centerComponent\":\"AdminGaspi_centerComponent__3BI-v\"};","module.exports = __webpack_public_path__ + \"static/media/Back_Connexion.5c0a1b82.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"adminSideBarContainer\":\"AdminSideBar_adminSideBarContainer__2Cux3\"};","import React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\nimport styles from './Graph.module.css'; //CSS\n\n// make sure parent container have a defined height when using responsive component,\n// otherwise height will be 0 and no chart will be rendered.\n// website examples showcase many properties, you'll often use just a few of them.\nconst Line = (props) => {\n\n  const toolTipElement = (tooltipProps) => {\n    console.log('IN TOOLTIP');\n\n    var foodIndex = props.allData.map( item => item.id ).indexOf(tooltipProps.point.serieId);\n    console.log('FOOD INDEX  = '+foodIndex);\n    var dateIndex = props.allData[foodIndex].data.map( item => item.x ).indexOf(tooltipProps.point.data.x);\n    console.log('THE INDEX : ' + dateIndex);\n\n    return (\n      <>\n      <div className={styles.tooltip}>\n        { tooltipProps.point.data.y }\n      </div>\n      {\n        /*\n        <div style={{backgroundColor: 'white'}}>\n          <> { tooltipProps.point.serieId } </>\n          <br/>\n          <>{ tooltipProps.point.data.x } : </> <> { tooltipProps.point.data.y } </>\n          <br/>\n          <> Moyenne : </> <> { tooltipProps.point.data.y==0 ? 0 :(tooltipProps.point.data.y / props.allData[foodIndex].data[dateIndex].tray).toFixed(2) } </>\n        </div>\n        */\n      }\n      </>\n    )\n  };\n\n  console.log('RERENDER THE LINE : '+JSON.stringify(props.data, null, 2));\n\n  return(\n    <ResponsiveLine\n    tooltip={toolTipElement}\n    isInteractive={true}\n    useMesh={true}\n    debugMesh={false}\n    data={props.data}\n    margin={{ top: 20, right: 50, bottom: 80, left: 60 }}\n    xScale={{ type: 'point' }}\n    yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\n    curve=\"linear\"\n    axisTop={null}\n    axisRight={null}\n    axisBottom={{\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'Temps',\n        legendOffset: 36,\n        legendPosition: 'middle'\n    }}\n    axisLeft={{\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: props.dataType,\n        legendOffset: -40,\n        legendPosition: 'middle'\n    }}\n    colors={{ scheme: 'nivo' }}\n    pointSize={11}\n    pointColor={{ theme: 'background' }}\n    pointBorderWidth={3}\n    pointBorderColor={{ from: 'serieColor', modifiers: [] }}\n    pointLabel=\"y\"\n    pointLabelYOffset={-12}\n    useMesh={true}\n    legends={[\n        {\n            anchor: 'bottom-left',\n            direction: 'row',\n            justify: false,\n            translateX: 0,\n            translateY: 72,\n            itemsSpacing: 0,\n            itemDirection: 'left-to-right',\n            itemWidth: 80,\n            itemHeight: 20,\n            itemOpacity: 0.75,\n            symbolSize: 12,\n            symbolShape: 'circle',\n            symbolBorderColor: 'rgba(0, 0, 0, .5)',\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemBackground: 'rgba(0, 0, 0, .03)',\n                        itemOpacity: 1\n                    }\n                }\n            ]\n        }\n    ]}\n/>\n\n);\n}\n\nexport default Line;\n\n\n/*\n\n<ResponsiveLine\n  data={props.data}\n  margin={{\n    top: 50,\n    right: 110,\n    bottom: 50,\n    left: 60\n  }}\n  xScale={{\n    type: 'point'\n  }}\n  yScale={{\n    type: 'linear',\n    stacked: false,\n    min: 'auto',\n    max: 'auto'\n  }}\n  minY=\"auto\"\n  maxY=\"auto\"\n  stacked={true}\n  curve=\"linear\"\n  axisBottom={{\n    orient: 'bottom',\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    legend: 'Temps',\n    legendOffset: 36,\n    legendPosition: 'middle'\n  }}\n  axisLeft={{\n    orient: 'left',\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    legend: 'Gaspillage en Kg',\n    legendOffset: -40,\n    legendPosition: 'middle'\n  }}\n  dotSize={10}\n  dotColor=\"inherit:darker(0.3)\"\n  dotBorderWidth={2}\n  dotBorderColor=\"#ffffff\"\n  enableDotLabel={true}\n  dotLabel=\"y\"\n  dotLabelYOffset={-12}\n  animate={true}\n  motionStiffness={90}\n  motionDamping={15}\n  isInteractive={true}\n  legends={[\n    {\n      anchor: 'bottom-right',\n      direction: 'column',\n      justify: false,\n      translateX: 100,\n      translateY: 0,\n      itemsSpacing: 0,\n      itemDirection: 'left-to-right',\n      itemWidth: 80,\n      itemHeight: 20,\n      itemOpacity: 0.75,\n      symbolSize: 12,\n      symbolShape: 'circle',\n      symbolBorderColor: 'rgba(0, 0, 0, .5)',\n      effects: [\n        {\n          on: 'hover',\n          style: {\n            itemBackground: 'rgba(0, 0, 0, .03)',\n            itemOpacity: 1\n          }\n        }\n      ]\n    }\n  ]}\n/>\n*/\n","import React from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\nimport styles from './Graph.module.css'; //CSS\n\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\nconst MyResponsiveBar = (props) => {\n\n  console.log('IN RENDER BAR !');\n  console.log('the BAR data : '+JSON.stringify(props.data, null, 2));\n  console.log('the BAR keys : '+JSON.stringify(props.keys, null, 2));\n\n  console.log('the BAR ALL DATA : '+JSON.stringify(props.allData, null, 2));\n\n\n  const keys = [props.keys.map( item => { return item.id } )];\n\n  const toolTipElement = (node) => {\n    console.log('IN TOOLTIP : '+JSON.stringify(node, null, 2));\n    var foodIndex = props.allData.map( item => item.id ).indexOf(node.id);\n    console.log('FOOD INDEX  = '+foodIndex);\n    var dateIndex = props.allData[foodIndex].data.map( item => item.x ).indexOf(node.indexValue);\n    console.log('THE INDEX : ' + dateIndex);\n\n    return (\n      <>\n      <div>\n        { node.value }\n      </div>\n      {\n        /*\n        <div style={{backgroundColor: 'white', display: 'none'}}>\n          <> { node.id } </>\n          <br/>\n          <>{ node.indexValue } : </> <>  </>\n          <br/>\n          <> Moyenne : </> <> { node.value==0 ? 0 :(node.value / props.allData[foodIndex].data[dateIndex].tray).toFixed(2) } </>\n        </div>\n        */\n      }\n\n      </>\n    )\n  };\n\n  return (\n    <ResponsiveBar\n        tooltip={ node => toolTipElement(node) }\n        data={props.data}\n        keys={ keys[0] }\n        indexBy=\"date\"\n        margin={{ top: 50, right: 30, bottom: 80, left: 60 }}\n        borderRadius={5}\n        padding={0.5}\n        groupMode=\"grouped\"\n        colors={{ scheme: 'nivo' }}\n        defs={[\n            {\n                id: 'dots',\n                type: 'patternDots',\n                background: 'inherit',\n                color: '#38bcb2',\n                size: 4,\n                padding: 1,\n                stagger: true\n            },\n            {\n                id: 'lines',\n                type: 'patternLines',\n                background: 'inherit',\n                color: '#eed312',\n                rotation: -45,\n                lineWidth: 6,\n                spacing: 10\n            }\n        ]}\n        fill={[\n            {\n                match: {\n                    id: 'fries'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'sandwich'\n                },\n                id: 'lines'\n            }\n        ]}\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Dates',\n            legendPosition: 'middle',\n            legendOffset: 32\n        }}\n        axisLeft={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Quantité',\n            legendPosition: 'middle',\n            legendOffset: -40\n        }}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n        legends={[\n            {\n                dataFrom: 'keys',\n                anchor: 'bottom-left',\n                direction: 'row',\n                justify: false,\n                translateX: 0,\n                translateY: 72,\n                itemsSpacing: 2,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemDirection: 'left-to-right',\n                itemOpacity: 0.85,\n                symbolSize: 20,\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n    />\n  )\n}\n\nexport default MyResponsiveBar;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"globalContainer\":\"ClientDashboard_globalContainer__3x1Gw\",\"dividongColumn\":\"ClientDashboard_dividongColumn__3fTTC\",\"dashboardElement\":\"ClientDashboard_dashboardElement__1r9TT\",\"dashboardBarChartGlobal\":\"ClientDashboard_dashboardBarChartGlobal__10u1J\",\"dashboardBarChart\":\"ClientDashboard_dashboardBarChart__1VnIl\",\"dashboardPieChartGlobal\":\"ClientDashboard_dashboardPieChartGlobal__1-K-N\",\"dashboardPieChart\":\"ClientDashboard_dashboardPieChart__3Cnrl\",\"bottomElement\":\"ClientDashboard_bottomElement__33BUA\",\"pageTitle\":\"ClientDashboard_pageTitle__1Xaw0\",\"barChartTitle\":\"ClientDashboard_barChartTitle__3y8WP\",\"pieChartTitle\":\"ClientDashboard_pieChartTitle__iBd1d\",\"dividerDiv\":\"ClientDashboard_dividerDiv__3gJIF\",\"nivoBarStyle\":\"ClientDashboard_nivoBarStyle__QH3j-\",\"percent\":\"ClientDashboard_percent__Mo_Fr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newRestaurant\":\"RestaurantForm_newRestaurant__34GUh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"restaurantDetails\":\"RestaurantDetails_restaurantDetails__3gMfy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContractDetails\":\"ContractDetails_ContractDetails__OXn6p\"};","module.exports = __webpack_public_path__ + \"static/media/image.8f676946.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"globalContainer\":\"Connexion_globalContainer__15cEr\",\"leftImage\":\"Connexion_leftImage__2I2iN\",\"svgDiv\":\"Connexion_svgDiv__3Mv6Z\",\"svg\":\"Connexion_svg__1H_Jz\",\"rigthForm\":\"Connexion_rigthForm__3flB7\",\"centerText\":\"Connexion_centerText__ZgICg\",\"title\":\"Connexion_title__35L61\",\"subtitle\":\"Connexion_subtitle__2daLX\",\"formElement\":\"Connexion_formElement__1vRFi\",\"submitButton\":\"Connexion_submitButton__3btbb\",\"centerComponent\":\"Connexion_centerComponent__PoTHX\"};","import React from 'react';                    // REACT\nimport styles from './Form.module.css';       //CSS\n\nimport Form from 'react-bootstrap/Form';      //BOOTSTRAP\n\nfunction FormCheckboxElement(props) {\n\n  return(\n    <Form.Check type='checkbox'\n                className={styles.formCheck}\n                id={'checkbox-'+props.id}\n                name={ props.name }\n\n    >\n      <Form.Check.Input type='checkbox'\n                        name={ props.name }\n                        value={ props.value }\n                        onChange={ props.onChange }\n      />\n      <Form.Check.Label name={ props.name } className={styles.formLabel}> {props.label} </Form.Check.Label>\n    </Form.Check>\n  )\n}\n\nexport default FormCheckboxElement;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageDiv\":\"ClientSideBar_imageDiv__4nHjN\",\"image\":\"ClientSideBar_image__1D7O7\",\"ClientSideBarContainer\":\"ClientSideBar_ClientSideBarContainer__2Sa-k\",\"ClientSideBarElement\":\"ClientSideBar_ClientSideBarElement__Gjhk-\",\"iconDiv\":\"ClientSideBar_iconDiv__2Ee1l\",\"iconDivWhenSelected\":\"ClientSideBar_iconDivWhenSelected__Qcdne\",\"textElement\":\"ClientSideBar_textElement__1SW39\",\"sameColorMark\":\"ClientSideBar_sameColorMark__2HZib\",\"whiteSelectedMark\":\"ClientSideBar_whiteSelectedMark__3cawb\",\"SelectedClientSideBarElement\":\"ClientSideBar_SelectedClientSideBarElement__1yZg8\",\"WhiteMark\":\"ClientSideBar_WhiteMark__35aze\"};","import React from 'react';\n\nconst Error = ({ touched, message }) => {\n  if (!touched) {\n    return null;\n  }\n  if (message) {\n    return <div style={{color: 'red'}} className='form-message invalid'> {message} </div>;\n  }\n  else {\n    return null;\n  }\n}\n\nexport default Error;\n"],"sourceRoot":""}